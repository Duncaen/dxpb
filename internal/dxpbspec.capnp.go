// Code generated by capnpc-go. DO NOT EDIT.

package spec

import (
	context "golang.org/x/net/context"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
	server "zombiezen.com/go/capnproto2/server"
)

type BuildEndResult uint16

// BuildEndResult_TypeID is the unique identifier for the type BuildEndResult.
const BuildEndResult_TypeID = 0xaf55ffc6814f610a

// Values of BuildEndResult.
const (
	BuildEndResult_ok  BuildEndResult = 0
	BuildEndResult_err BuildEndResult = 1
)

// String returns the enum's constant name.
func (c BuildEndResult) String() string {
	switch c {
	case BuildEndResult_ok:
		return "ok"
	case BuildEndResult_err:
		return "err"

	default:
		return ""
	}
}

// BuildEndResultFromString returns the enum value with a name,
// or the zero value if there's no such value.
func BuildEndResultFromString(c string) BuildEndResult {
	switch c {
	case "ok":
		return BuildEndResult_ok
	case "err":
		return BuildEndResult_err

	default:
		return 0
	}
}

type BuildEndResult_List struct{ capnp.List }

func NewBuildEndResult_List(s *capnp.Segment, sz int32) (BuildEndResult_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return BuildEndResult_List{l.List}, err
}

func (l BuildEndResult_List) At(i int) BuildEndResult {
	ul := capnp.UInt16List{List: l.List}
	return BuildEndResult(ul.At(i))
}

func (l BuildEndResult_List) Set(i int, v BuildEndResult) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Arch uint16

// Arch_TypeID is the unique identifier for the type Arch.
const Arch_TypeID = 0x838f23a24aa17915

// Values of Arch.
const (
	Arch_noarch      Arch = 0
	Arch_aarch64     Arch = 1
	Arch_aarch64Musl Arch = 2
	Arch_armV6       Arch = 3
	Arch_armV6Musl   Arch = 4
	Arch_armV7       Arch = 5
	Arch_armV7Musl   Arch = 6
	Arch_i686        Arch = 7
	Arch_i686Musl    Arch = 8
	Arch_x8664       Arch = 9
	Arch_x8664Musl   Arch = 10
)

// String returns the enum's constant name.
func (c Arch) String() string {
	switch c {
	case Arch_noarch:
		return "noarch"
	case Arch_aarch64:
		return "aarch64"
	case Arch_aarch64Musl:
		return "aarch64Musl"
	case Arch_armV6:
		return "armV6"
	case Arch_armV6Musl:
		return "armV6Musl"
	case Arch_armV7:
		return "armV7"
	case Arch_armV7Musl:
		return "armV7Musl"
	case Arch_i686:
		return "i686"
	case Arch_i686Musl:
		return "i686Musl"
	case Arch_x8664:
		return "x8664"
	case Arch_x8664Musl:
		return "x8664Musl"

	default:
		return ""
	}
}

// ArchFromString returns the enum value with a name,
// or the zero value if there's no such value.
func ArchFromString(c string) Arch {
	switch c {
	case "noarch":
		return Arch_noarch
	case "aarch64":
		return Arch_aarch64
	case "aarch64Musl":
		return Arch_aarch64Musl
	case "armV6":
		return Arch_armV6
	case "armV6Musl":
		return Arch_armV6Musl
	case "armV7":
		return Arch_armV7
	case "armV7Musl":
		return Arch_armV7Musl
	case "i686":
		return Arch_i686
	case "i686Musl":
		return Arch_i686Musl
	case "x8664":
		return Arch_x8664
	case "x8664Musl":
		return Arch_x8664Musl

	default:
		return 0
	}
}

type Arch_List struct{ capnp.List }

func NewArch_List(s *capnp.Segment, sz int32) (Arch_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return Arch_List{l.List}, err
}

func (l Arch_List) At(i int) Arch {
	ul := capnp.UInt16List{List: l.List}
	return Arch(ul.At(i))
}

func (l Arch_List) Set(i int, v Arch) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Repo struct{ capnp.Struct }

// Repo_TypeID is the unique identifier for the type Repo.
const Repo_TypeID = 0xe9176f9504047e88

func NewRepo(s *capnp.Segment) (Repo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Repo{st}, err
}

func NewRootRepo(s *capnp.Segment) (Repo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Repo{st}, err
}

func ReadRootRepo(msg *capnp.Message) (Repo, error) {
	root, err := msg.RootPtr()
	return Repo{root.Struct()}, err
}

func (s Repo) String() string {
	str, _ := text.Marshal(0xe9176f9504047e88, s.Struct)
	return str
}

func (s Repo) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Repo) Arch() Arch {
	return Arch(s.Struct.Uint16(0))
}

func (s Repo) SetArch(v Arch) {
	s.Struct.SetUint16(0, uint16(v))
}

// Repo_List is a list of Repo.
type Repo_List struct{ capnp.List }

// NewRepo creates a new list of Repo.
func NewRepo_List(s *capnp.Segment, sz int32) (Repo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Repo_List{l}, err
}

func (s Repo_List) At(i int) Repo { return Repo{s.List.Struct(i)} }

func (s Repo_List) Set(i int, v Repo) error { return s.List.SetStruct(i, v.Struct) }

func (s Repo_List) String() string {
	str, _ := text.MarshalList(0xe9176f9504047e88, s.List)
	return str
}

// Repo_Promise is a wrapper for a Repo promised by a client call.
type Repo_Promise struct{ *capnp.Pipeline }

func (p Repo_Promise) Struct() (Repo, error) {
	s, err := p.Pipeline.Struct()
	return Repo{s}, err
}

type Wrkr struct{ capnp.Struct }

// Wrkr_TypeID is the unique identifier for the type Wrkr.
const Wrkr_TypeID = 0xc0823e5353e8c1f8

func NewWrkr(s *capnp.Segment) (Wrkr, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Wrkr{st}, err
}

func NewRootWrkr(s *capnp.Segment) (Wrkr, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Wrkr{st}, err
}

func ReadRootWrkr(msg *capnp.Message) (Wrkr, error) {
	root, err := msg.RootPtr()
	return Wrkr{root.Struct()}, err
}

func (s Wrkr) String() string {
	str, _ := text.Marshal(0xc0823e5353e8c1f8, s.Struct)
	return str
}

func (s Wrkr) Arch() Arch {
	return Arch(s.Struct.Uint16(0))
}

func (s Wrkr) SetArch(v Arch) {
	s.Struct.SetUint16(0, uint16(v))
}

func (s Wrkr) HostArch() Arch {
	return Arch(s.Struct.Uint16(2))
}

func (s Wrkr) SetHostArch(v Arch) {
	s.Struct.SetUint16(2, uint16(v))
}

func (s Wrkr) IsCross() bool {
	return s.Struct.Bit(32)
}

func (s Wrkr) SetIsCross(v bool) {
	s.Struct.SetBit(32, v)
}

func (s Wrkr) Speed() uint32 {
	return s.Struct.Uint32(8)
}

func (s Wrkr) SetSpeed(v uint32) {
	s.Struct.SetUint32(8, v)
}

// Wrkr_List is a list of Wrkr.
type Wrkr_List struct{ capnp.List }

// NewWrkr creates a new list of Wrkr.
func NewWrkr_List(s *capnp.Segment, sz int32) (Wrkr_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0}, sz)
	return Wrkr_List{l}, err
}

func (s Wrkr_List) At(i int) Wrkr { return Wrkr{s.List.Struct(i)} }

func (s Wrkr_List) Set(i int, v Wrkr) error { return s.List.SetStruct(i, v.Struct) }

func (s Wrkr_List) String() string {
	str, _ := text.MarshalList(0xc0823e5353e8c1f8, s.List)
	return str
}

// Wrkr_Promise is a wrapper for a Wrkr promised by a client call.
type Wrkr_Promise struct{ *capnp.Pipeline }

func (p Wrkr_Promise) Struct() (Wrkr, error) {
	s, err := p.Pipeline.Struct()
	return Wrkr{s}, err
}

type Pkg struct{ capnp.Struct }

// Pkg_TypeID is the unique identifier for the type Pkg.
const Pkg_TypeID = 0xf12a2f6af8778f16

func NewPkg(s *capnp.Segment) (Pkg, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Pkg{st}, err
}

func NewRootPkg(s *capnp.Segment) (Pkg, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Pkg{st}, err
}

func ReadRootPkg(msg *capnp.Message) (Pkg, error) {
	root, err := msg.RootPtr()
	return Pkg{root.Struct()}, err
}

func (s Pkg) String() string {
	str, _ := text.Marshal(0xf12a2f6af8778f16, s.Struct)
	return str
}

func (s Pkg) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Pkg) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Pkg) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Pkg) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Pkg) Arch() Arch {
	return Arch(s.Struct.Uint16(0))
}

func (s Pkg) SetArch(v Arch) {
	s.Struct.SetUint16(0, uint16(v))
}

func (s Pkg) Ver() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Pkg) HasVer() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Pkg) VerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Pkg) SetVer(v string) error {
	return s.Struct.SetText(1, v)
}

// Pkg_List is a list of Pkg.
type Pkg_List struct{ capnp.List }

// NewPkg creates a new list of Pkg.
func NewPkg_List(s *capnp.Segment, sz int32) (Pkg_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return Pkg_List{l}, err
}

func (s Pkg_List) At(i int) Pkg { return Pkg{s.List.Struct(i)} }

func (s Pkg_List) Set(i int, v Pkg) error { return s.List.SetStruct(i, v.Struct) }

func (s Pkg_List) String() string {
	str, _ := text.MarshalList(0xf12a2f6af8778f16, s.List)
	return str
}

// Pkg_Promise is a wrapper for a Pkg promised by a client call.
type Pkg_Promise struct{ *capnp.Pipeline }

func (p Pkg_Promise) Struct() (Pkg, error) {
	s, err := p.Pipeline.Struct()
	return Pkg{s}, err
}

type Package struct{ Client capnp.Client }

// Package_TypeID is the unique identifier for the type Package.
const Package_TypeID = 0x99cccf6b3f6e15c5

func (c Package) Details(ctx context.Context, params func(Package_details_Params) error, opts ...capnp.CallOption) Package_details_Results_Promise {
	if c.Client == nil {
		return Package_details_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x99cccf6b3f6e15c5,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:Package",
			MethodName:    "details",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Package_details_Params{Struct: s}) }
	}
	return Package_details_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Package) CanBeBuilt(ctx context.Context, params func(Package_canBeBuilt_Params) error, opts ...capnp.CallOption) Package_canBeBuilt_Results_Promise {
	if c.Client == nil {
		return Package_canBeBuilt_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x99cccf6b3f6e15c5,
			MethodID:      1,
			InterfaceName: "dxpbspec.capnp:Package",
			MethodName:    "canBeBuilt",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Package_canBeBuilt_Params{Struct: s}) }
	}
	return Package_canBeBuilt_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Package) CanBeBuiltBy(ctx context.Context, params func(Package_canBeBuiltBy_Params) error, opts ...capnp.CallOption) Package_canBeBuiltBy_Results_Promise {
	if c.Client == nil {
		return Package_canBeBuiltBy_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x99cccf6b3f6e15c5,
			MethodID:      2,
			InterfaceName: "dxpbspec.capnp:Package",
			MethodName:    "canBeBuiltBy",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Package_canBeBuiltBy_Params{Struct: s}) }
	}
	return Package_canBeBuiltBy_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Package_Server interface {
	Details(Package_details) error

	CanBeBuilt(Package_canBeBuilt) error

	CanBeBuiltBy(Package_canBeBuiltBy) error
}

func Package_ServerToClient(s Package_Server) Package {
	c, _ := s.(server.Closer)
	return Package{Client: server.New(Package_Methods(nil, s), c)}
}

func Package_Methods(methods []server.Method, s Package_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 3)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x99cccf6b3f6e15c5,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:Package",
			MethodName:    "details",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Package_details{c, opts, Package_details_Params{Struct: p}, Package_details_Results{Struct: r}}
			return s.Details(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x99cccf6b3f6e15c5,
			MethodID:      1,
			InterfaceName: "dxpbspec.capnp:Package",
			MethodName:    "canBeBuilt",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Package_canBeBuilt{c, opts, Package_canBeBuilt_Params{Struct: p}, Package_canBeBuilt_Results{Struct: r}}
			return s.CanBeBuilt(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x99cccf6b3f6e15c5,
			MethodID:      2,
			InterfaceName: "dxpbspec.capnp:Package",
			MethodName:    "canBeBuiltBy",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Package_canBeBuiltBy{c, opts, Package_canBeBuiltBy_Params{Struct: p}, Package_canBeBuiltBy_Results{Struct: r}}
			return s.CanBeBuiltBy(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	return methods
}

// Package_details holds the arguments for a server call to Package.details.
type Package_details struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Package_details_Params
	Results Package_details_Results
}

// Package_canBeBuilt holds the arguments for a server call to Package.canBeBuilt.
type Package_canBeBuilt struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Package_canBeBuilt_Params
	Results Package_canBeBuilt_Results
}

// Package_canBeBuiltBy holds the arguments for a server call to Package.canBeBuiltBy.
type Package_canBeBuiltBy struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Package_canBeBuiltBy_Params
	Results Package_canBeBuiltBy_Results
}

type Package_details_Params struct{ capnp.Struct }

// Package_details_Params_TypeID is the unique identifier for the type Package_details_Params.
const Package_details_Params_TypeID = 0x8ef013e6606d8801

func NewPackage_details_Params(s *capnp.Segment) (Package_details_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Package_details_Params{st}, err
}

func NewRootPackage_details_Params(s *capnp.Segment) (Package_details_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Package_details_Params{st}, err
}

func ReadRootPackage_details_Params(msg *capnp.Message) (Package_details_Params, error) {
	root, err := msg.RootPtr()
	return Package_details_Params{root.Struct()}, err
}

func (s Package_details_Params) String() string {
	str, _ := text.Marshal(0x8ef013e6606d8801, s.Struct)
	return str
}

// Package_details_Params_List is a list of Package_details_Params.
type Package_details_Params_List struct{ capnp.List }

// NewPackage_details_Params creates a new list of Package_details_Params.
func NewPackage_details_Params_List(s *capnp.Segment, sz int32) (Package_details_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Package_details_Params_List{l}, err
}

func (s Package_details_Params_List) At(i int) Package_details_Params {
	return Package_details_Params{s.List.Struct(i)}
}

func (s Package_details_Params_List) Set(i int, v Package_details_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Package_details_Params_List) String() string {
	str, _ := text.MarshalList(0x8ef013e6606d8801, s.List)
	return str
}

// Package_details_Params_Promise is a wrapper for a Package_details_Params promised by a client call.
type Package_details_Params_Promise struct{ *capnp.Pipeline }

func (p Package_details_Params_Promise) Struct() (Package_details_Params, error) {
	s, err := p.Pipeline.Struct()
	return Package_details_Params{s}, err
}

type Package_details_Results struct{ capnp.Struct }

// Package_details_Results_TypeID is the unique identifier for the type Package_details_Results.
const Package_details_Results_TypeID = 0xfe1dc95c70159cd5

func NewPackage_details_Results(s *capnp.Segment) (Package_details_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Package_details_Results{st}, err
}

func NewRootPackage_details_Results(s *capnp.Segment) (Package_details_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Package_details_Results{st}, err
}

func ReadRootPackage_details_Results(msg *capnp.Message) (Package_details_Results, error) {
	root, err := msg.RootPtr()
	return Package_details_Results{root.Struct()}, err
}

func (s Package_details_Results) String() string {
	str, _ := text.Marshal(0xfe1dc95c70159cd5, s.Struct)
	return str
}

func (s Package_details_Results) Pkg() (Pkg, error) {
	p, err := s.Struct.Ptr(0)
	return Pkg{Struct: p.Struct()}, err
}

func (s Package_details_Results) HasPkg() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Package_details_Results) SetPkg(v Pkg) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewPkg sets the pkg field to a newly
// allocated Pkg struct, preferring placement in s's segment.
func (s Package_details_Results) NewPkg() (Pkg, error) {
	ss, err := NewPkg(s.Struct.Segment())
	if err != nil {
		return Pkg{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Package_details_Results_List is a list of Package_details_Results.
type Package_details_Results_List struct{ capnp.List }

// NewPackage_details_Results creates a new list of Package_details_Results.
func NewPackage_details_Results_List(s *capnp.Segment, sz int32) (Package_details_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Package_details_Results_List{l}, err
}

func (s Package_details_Results_List) At(i int) Package_details_Results {
	return Package_details_Results{s.List.Struct(i)}
}

func (s Package_details_Results_List) Set(i int, v Package_details_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Package_details_Results_List) String() string {
	str, _ := text.MarshalList(0xfe1dc95c70159cd5, s.List)
	return str
}

// Package_details_Results_Promise is a wrapper for a Package_details_Results promised by a client call.
type Package_details_Results_Promise struct{ *capnp.Pipeline }

func (p Package_details_Results_Promise) Struct() (Package_details_Results, error) {
	s, err := p.Pipeline.Struct()
	return Package_details_Results{s}, err
}

func (p Package_details_Results_Promise) Pkg() Pkg_Promise {
	return Pkg_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Package_canBeBuilt_Params struct{ capnp.Struct }

// Package_canBeBuilt_Params_TypeID is the unique identifier for the type Package_canBeBuilt_Params.
const Package_canBeBuilt_Params_TypeID = 0xd86ab4ce49a45704

func NewPackage_canBeBuilt_Params(s *capnp.Segment) (Package_canBeBuilt_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Package_canBeBuilt_Params{st}, err
}

func NewRootPackage_canBeBuilt_Params(s *capnp.Segment) (Package_canBeBuilt_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Package_canBeBuilt_Params{st}, err
}

func ReadRootPackage_canBeBuilt_Params(msg *capnp.Message) (Package_canBeBuilt_Params, error) {
	root, err := msg.RootPtr()
	return Package_canBeBuilt_Params{root.Struct()}, err
}

func (s Package_canBeBuilt_Params) String() string {
	str, _ := text.Marshal(0xd86ab4ce49a45704, s.Struct)
	return str
}

// Package_canBeBuilt_Params_List is a list of Package_canBeBuilt_Params.
type Package_canBeBuilt_Params_List struct{ capnp.List }

// NewPackage_canBeBuilt_Params creates a new list of Package_canBeBuilt_Params.
func NewPackage_canBeBuilt_Params_List(s *capnp.Segment, sz int32) (Package_canBeBuilt_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Package_canBeBuilt_Params_List{l}, err
}

func (s Package_canBeBuilt_Params_List) At(i int) Package_canBeBuilt_Params {
	return Package_canBeBuilt_Params{s.List.Struct(i)}
}

func (s Package_canBeBuilt_Params_List) Set(i int, v Package_canBeBuilt_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Package_canBeBuilt_Params_List) String() string {
	str, _ := text.MarshalList(0xd86ab4ce49a45704, s.List)
	return str
}

// Package_canBeBuilt_Params_Promise is a wrapper for a Package_canBeBuilt_Params promised by a client call.
type Package_canBeBuilt_Params_Promise struct{ *capnp.Pipeline }

func (p Package_canBeBuilt_Params_Promise) Struct() (Package_canBeBuilt_Params, error) {
	s, err := p.Pipeline.Struct()
	return Package_canBeBuilt_Params{s}, err
}

type Package_canBeBuilt_Results struct{ capnp.Struct }

// Package_canBeBuilt_Results_TypeID is the unique identifier for the type Package_canBeBuilt_Results.
const Package_canBeBuilt_Results_TypeID = 0xf041bee81df2a213

func NewPackage_canBeBuilt_Results(s *capnp.Segment) (Package_canBeBuilt_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Package_canBeBuilt_Results{st}, err
}

func NewRootPackage_canBeBuilt_Results(s *capnp.Segment) (Package_canBeBuilt_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Package_canBeBuilt_Results{st}, err
}

func ReadRootPackage_canBeBuilt_Results(msg *capnp.Message) (Package_canBeBuilt_Results, error) {
	root, err := msg.RootPtr()
	return Package_canBeBuilt_Results{root.Struct()}, err
}

func (s Package_canBeBuilt_Results) String() string {
	str, _ := text.Marshal(0xf041bee81df2a213, s.Struct)
	return str
}

func (s Package_canBeBuilt_Results) InRepo() bool {
	return s.Struct.Bit(0)
}

func (s Package_canBeBuilt_Results) SetInRepo(v bool) {
	s.Struct.SetBit(0, v)
}

// Package_canBeBuilt_Results_List is a list of Package_canBeBuilt_Results.
type Package_canBeBuilt_Results_List struct{ capnp.List }

// NewPackage_canBeBuilt_Results creates a new list of Package_canBeBuilt_Results.
func NewPackage_canBeBuilt_Results_List(s *capnp.Segment, sz int32) (Package_canBeBuilt_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Package_canBeBuilt_Results_List{l}, err
}

func (s Package_canBeBuilt_Results_List) At(i int) Package_canBeBuilt_Results {
	return Package_canBeBuilt_Results{s.List.Struct(i)}
}

func (s Package_canBeBuilt_Results_List) Set(i int, v Package_canBeBuilt_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Package_canBeBuilt_Results_List) String() string {
	str, _ := text.MarshalList(0xf041bee81df2a213, s.List)
	return str
}

// Package_canBeBuilt_Results_Promise is a wrapper for a Package_canBeBuilt_Results promised by a client call.
type Package_canBeBuilt_Results_Promise struct{ *capnp.Pipeline }

func (p Package_canBeBuilt_Results_Promise) Struct() (Package_canBeBuilt_Results, error) {
	s, err := p.Pipeline.Struct()
	return Package_canBeBuilt_Results{s}, err
}

type Package_canBeBuiltBy_Params struct{ capnp.Struct }

// Package_canBeBuiltBy_Params_TypeID is the unique identifier for the type Package_canBeBuiltBy_Params.
const Package_canBeBuiltBy_Params_TypeID = 0xddaf85d2783e42a0

func NewPackage_canBeBuiltBy_Params(s *capnp.Segment) (Package_canBeBuiltBy_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Package_canBeBuiltBy_Params{st}, err
}

func NewRootPackage_canBeBuiltBy_Params(s *capnp.Segment) (Package_canBeBuiltBy_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Package_canBeBuiltBy_Params{st}, err
}

func ReadRootPackage_canBeBuiltBy_Params(msg *capnp.Message) (Package_canBeBuiltBy_Params, error) {
	root, err := msg.RootPtr()
	return Package_canBeBuiltBy_Params{root.Struct()}, err
}

func (s Package_canBeBuiltBy_Params) String() string {
	str, _ := text.Marshal(0xddaf85d2783e42a0, s.Struct)
	return str
}

func (s Package_canBeBuiltBy_Params) Worker() (Wrkr, error) {
	p, err := s.Struct.Ptr(0)
	return Wrkr{Struct: p.Struct()}, err
}

func (s Package_canBeBuiltBy_Params) HasWorker() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Package_canBeBuiltBy_Params) SetWorker(v Wrkr) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewWorker sets the worker field to a newly
// allocated Wrkr struct, preferring placement in s's segment.
func (s Package_canBeBuiltBy_Params) NewWorker() (Wrkr, error) {
	ss, err := NewWrkr(s.Struct.Segment())
	if err != nil {
		return Wrkr{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Package_canBeBuiltBy_Params_List is a list of Package_canBeBuiltBy_Params.
type Package_canBeBuiltBy_Params_List struct{ capnp.List }

// NewPackage_canBeBuiltBy_Params creates a new list of Package_canBeBuiltBy_Params.
func NewPackage_canBeBuiltBy_Params_List(s *capnp.Segment, sz int32) (Package_canBeBuiltBy_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Package_canBeBuiltBy_Params_List{l}, err
}

func (s Package_canBeBuiltBy_Params_List) At(i int) Package_canBeBuiltBy_Params {
	return Package_canBeBuiltBy_Params{s.List.Struct(i)}
}

func (s Package_canBeBuiltBy_Params_List) Set(i int, v Package_canBeBuiltBy_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Package_canBeBuiltBy_Params_List) String() string {
	str, _ := text.MarshalList(0xddaf85d2783e42a0, s.List)
	return str
}

// Package_canBeBuiltBy_Params_Promise is a wrapper for a Package_canBeBuiltBy_Params promised by a client call.
type Package_canBeBuiltBy_Params_Promise struct{ *capnp.Pipeline }

func (p Package_canBeBuiltBy_Params_Promise) Struct() (Package_canBeBuiltBy_Params, error) {
	s, err := p.Pipeline.Struct()
	return Package_canBeBuiltBy_Params{s}, err
}

func (p Package_canBeBuiltBy_Params_Promise) Worker() Wrkr_Promise {
	return Wrkr_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Package_canBeBuiltBy_Results struct{ capnp.Struct }

// Package_canBeBuiltBy_Results_TypeID is the unique identifier for the type Package_canBeBuiltBy_Results.
const Package_canBeBuiltBy_Results_TypeID = 0xf9e84ec0762dad79

func NewPackage_canBeBuiltBy_Results(s *capnp.Segment) (Package_canBeBuiltBy_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Package_canBeBuiltBy_Results{st}, err
}

func NewRootPackage_canBeBuiltBy_Results(s *capnp.Segment) (Package_canBeBuiltBy_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Package_canBeBuiltBy_Results{st}, err
}

func ReadRootPackage_canBeBuiltBy_Results(msg *capnp.Message) (Package_canBeBuiltBy_Results, error) {
	root, err := msg.RootPtr()
	return Package_canBeBuiltBy_Results{root.Struct()}, err
}

func (s Package_canBeBuiltBy_Results) String() string {
	str, _ := text.Marshal(0xf9e84ec0762dad79, s.Struct)
	return str
}

func (s Package_canBeBuiltBy_Results) InRepo() bool {
	return s.Struct.Bit(0)
}

func (s Package_canBeBuiltBy_Results) SetInRepo(v bool) {
	s.Struct.SetBit(0, v)
}

// Package_canBeBuiltBy_Results_List is a list of Package_canBeBuiltBy_Results.
type Package_canBeBuiltBy_Results_List struct{ capnp.List }

// NewPackage_canBeBuiltBy_Results creates a new list of Package_canBeBuiltBy_Results.
func NewPackage_canBeBuiltBy_Results_List(s *capnp.Segment, sz int32) (Package_canBeBuiltBy_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Package_canBeBuiltBy_Results_List{l}, err
}

func (s Package_canBeBuiltBy_Results_List) At(i int) Package_canBeBuiltBy_Results {
	return Package_canBeBuiltBy_Results{s.List.Struct(i)}
}

func (s Package_canBeBuiltBy_Results_List) Set(i int, v Package_canBeBuiltBy_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Package_canBeBuiltBy_Results_List) String() string {
	str, _ := text.MarshalList(0xf9e84ec0762dad79, s.List)
	return str
}

// Package_canBeBuiltBy_Results_Promise is a wrapper for a Package_canBeBuiltBy_Results promised by a client call.
type Package_canBeBuiltBy_Results_Promise struct{ *capnp.Pipeline }

func (p Package_canBeBuiltBy_Results_Promise) Struct() (Package_canBeBuiltBy_Results, error) {
	s, err := p.Pipeline.Struct()
	return Package_canBeBuiltBy_Results{s}, err
}

type Worker struct{ Client capnp.Client }

// Worker_TypeID is the unique identifier for the type Worker.
const Worker_TypeID = 0xbe925dd3f100fcb5

func (c Worker) Details(ctx context.Context, params func(Worker_details_Params) error, opts ...capnp.CallOption) Worker_details_Results_Promise {
	if c.Client == nil {
		return Worker_details_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xbe925dd3f100fcb5,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:Worker",
			MethodName:    "details",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Worker_details_Params{Struct: s}) }
	}
	return Worker_details_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Worker) Build(ctx context.Context, params func(Worker_build_Params) error, opts ...capnp.CallOption) Worker_build_Results_Promise {
	if c.Client == nil {
		return Worker_build_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xbe925dd3f100fcb5,
			MethodID:      1,
			InterfaceName: "dxpbspec.capnp:Worker",
			MethodName:    "build",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Worker_build_Params{Struct: s}) }
	}
	return Worker_build_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Worker) ListBuiltPkgs(ctx context.Context, params func(Worker_listBuiltPkgs_Params) error, opts ...capnp.CallOption) Worker_listBuiltPkgs_Results_Promise {
	if c.Client == nil {
		return Worker_listBuiltPkgs_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xbe925dd3f100fcb5,
			MethodID:      2,
			InterfaceName: "dxpbspec.capnp:Worker",
			MethodName:    "listBuiltPkgs",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Worker_listBuiltPkgs_Params{Struct: s}) }
	}
	return Worker_listBuiltPkgs_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Worker) CanBuildPkg(ctx context.Context, params func(Worker_canBuildPkg_Params) error, opts ...capnp.CallOption) Worker_canBuildPkg_Results_Promise {
	if c.Client == nil {
		return Worker_canBuildPkg_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xbe925dd3f100fcb5,
			MethodID:      3,
			InterfaceName: "dxpbspec.capnp:Worker",
			MethodName:    "canBuildPkg",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Worker_canBuildPkg_Params{Struct: s}) }
	}
	return Worker_canBuildPkg_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Worker_Server interface {
	Details(Worker_details) error

	Build(Worker_build) error

	ListBuiltPkgs(Worker_listBuiltPkgs) error

	CanBuildPkg(Worker_canBuildPkg) error
}

func Worker_ServerToClient(s Worker_Server) Worker {
	c, _ := s.(server.Closer)
	return Worker{Client: server.New(Worker_Methods(nil, s), c)}
}

func Worker_Methods(methods []server.Method, s Worker_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 4)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbe925dd3f100fcb5,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:Worker",
			MethodName:    "details",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Worker_details{c, opts, Worker_details_Params{Struct: p}, Worker_details_Results{Struct: r}}
			return s.Details(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbe925dd3f100fcb5,
			MethodID:      1,
			InterfaceName: "dxpbspec.capnp:Worker",
			MethodName:    "build",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Worker_build{c, opts, Worker_build_Params{Struct: p}, Worker_build_Results{Struct: r}}
			return s.Build(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbe925dd3f100fcb5,
			MethodID:      2,
			InterfaceName: "dxpbspec.capnp:Worker",
			MethodName:    "listBuiltPkgs",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Worker_listBuiltPkgs{c, opts, Worker_listBuiltPkgs_Params{Struct: p}, Worker_listBuiltPkgs_Results{Struct: r}}
			return s.ListBuiltPkgs(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbe925dd3f100fcb5,
			MethodID:      3,
			InterfaceName: "dxpbspec.capnp:Worker",
			MethodName:    "canBuildPkg",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Worker_canBuildPkg{c, opts, Worker_canBuildPkg_Params{Struct: p}, Worker_canBuildPkg_Results{Struct: r}}
			return s.CanBuildPkg(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	return methods
}

// Worker_details holds the arguments for a server call to Worker.details.
type Worker_details struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Worker_details_Params
	Results Worker_details_Results
}

// Worker_build holds the arguments for a server call to Worker.build.
type Worker_build struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Worker_build_Params
	Results Worker_build_Results
}

// Worker_listBuiltPkgs holds the arguments for a server call to Worker.listBuiltPkgs.
type Worker_listBuiltPkgs struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Worker_listBuiltPkgs_Params
	Results Worker_listBuiltPkgs_Results
}

// Worker_canBuildPkg holds the arguments for a server call to Worker.canBuildPkg.
type Worker_canBuildPkg struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Worker_canBuildPkg_Params
	Results Worker_canBuildPkg_Results
}

type Worker_details_Params struct{ capnp.Struct }

// Worker_details_Params_TypeID is the unique identifier for the type Worker_details_Params.
const Worker_details_Params_TypeID = 0xc74ff5c606018dd7

func NewWorker_details_Params(s *capnp.Segment) (Worker_details_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Worker_details_Params{st}, err
}

func NewRootWorker_details_Params(s *capnp.Segment) (Worker_details_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Worker_details_Params{st}, err
}

func ReadRootWorker_details_Params(msg *capnp.Message) (Worker_details_Params, error) {
	root, err := msg.RootPtr()
	return Worker_details_Params{root.Struct()}, err
}

func (s Worker_details_Params) String() string {
	str, _ := text.Marshal(0xc74ff5c606018dd7, s.Struct)
	return str
}

// Worker_details_Params_List is a list of Worker_details_Params.
type Worker_details_Params_List struct{ capnp.List }

// NewWorker_details_Params creates a new list of Worker_details_Params.
func NewWorker_details_Params_List(s *capnp.Segment, sz int32) (Worker_details_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Worker_details_Params_List{l}, err
}

func (s Worker_details_Params_List) At(i int) Worker_details_Params {
	return Worker_details_Params{s.List.Struct(i)}
}

func (s Worker_details_Params_List) Set(i int, v Worker_details_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Worker_details_Params_List) String() string {
	str, _ := text.MarshalList(0xc74ff5c606018dd7, s.List)
	return str
}

// Worker_details_Params_Promise is a wrapper for a Worker_details_Params promised by a client call.
type Worker_details_Params_Promise struct{ *capnp.Pipeline }

func (p Worker_details_Params_Promise) Struct() (Worker_details_Params, error) {
	s, err := p.Pipeline.Struct()
	return Worker_details_Params{s}, err
}

type Worker_details_Results struct{ capnp.Struct }

// Worker_details_Results_TypeID is the unique identifier for the type Worker_details_Results.
const Worker_details_Results_TypeID = 0xc8fe80289e1ed959

func NewWorker_details_Results(s *capnp.Segment) (Worker_details_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Worker_details_Results{st}, err
}

func NewRootWorker_details_Results(s *capnp.Segment) (Worker_details_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Worker_details_Results{st}, err
}

func ReadRootWorker_details_Results(msg *capnp.Message) (Worker_details_Results, error) {
	root, err := msg.RootPtr()
	return Worker_details_Results{root.Struct()}, err
}

func (s Worker_details_Results) String() string {
	str, _ := text.Marshal(0xc8fe80289e1ed959, s.Struct)
	return str
}

func (s Worker_details_Results) Wrkr() (Wrkr, error) {
	p, err := s.Struct.Ptr(0)
	return Wrkr{Struct: p.Struct()}, err
}

func (s Worker_details_Results) HasWrkr() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Worker_details_Results) SetWrkr(v Wrkr) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewWrkr sets the wrkr field to a newly
// allocated Wrkr struct, preferring placement in s's segment.
func (s Worker_details_Results) NewWrkr() (Wrkr, error) {
	ss, err := NewWrkr(s.Struct.Segment())
	if err != nil {
		return Wrkr{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Worker_details_Results_List is a list of Worker_details_Results.
type Worker_details_Results_List struct{ capnp.List }

// NewWorker_details_Results creates a new list of Worker_details_Results.
func NewWorker_details_Results_List(s *capnp.Segment, sz int32) (Worker_details_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Worker_details_Results_List{l}, err
}

func (s Worker_details_Results_List) At(i int) Worker_details_Results {
	return Worker_details_Results{s.List.Struct(i)}
}

func (s Worker_details_Results_List) Set(i int, v Worker_details_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Worker_details_Results_List) String() string {
	str, _ := text.MarshalList(0xc8fe80289e1ed959, s.List)
	return str
}

// Worker_details_Results_Promise is a wrapper for a Worker_details_Results promised by a client call.
type Worker_details_Results_Promise struct{ *capnp.Pipeline }

func (p Worker_details_Results_Promise) Struct() (Worker_details_Results, error) {
	s, err := p.Pipeline.Struct()
	return Worker_details_Results{s}, err
}

func (p Worker_details_Results_Promise) Wrkr() Wrkr_Promise {
	return Wrkr_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Worker_build_Params struct{ capnp.Struct }

// Worker_build_Params_TypeID is the unique identifier for the type Worker_build_Params.
const Worker_build_Params_TypeID = 0xb4f83bd186eb3119

func NewWorker_build_Params(s *capnp.Segment) (Worker_build_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Worker_build_Params{st}, err
}

func NewRootWorker_build_Params(s *capnp.Segment) (Worker_build_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Worker_build_Params{st}, err
}

func ReadRootWorker_build_Params(msg *capnp.Message) (Worker_build_Params, error) {
	root, err := msg.RootPtr()
	return Worker_build_Params{root.Struct()}, err
}

func (s Worker_build_Params) String() string {
	str, _ := text.Marshal(0xb4f83bd186eb3119, s.Struct)
	return str
}

func (s Worker_build_Params) Pkg() (Pkg, error) {
	p, err := s.Struct.Ptr(0)
	return Pkg{Struct: p.Struct()}, err
}

func (s Worker_build_Params) HasPkg() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Worker_build_Params) SetPkg(v Pkg) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewPkg sets the pkg field to a newly
// allocated Pkg struct, preferring placement in s's segment.
func (s Worker_build_Params) NewPkg() (Pkg, error) {
	ss, err := NewPkg(s.Struct.Segment())
	if err != nil {
		return Pkg{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Worker_build_Params_List is a list of Worker_build_Params.
type Worker_build_Params_List struct{ capnp.List }

// NewWorker_build_Params creates a new list of Worker_build_Params.
func NewWorker_build_Params_List(s *capnp.Segment, sz int32) (Worker_build_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Worker_build_Params_List{l}, err
}

func (s Worker_build_Params_List) At(i int) Worker_build_Params {
	return Worker_build_Params{s.List.Struct(i)}
}

func (s Worker_build_Params_List) Set(i int, v Worker_build_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Worker_build_Params_List) String() string {
	str, _ := text.MarshalList(0xb4f83bd186eb3119, s.List)
	return str
}

// Worker_build_Params_Promise is a wrapper for a Worker_build_Params promised by a client call.
type Worker_build_Params_Promise struct{ *capnp.Pipeline }

func (p Worker_build_Params_Promise) Struct() (Worker_build_Params, error) {
	s, err := p.Pipeline.Struct()
	return Worker_build_Params{s}, err
}

func (p Worker_build_Params_Promise) Pkg() Pkg_Promise {
	return Pkg_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Worker_build_Results struct{ capnp.Struct }

// Worker_build_Results_TypeID is the unique identifier for the type Worker_build_Results.
const Worker_build_Results_TypeID = 0x8893616f95ebf97a

func NewWorker_build_Results(s *capnp.Segment) (Worker_build_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Worker_build_Results{st}, err
}

func NewRootWorker_build_Results(s *capnp.Segment) (Worker_build_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Worker_build_Results{st}, err
}

func ReadRootWorker_build_Results(msg *capnp.Message) (Worker_build_Results, error) {
	root, err := msg.RootPtr()
	return Worker_build_Results{root.Struct()}, err
}

func (s Worker_build_Results) String() string {
	str, _ := text.Marshal(0x8893616f95ebf97a, s.Struct)
	return str
}

func (s Worker_build_Results) Status() BuildEndResult {
	return BuildEndResult(s.Struct.Uint16(0))
}

func (s Worker_build_Results) SetStatus(v BuildEndResult) {
	s.Struct.SetUint16(0, uint16(v))
}

// Worker_build_Results_List is a list of Worker_build_Results.
type Worker_build_Results_List struct{ capnp.List }

// NewWorker_build_Results creates a new list of Worker_build_Results.
func NewWorker_build_Results_List(s *capnp.Segment, sz int32) (Worker_build_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Worker_build_Results_List{l}, err
}

func (s Worker_build_Results_List) At(i int) Worker_build_Results {
	return Worker_build_Results{s.List.Struct(i)}
}

func (s Worker_build_Results_List) Set(i int, v Worker_build_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Worker_build_Results_List) String() string {
	str, _ := text.MarshalList(0x8893616f95ebf97a, s.List)
	return str
}

// Worker_build_Results_Promise is a wrapper for a Worker_build_Results promised by a client call.
type Worker_build_Results_Promise struct{ *capnp.Pipeline }

func (p Worker_build_Results_Promise) Struct() (Worker_build_Results, error) {
	s, err := p.Pipeline.Struct()
	return Worker_build_Results{s}, err
}

type Worker_listBuiltPkgs_Params struct{ capnp.Struct }

// Worker_listBuiltPkgs_Params_TypeID is the unique identifier for the type Worker_listBuiltPkgs_Params.
const Worker_listBuiltPkgs_Params_TypeID = 0xae05b8ff3974a64e

func NewWorker_listBuiltPkgs_Params(s *capnp.Segment) (Worker_listBuiltPkgs_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Worker_listBuiltPkgs_Params{st}, err
}

func NewRootWorker_listBuiltPkgs_Params(s *capnp.Segment) (Worker_listBuiltPkgs_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Worker_listBuiltPkgs_Params{st}, err
}

func ReadRootWorker_listBuiltPkgs_Params(msg *capnp.Message) (Worker_listBuiltPkgs_Params, error) {
	root, err := msg.RootPtr()
	return Worker_listBuiltPkgs_Params{root.Struct()}, err
}

func (s Worker_listBuiltPkgs_Params) String() string {
	str, _ := text.Marshal(0xae05b8ff3974a64e, s.Struct)
	return str
}

// Worker_listBuiltPkgs_Params_List is a list of Worker_listBuiltPkgs_Params.
type Worker_listBuiltPkgs_Params_List struct{ capnp.List }

// NewWorker_listBuiltPkgs_Params creates a new list of Worker_listBuiltPkgs_Params.
func NewWorker_listBuiltPkgs_Params_List(s *capnp.Segment, sz int32) (Worker_listBuiltPkgs_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Worker_listBuiltPkgs_Params_List{l}, err
}

func (s Worker_listBuiltPkgs_Params_List) At(i int) Worker_listBuiltPkgs_Params {
	return Worker_listBuiltPkgs_Params{s.List.Struct(i)}
}

func (s Worker_listBuiltPkgs_Params_List) Set(i int, v Worker_listBuiltPkgs_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Worker_listBuiltPkgs_Params_List) String() string {
	str, _ := text.MarshalList(0xae05b8ff3974a64e, s.List)
	return str
}

// Worker_listBuiltPkgs_Params_Promise is a wrapper for a Worker_listBuiltPkgs_Params promised by a client call.
type Worker_listBuiltPkgs_Params_Promise struct{ *capnp.Pipeline }

func (p Worker_listBuiltPkgs_Params_Promise) Struct() (Worker_listBuiltPkgs_Params, error) {
	s, err := p.Pipeline.Struct()
	return Worker_listBuiltPkgs_Params{s}, err
}

type Worker_listBuiltPkgs_Results struct{ capnp.Struct }

// Worker_listBuiltPkgs_Results_TypeID is the unique identifier for the type Worker_listBuiltPkgs_Results.
const Worker_listBuiltPkgs_Results_TypeID = 0xcefa336ec5426f3d

func NewWorker_listBuiltPkgs_Results(s *capnp.Segment) (Worker_listBuiltPkgs_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Worker_listBuiltPkgs_Results{st}, err
}

func NewRootWorker_listBuiltPkgs_Results(s *capnp.Segment) (Worker_listBuiltPkgs_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Worker_listBuiltPkgs_Results{st}, err
}

func ReadRootWorker_listBuiltPkgs_Results(msg *capnp.Message) (Worker_listBuiltPkgs_Results, error) {
	root, err := msg.RootPtr()
	return Worker_listBuiltPkgs_Results{root.Struct()}, err
}

func (s Worker_listBuiltPkgs_Results) String() string {
	str, _ := text.Marshal(0xcefa336ec5426f3d, s.Struct)
	return str
}

func (s Worker_listBuiltPkgs_Results) Pkg() (Pkg_List, error) {
	p, err := s.Struct.Ptr(0)
	return Pkg_List{List: p.List()}, err
}

func (s Worker_listBuiltPkgs_Results) HasPkg() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Worker_listBuiltPkgs_Results) SetPkg(v Pkg_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewPkg sets the pkg field to a newly
// allocated Pkg_List, preferring placement in s's segment.
func (s Worker_listBuiltPkgs_Results) NewPkg(n int32) (Pkg_List, error) {
	l, err := NewPkg_List(s.Struct.Segment(), n)
	if err != nil {
		return Pkg_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Worker_listBuiltPkgs_Results_List is a list of Worker_listBuiltPkgs_Results.
type Worker_listBuiltPkgs_Results_List struct{ capnp.List }

// NewWorker_listBuiltPkgs_Results creates a new list of Worker_listBuiltPkgs_Results.
func NewWorker_listBuiltPkgs_Results_List(s *capnp.Segment, sz int32) (Worker_listBuiltPkgs_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Worker_listBuiltPkgs_Results_List{l}, err
}

func (s Worker_listBuiltPkgs_Results_List) At(i int) Worker_listBuiltPkgs_Results {
	return Worker_listBuiltPkgs_Results{s.List.Struct(i)}
}

func (s Worker_listBuiltPkgs_Results_List) Set(i int, v Worker_listBuiltPkgs_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Worker_listBuiltPkgs_Results_List) String() string {
	str, _ := text.MarshalList(0xcefa336ec5426f3d, s.List)
	return str
}

// Worker_listBuiltPkgs_Results_Promise is a wrapper for a Worker_listBuiltPkgs_Results promised by a client call.
type Worker_listBuiltPkgs_Results_Promise struct{ *capnp.Pipeline }

func (p Worker_listBuiltPkgs_Results_Promise) Struct() (Worker_listBuiltPkgs_Results, error) {
	s, err := p.Pipeline.Struct()
	return Worker_listBuiltPkgs_Results{s}, err
}

type Worker_canBuildPkg_Params struct{ capnp.Struct }

// Worker_canBuildPkg_Params_TypeID is the unique identifier for the type Worker_canBuildPkg_Params.
const Worker_canBuildPkg_Params_TypeID = 0xa8d61cb591cafea7

func NewWorker_canBuildPkg_Params(s *capnp.Segment) (Worker_canBuildPkg_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Worker_canBuildPkg_Params{st}, err
}

func NewRootWorker_canBuildPkg_Params(s *capnp.Segment) (Worker_canBuildPkg_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Worker_canBuildPkg_Params{st}, err
}

func ReadRootWorker_canBuildPkg_Params(msg *capnp.Message) (Worker_canBuildPkg_Params, error) {
	root, err := msg.RootPtr()
	return Worker_canBuildPkg_Params{root.Struct()}, err
}

func (s Worker_canBuildPkg_Params) String() string {
	str, _ := text.Marshal(0xa8d61cb591cafea7, s.Struct)
	return str
}

func (s Worker_canBuildPkg_Params) Pkg() (Pkg, error) {
	p, err := s.Struct.Ptr(0)
	return Pkg{Struct: p.Struct()}, err
}

func (s Worker_canBuildPkg_Params) HasPkg() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Worker_canBuildPkg_Params) SetPkg(v Pkg) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewPkg sets the pkg field to a newly
// allocated Pkg struct, preferring placement in s's segment.
func (s Worker_canBuildPkg_Params) NewPkg() (Pkg, error) {
	ss, err := NewPkg(s.Struct.Segment())
	if err != nil {
		return Pkg{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Worker_canBuildPkg_Params_List is a list of Worker_canBuildPkg_Params.
type Worker_canBuildPkg_Params_List struct{ capnp.List }

// NewWorker_canBuildPkg_Params creates a new list of Worker_canBuildPkg_Params.
func NewWorker_canBuildPkg_Params_List(s *capnp.Segment, sz int32) (Worker_canBuildPkg_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Worker_canBuildPkg_Params_List{l}, err
}

func (s Worker_canBuildPkg_Params_List) At(i int) Worker_canBuildPkg_Params {
	return Worker_canBuildPkg_Params{s.List.Struct(i)}
}

func (s Worker_canBuildPkg_Params_List) Set(i int, v Worker_canBuildPkg_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Worker_canBuildPkg_Params_List) String() string {
	str, _ := text.MarshalList(0xa8d61cb591cafea7, s.List)
	return str
}

// Worker_canBuildPkg_Params_Promise is a wrapper for a Worker_canBuildPkg_Params promised by a client call.
type Worker_canBuildPkg_Params_Promise struct{ *capnp.Pipeline }

func (p Worker_canBuildPkg_Params_Promise) Struct() (Worker_canBuildPkg_Params, error) {
	s, err := p.Pipeline.Struct()
	return Worker_canBuildPkg_Params{s}, err
}

func (p Worker_canBuildPkg_Params_Promise) Pkg() Pkg_Promise {
	return Pkg_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Worker_canBuildPkg_Results struct{ capnp.Struct }

// Worker_canBuildPkg_Results_TypeID is the unique identifier for the type Worker_canBuildPkg_Results.
const Worker_canBuildPkg_Results_TypeID = 0xb202bd1f3e49b5b3

func NewWorker_canBuildPkg_Results(s *capnp.Segment) (Worker_canBuildPkg_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Worker_canBuildPkg_Results{st}, err
}

func NewRootWorker_canBuildPkg_Results(s *capnp.Segment) (Worker_canBuildPkg_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Worker_canBuildPkg_Results{st}, err
}

func ReadRootWorker_canBuildPkg_Results(msg *capnp.Message) (Worker_canBuildPkg_Results, error) {
	root, err := msg.RootPtr()
	return Worker_canBuildPkg_Results{root.Struct()}, err
}

func (s Worker_canBuildPkg_Results) String() string {
	str, _ := text.Marshal(0xb202bd1f3e49b5b3, s.Struct)
	return str
}

func (s Worker_canBuildPkg_Results) CanBuild() bool {
	return s.Struct.Bit(0)
}

func (s Worker_canBuildPkg_Results) SetCanBuild(v bool) {
	s.Struct.SetBit(0, v)
}

// Worker_canBuildPkg_Results_List is a list of Worker_canBuildPkg_Results.
type Worker_canBuildPkg_Results_List struct{ capnp.List }

// NewWorker_canBuildPkg_Results creates a new list of Worker_canBuildPkg_Results.
func NewWorker_canBuildPkg_Results_List(s *capnp.Segment, sz int32) (Worker_canBuildPkg_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Worker_canBuildPkg_Results_List{l}, err
}

func (s Worker_canBuildPkg_Results_List) At(i int) Worker_canBuildPkg_Results {
	return Worker_canBuildPkg_Results{s.List.Struct(i)}
}

func (s Worker_canBuildPkg_Results_List) Set(i int, v Worker_canBuildPkg_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Worker_canBuildPkg_Results_List) String() string {
	str, _ := text.MarshalList(0xb202bd1f3e49b5b3, s.List)
	return str
}

// Worker_canBuildPkg_Results_Promise is a wrapper for a Worker_canBuildPkg_Results promised by a client call.
type Worker_canBuildPkg_Results_Promise struct{ *capnp.Pipeline }

func (p Worker_canBuildPkg_Results_Promise) Struct() (Worker_canBuildPkg_Results, error) {
	s, err := p.Pipeline.Struct()
	return Worker_canBuildPkg_Results{s}, err
}

type IrcBot struct{ Client capnp.Client }

// IrcBot_TypeID is the unique identifier for the type IrcBot.
const IrcBot_TypeID = 0xbb6513902c830e39

func (c IrcBot) BuilderDone(ctx context.Context, params func(IrcBot_builderDone_Params) error, opts ...capnp.CallOption) IrcBot_builderDone_Results_Promise {
	if c.Client == nil {
		return IrcBot_builderDone_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xbb6513902c830e39,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:IrcBot",
			MethodName:    "builderDone",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(IrcBot_builderDone_Params{Struct: s}) }
	}
	return IrcBot_builderDone_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type IrcBot_Server interface {
	BuilderDone(IrcBot_builderDone) error
}

func IrcBot_ServerToClient(s IrcBot_Server) IrcBot {
	c, _ := s.(server.Closer)
	return IrcBot{Client: server.New(IrcBot_Methods(nil, s), c)}
}

func IrcBot_Methods(methods []server.Method, s IrcBot_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbb6513902c830e39,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:IrcBot",
			MethodName:    "builderDone",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := IrcBot_builderDone{c, opts, IrcBot_builderDone_Params{Struct: p}, IrcBot_builderDone_Results{Struct: r}}
			return s.BuilderDone(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	return methods
}

// IrcBot_builderDone holds the arguments for a server call to IrcBot.builderDone.
type IrcBot_builderDone struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  IrcBot_builderDone_Params
	Results IrcBot_builderDone_Results
}

type IrcBot_builderDone_Params struct{ capnp.Struct }

// IrcBot_builderDone_Params_TypeID is the unique identifier for the type IrcBot_builderDone_Params.
const IrcBot_builderDone_Params_TypeID = 0xa5eec3de87bdd251

func NewIrcBot_builderDone_Params(s *capnp.Segment) (IrcBot_builderDone_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return IrcBot_builderDone_Params{st}, err
}

func NewRootIrcBot_builderDone_Params(s *capnp.Segment) (IrcBot_builderDone_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return IrcBot_builderDone_Params{st}, err
}

func ReadRootIrcBot_builderDone_Params(msg *capnp.Message) (IrcBot_builderDone_Params, error) {
	root, err := msg.RootPtr()
	return IrcBot_builderDone_Params{root.Struct()}, err
}

func (s IrcBot_builderDone_Params) String() string {
	str, _ := text.Marshal(0xa5eec3de87bdd251, s.Struct)
	return str
}

func (s IrcBot_builderDone_Params) Pkg() (Pkg, error) {
	p, err := s.Struct.Ptr(0)
	return Pkg{Struct: p.Struct()}, err
}

func (s IrcBot_builderDone_Params) HasPkg() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s IrcBot_builderDone_Params) SetPkg(v Pkg) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewPkg sets the pkg field to a newly
// allocated Pkg struct, preferring placement in s's segment.
func (s IrcBot_builderDone_Params) NewPkg() (Pkg, error) {
	ss, err := NewPkg(s.Struct.Segment())
	if err != nil {
		return Pkg{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s IrcBot_builderDone_Params) Status() BuildEndResult {
	return BuildEndResult(s.Struct.Uint16(0))
}

func (s IrcBot_builderDone_Params) SetStatus(v BuildEndResult) {
	s.Struct.SetUint16(0, uint16(v))
}

// IrcBot_builderDone_Params_List is a list of IrcBot_builderDone_Params.
type IrcBot_builderDone_Params_List struct{ capnp.List }

// NewIrcBot_builderDone_Params creates a new list of IrcBot_builderDone_Params.
func NewIrcBot_builderDone_Params_List(s *capnp.Segment, sz int32) (IrcBot_builderDone_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return IrcBot_builderDone_Params_List{l}, err
}

func (s IrcBot_builderDone_Params_List) At(i int) IrcBot_builderDone_Params {
	return IrcBot_builderDone_Params{s.List.Struct(i)}
}

func (s IrcBot_builderDone_Params_List) Set(i int, v IrcBot_builderDone_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s IrcBot_builderDone_Params_List) String() string {
	str, _ := text.MarshalList(0xa5eec3de87bdd251, s.List)
	return str
}

// IrcBot_builderDone_Params_Promise is a wrapper for a IrcBot_builderDone_Params promised by a client call.
type IrcBot_builderDone_Params_Promise struct{ *capnp.Pipeline }

func (p IrcBot_builderDone_Params_Promise) Struct() (IrcBot_builderDone_Params, error) {
	s, err := p.Pipeline.Struct()
	return IrcBot_builderDone_Params{s}, err
}

func (p IrcBot_builderDone_Params_Promise) Pkg() Pkg_Promise {
	return Pkg_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type IrcBot_builderDone_Results struct{ capnp.Struct }

// IrcBot_builderDone_Results_TypeID is the unique identifier for the type IrcBot_builderDone_Results.
const IrcBot_builderDone_Results_TypeID = 0xf5bdbbc1d36794d7

func NewIrcBot_builderDone_Results(s *capnp.Segment) (IrcBot_builderDone_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return IrcBot_builderDone_Results{st}, err
}

func NewRootIrcBot_builderDone_Results(s *capnp.Segment) (IrcBot_builderDone_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return IrcBot_builderDone_Results{st}, err
}

func ReadRootIrcBot_builderDone_Results(msg *capnp.Message) (IrcBot_builderDone_Results, error) {
	root, err := msg.RootPtr()
	return IrcBot_builderDone_Results{root.Struct()}, err
}

func (s IrcBot_builderDone_Results) String() string {
	str, _ := text.Marshal(0xf5bdbbc1d36794d7, s.Struct)
	return str
}

// IrcBot_builderDone_Results_List is a list of IrcBot_builderDone_Results.
type IrcBot_builderDone_Results_List struct{ capnp.List }

// NewIrcBot_builderDone_Results creates a new list of IrcBot_builderDone_Results.
func NewIrcBot_builderDone_Results_List(s *capnp.Segment, sz int32) (IrcBot_builderDone_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return IrcBot_builderDone_Results_List{l}, err
}

func (s IrcBot_builderDone_Results_List) At(i int) IrcBot_builderDone_Results {
	return IrcBot_builderDone_Results{s.List.Struct(i)}
}

func (s IrcBot_builderDone_Results_List) Set(i int, v IrcBot_builderDone_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s IrcBot_builderDone_Results_List) String() string {
	str, _ := text.MarshalList(0xf5bdbbc1d36794d7, s.List)
	return str
}

// IrcBot_builderDone_Results_Promise is a wrapper for a IrcBot_builderDone_Results promised by a client call.
type IrcBot_builderDone_Results_Promise struct{ *capnp.Pipeline }

func (p IrcBot_builderDone_Results_Promise) Struct() (IrcBot_builderDone_Results, error) {
	s, err := p.Pipeline.Struct()
	return IrcBot_builderDone_Results{s}, err
}

type GraphServer struct{ Client capnp.Client }

// GraphServer_TypeID is the unique identifier for the type GraphServer.
const GraphServer_TypeID = 0xb493b87ea692fb20

func (c GraphServer) CheckForNewPackagesInGit(ctx context.Context, params func(GraphServer_checkForNewPackagesInGit_Params) error, opts ...capnp.CallOption) GraphServer_checkForNewPackagesInGit_Results_Promise {
	if c.Client == nil {
		return GraphServer_checkForNewPackagesInGit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xb493b87ea692fb20,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:GraphServer",
			MethodName:    "checkForNewPackagesInGit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(GraphServer_checkForNewPackagesInGit_Params{Struct: s}) }
	}
	return GraphServer_checkForNewPackagesInGit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c GraphServer) CanPkgBuild(ctx context.Context, params func(GraphServer_canPkgBuild_Params) error, opts ...capnp.CallOption) GraphServer_canPkgBuild_Results_Promise {
	if c.Client == nil {
		return GraphServer_canPkgBuild_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xb493b87ea692fb20,
			MethodID:      1,
			InterfaceName: "dxpbspec.capnp:GraphServer",
			MethodName:    "canPkgBuild",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(GraphServer_canPkgBuild_Params{Struct: s}) }
	}
	return GraphServer_canPkgBuild_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type GraphServer_Server interface {
	CheckForNewPackagesInGit(GraphServer_checkForNewPackagesInGit) error

	CanPkgBuild(GraphServer_canPkgBuild) error
}

func GraphServer_ServerToClient(s GraphServer_Server) GraphServer {
	c, _ := s.(server.Closer)
	return GraphServer{Client: server.New(GraphServer_Methods(nil, s), c)}
}

func GraphServer_Methods(methods []server.Method, s GraphServer_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb493b87ea692fb20,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:GraphServer",
			MethodName:    "checkForNewPackagesInGit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := GraphServer_checkForNewPackagesInGit{c, opts, GraphServer_checkForNewPackagesInGit_Params{Struct: p}, GraphServer_checkForNewPackagesInGit_Results{Struct: r}}
			return s.CheckForNewPackagesInGit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb493b87ea692fb20,
			MethodID:      1,
			InterfaceName: "dxpbspec.capnp:GraphServer",
			MethodName:    "canPkgBuild",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := GraphServer_canPkgBuild{c, opts, GraphServer_canPkgBuild_Params{Struct: p}, GraphServer_canPkgBuild_Results{Struct: r}}
			return s.CanPkgBuild(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	return methods
}

// GraphServer_checkForNewPackagesInGit holds the arguments for a server call to GraphServer.checkForNewPackagesInGit.
type GraphServer_checkForNewPackagesInGit struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  GraphServer_checkForNewPackagesInGit_Params
	Results GraphServer_checkForNewPackagesInGit_Results
}

// GraphServer_canPkgBuild holds the arguments for a server call to GraphServer.canPkgBuild.
type GraphServer_canPkgBuild struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  GraphServer_canPkgBuild_Params
	Results GraphServer_canPkgBuild_Results
}

type GraphServer_checkForNewPackagesInGit_Params struct{ capnp.Struct }

// GraphServer_checkForNewPackagesInGit_Params_TypeID is the unique identifier for the type GraphServer_checkForNewPackagesInGit_Params.
const GraphServer_checkForNewPackagesInGit_Params_TypeID = 0xf3a0cdc3da003ea9

func NewGraphServer_checkForNewPackagesInGit_Params(s *capnp.Segment) (GraphServer_checkForNewPackagesInGit_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GraphServer_checkForNewPackagesInGit_Params{st}, err
}

func NewRootGraphServer_checkForNewPackagesInGit_Params(s *capnp.Segment) (GraphServer_checkForNewPackagesInGit_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GraphServer_checkForNewPackagesInGit_Params{st}, err
}

func ReadRootGraphServer_checkForNewPackagesInGit_Params(msg *capnp.Message) (GraphServer_checkForNewPackagesInGit_Params, error) {
	root, err := msg.RootPtr()
	return GraphServer_checkForNewPackagesInGit_Params{root.Struct()}, err
}

func (s GraphServer_checkForNewPackagesInGit_Params) String() string {
	str, _ := text.Marshal(0xf3a0cdc3da003ea9, s.Struct)
	return str
}

// GraphServer_checkForNewPackagesInGit_Params_List is a list of GraphServer_checkForNewPackagesInGit_Params.
type GraphServer_checkForNewPackagesInGit_Params_List struct{ capnp.List }

// NewGraphServer_checkForNewPackagesInGit_Params creates a new list of GraphServer_checkForNewPackagesInGit_Params.
func NewGraphServer_checkForNewPackagesInGit_Params_List(s *capnp.Segment, sz int32) (GraphServer_checkForNewPackagesInGit_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return GraphServer_checkForNewPackagesInGit_Params_List{l}, err
}

func (s GraphServer_checkForNewPackagesInGit_Params_List) At(i int) GraphServer_checkForNewPackagesInGit_Params {
	return GraphServer_checkForNewPackagesInGit_Params{s.List.Struct(i)}
}

func (s GraphServer_checkForNewPackagesInGit_Params_List) Set(i int, v GraphServer_checkForNewPackagesInGit_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GraphServer_checkForNewPackagesInGit_Params_List) String() string {
	str, _ := text.MarshalList(0xf3a0cdc3da003ea9, s.List)
	return str
}

// GraphServer_checkForNewPackagesInGit_Params_Promise is a wrapper for a GraphServer_checkForNewPackagesInGit_Params promised by a client call.
type GraphServer_checkForNewPackagesInGit_Params_Promise struct{ *capnp.Pipeline }

func (p GraphServer_checkForNewPackagesInGit_Params_Promise) Struct() (GraphServer_checkForNewPackagesInGit_Params, error) {
	s, err := p.Pipeline.Struct()
	return GraphServer_checkForNewPackagesInGit_Params{s}, err
}

type GraphServer_checkForNewPackagesInGit_Results struct{ capnp.Struct }

// GraphServer_checkForNewPackagesInGit_Results_TypeID is the unique identifier for the type GraphServer_checkForNewPackagesInGit_Results.
const GraphServer_checkForNewPackagesInGit_Results_TypeID = 0xe4935e6cf760a539

func NewGraphServer_checkForNewPackagesInGit_Results(s *capnp.Segment) (GraphServer_checkForNewPackagesInGit_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GraphServer_checkForNewPackagesInGit_Results{st}, err
}

func NewRootGraphServer_checkForNewPackagesInGit_Results(s *capnp.Segment) (GraphServer_checkForNewPackagesInGit_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GraphServer_checkForNewPackagesInGit_Results{st}, err
}

func ReadRootGraphServer_checkForNewPackagesInGit_Results(msg *capnp.Message) (GraphServer_checkForNewPackagesInGit_Results, error) {
	root, err := msg.RootPtr()
	return GraphServer_checkForNewPackagesInGit_Results{root.Struct()}, err
}

func (s GraphServer_checkForNewPackagesInGit_Results) String() string {
	str, _ := text.Marshal(0xe4935e6cf760a539, s.Struct)
	return str
}

// GraphServer_checkForNewPackagesInGit_Results_List is a list of GraphServer_checkForNewPackagesInGit_Results.
type GraphServer_checkForNewPackagesInGit_Results_List struct{ capnp.List }

// NewGraphServer_checkForNewPackagesInGit_Results creates a new list of GraphServer_checkForNewPackagesInGit_Results.
func NewGraphServer_checkForNewPackagesInGit_Results_List(s *capnp.Segment, sz int32) (GraphServer_checkForNewPackagesInGit_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return GraphServer_checkForNewPackagesInGit_Results_List{l}, err
}

func (s GraphServer_checkForNewPackagesInGit_Results_List) At(i int) GraphServer_checkForNewPackagesInGit_Results {
	return GraphServer_checkForNewPackagesInGit_Results{s.List.Struct(i)}
}

func (s GraphServer_checkForNewPackagesInGit_Results_List) Set(i int, v GraphServer_checkForNewPackagesInGit_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GraphServer_checkForNewPackagesInGit_Results_List) String() string {
	str, _ := text.MarshalList(0xe4935e6cf760a539, s.List)
	return str
}

// GraphServer_checkForNewPackagesInGit_Results_Promise is a wrapper for a GraphServer_checkForNewPackagesInGit_Results promised by a client call.
type GraphServer_checkForNewPackagesInGit_Results_Promise struct{ *capnp.Pipeline }

func (p GraphServer_checkForNewPackagesInGit_Results_Promise) Struct() (GraphServer_checkForNewPackagesInGit_Results, error) {
	s, err := p.Pipeline.Struct()
	return GraphServer_checkForNewPackagesInGit_Results{s}, err
}

type GraphServer_canPkgBuild_Params struct{ capnp.Struct }

// GraphServer_canPkgBuild_Params_TypeID is the unique identifier for the type GraphServer_canPkgBuild_Params.
const GraphServer_canPkgBuild_Params_TypeID = 0xe0bea950071b144c

func NewGraphServer_canPkgBuild_Params(s *capnp.Segment) (GraphServer_canPkgBuild_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GraphServer_canPkgBuild_Params{st}, err
}

func NewRootGraphServer_canPkgBuild_Params(s *capnp.Segment) (GraphServer_canPkgBuild_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GraphServer_canPkgBuild_Params{st}, err
}

func ReadRootGraphServer_canPkgBuild_Params(msg *capnp.Message) (GraphServer_canPkgBuild_Params, error) {
	root, err := msg.RootPtr()
	return GraphServer_canPkgBuild_Params{root.Struct()}, err
}

func (s GraphServer_canPkgBuild_Params) String() string {
	str, _ := text.Marshal(0xe0bea950071b144c, s.Struct)
	return str
}

func (s GraphServer_canPkgBuild_Params) Pkg() (Pkg, error) {
	p, err := s.Struct.Ptr(0)
	return Pkg{Struct: p.Struct()}, err
}

func (s GraphServer_canPkgBuild_Params) HasPkg() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GraphServer_canPkgBuild_Params) SetPkg(v Pkg) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewPkg sets the pkg field to a newly
// allocated Pkg struct, preferring placement in s's segment.
func (s GraphServer_canPkgBuild_Params) NewPkg() (Pkg, error) {
	ss, err := NewPkg(s.Struct.Segment())
	if err != nil {
		return Pkg{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// GraphServer_canPkgBuild_Params_List is a list of GraphServer_canPkgBuild_Params.
type GraphServer_canPkgBuild_Params_List struct{ capnp.List }

// NewGraphServer_canPkgBuild_Params creates a new list of GraphServer_canPkgBuild_Params.
func NewGraphServer_canPkgBuild_Params_List(s *capnp.Segment, sz int32) (GraphServer_canPkgBuild_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GraphServer_canPkgBuild_Params_List{l}, err
}

func (s GraphServer_canPkgBuild_Params_List) At(i int) GraphServer_canPkgBuild_Params {
	return GraphServer_canPkgBuild_Params{s.List.Struct(i)}
}

func (s GraphServer_canPkgBuild_Params_List) Set(i int, v GraphServer_canPkgBuild_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GraphServer_canPkgBuild_Params_List) String() string {
	str, _ := text.MarshalList(0xe0bea950071b144c, s.List)
	return str
}

// GraphServer_canPkgBuild_Params_Promise is a wrapper for a GraphServer_canPkgBuild_Params promised by a client call.
type GraphServer_canPkgBuild_Params_Promise struct{ *capnp.Pipeline }

func (p GraphServer_canPkgBuild_Params_Promise) Struct() (GraphServer_canPkgBuild_Params, error) {
	s, err := p.Pipeline.Struct()
	return GraphServer_canPkgBuild_Params{s}, err
}

func (p GraphServer_canPkgBuild_Params_Promise) Pkg() Pkg_Promise {
	return Pkg_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type GraphServer_canPkgBuild_Results struct{ capnp.Struct }

// GraphServer_canPkgBuild_Results_TypeID is the unique identifier for the type GraphServer_canPkgBuild_Results.
const GraphServer_canPkgBuild_Results_TypeID = 0x9c7030d67b735825

func NewGraphServer_canPkgBuild_Results(s *capnp.Segment) (GraphServer_canPkgBuild_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return GraphServer_canPkgBuild_Results{st}, err
}

func NewRootGraphServer_canPkgBuild_Results(s *capnp.Segment) (GraphServer_canPkgBuild_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return GraphServer_canPkgBuild_Results{st}, err
}

func ReadRootGraphServer_canPkgBuild_Results(msg *capnp.Message) (GraphServer_canPkgBuild_Results, error) {
	root, err := msg.RootPtr()
	return GraphServer_canPkgBuild_Results{root.Struct()}, err
}

func (s GraphServer_canPkgBuild_Results) String() string {
	str, _ := text.Marshal(0x9c7030d67b735825, s.Struct)
	return str
}

func (s GraphServer_canPkgBuild_Results) CanBuild() bool {
	return s.Struct.Bit(0)
}

func (s GraphServer_canPkgBuild_Results) SetCanBuild(v bool) {
	s.Struct.SetBit(0, v)
}

// GraphServer_canPkgBuild_Results_List is a list of GraphServer_canPkgBuild_Results.
type GraphServer_canPkgBuild_Results_List struct{ capnp.List }

// NewGraphServer_canPkgBuild_Results creates a new list of GraphServer_canPkgBuild_Results.
func NewGraphServer_canPkgBuild_Results_List(s *capnp.Segment, sz int32) (GraphServer_canPkgBuild_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return GraphServer_canPkgBuild_Results_List{l}, err
}

func (s GraphServer_canPkgBuild_Results_List) At(i int) GraphServer_canPkgBuild_Results {
	return GraphServer_canPkgBuild_Results{s.List.Struct(i)}
}

func (s GraphServer_canPkgBuild_Results_List) Set(i int, v GraphServer_canPkgBuild_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GraphServer_canPkgBuild_Results_List) String() string {
	str, _ := text.MarshalList(0x9c7030d67b735825, s.List)
	return str
}

// GraphServer_canPkgBuild_Results_Promise is a wrapper for a GraphServer_canPkgBuild_Results promised by a client call.
type GraphServer_canPkgBuild_Results_Promise struct{ *capnp.Pipeline }

func (p GraphServer_canPkgBuild_Results_Promise) Struct() (GraphServer_canPkgBuild_Results, error) {
	s, err := p.Pipeline.Struct()
	return GraphServer_canPkgBuild_Results{s}, err
}

type JobServer struct{ Client capnp.Client }

// JobServer_TypeID is the unique identifier for the type JobServer.
const JobServer_TypeID = 0xa5812dda5fb6f17d

func (c JobServer) KeepAlive(ctx context.Context, params func(JobServer_keepAlive_Params) error, opts ...capnp.CallOption) JobServer_keepAlive_Results_Promise {
	if c.Client == nil {
		return JobServer_keepAlive_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa5812dda5fb6f17d,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:JobServer",
			MethodName:    "keepAlive",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(JobServer_keepAlive_Params{Struct: s}) }
	}
	return JobServer_keepAlive_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c JobServer) Register(ctx context.Context, params func(JobServer_register_Params) error, opts ...capnp.CallOption) JobServer_register_Results_Promise {
	if c.Client == nil {
		return JobServer_register_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa5812dda5fb6f17d,
			MethodID:      1,
			InterfaceName: "dxpbspec.capnp:JobServer",
			MethodName:    "register",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(JobServer_register_Params{Struct: s}) }
	}
	return JobServer_register_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c JobServer) WriteLog(ctx context.Context, params func(JobServer_writeLog_Params) error, opts ...capnp.CallOption) JobServer_writeLog_Results_Promise {
	if c.Client == nil {
		return JobServer_writeLog_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa5812dda5fb6f17d,
			MethodID:      2,
			InterfaceName: "dxpbspec.capnp:JobServer",
			MethodName:    "writeLog",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(JobServer_writeLog_Params{Struct: s}) }
	}
	return JobServer_writeLog_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c JobServer) StartBulkBuild(ctx context.Context, params func(JobServer_startBulkBuild_Params) error, opts ...capnp.CallOption) JobServer_startBulkBuild_Results_Promise {
	if c.Client == nil {
		return JobServer_startBulkBuild_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa5812dda5fb6f17d,
			MethodID:      3,
			InterfaceName: "dxpbspec.capnp:JobServer",
			MethodName:    "startBulkBuild",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(JobServer_startBulkBuild_Params{Struct: s}) }
	}
	return JobServer_startBulkBuild_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type JobServer_Server interface {
	KeepAlive(JobServer_keepAlive) error

	Register(JobServer_register) error

	WriteLog(JobServer_writeLog) error

	StartBulkBuild(JobServer_startBulkBuild) error
}

func JobServer_ServerToClient(s JobServer_Server) JobServer {
	c, _ := s.(server.Closer)
	return JobServer{Client: server.New(JobServer_Methods(nil, s), c)}
}

func JobServer_Methods(methods []server.Method, s JobServer_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 4)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa5812dda5fb6f17d,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:JobServer",
			MethodName:    "keepAlive",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := JobServer_keepAlive{c, opts, JobServer_keepAlive_Params{Struct: p}, JobServer_keepAlive_Results{Struct: r}}
			return s.KeepAlive(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa5812dda5fb6f17d,
			MethodID:      1,
			InterfaceName: "dxpbspec.capnp:JobServer",
			MethodName:    "register",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := JobServer_register{c, opts, JobServer_register_Params{Struct: p}, JobServer_register_Results{Struct: r}}
			return s.Register(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa5812dda5fb6f17d,
			MethodID:      2,
			InterfaceName: "dxpbspec.capnp:JobServer",
			MethodName:    "writeLog",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := JobServer_writeLog{c, opts, JobServer_writeLog_Params{Struct: p}, JobServer_writeLog_Results{Struct: r}}
			return s.WriteLog(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa5812dda5fb6f17d,
			MethodID:      3,
			InterfaceName: "dxpbspec.capnp:JobServer",
			MethodName:    "startBulkBuild",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := JobServer_startBulkBuild{c, opts, JobServer_startBulkBuild_Params{Struct: p}, JobServer_startBulkBuild_Results{Struct: r}}
			return s.StartBulkBuild(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	return methods
}

// JobServer_keepAlive holds the arguments for a server call to JobServer.keepAlive.
type JobServer_keepAlive struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  JobServer_keepAlive_Params
	Results JobServer_keepAlive_Results
}

// JobServer_register holds the arguments for a server call to JobServer.register.
type JobServer_register struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  JobServer_register_Params
	Results JobServer_register_Results
}

// JobServer_writeLog holds the arguments for a server call to JobServer.writeLog.
type JobServer_writeLog struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  JobServer_writeLog_Params
	Results JobServer_writeLog_Results
}

// JobServer_startBulkBuild holds the arguments for a server call to JobServer.startBulkBuild.
type JobServer_startBulkBuild struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  JobServer_startBulkBuild_Params
	Results JobServer_startBulkBuild_Results
}

type JobServer_keepAlive_Params struct{ capnp.Struct }

// JobServer_keepAlive_Params_TypeID is the unique identifier for the type JobServer_keepAlive_Params.
const JobServer_keepAlive_Params_TypeID = 0xf1bf74c5287dc857

func NewJobServer_keepAlive_Params(s *capnp.Segment) (JobServer_keepAlive_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobServer_keepAlive_Params{st}, err
}

func NewRootJobServer_keepAlive_Params(s *capnp.Segment) (JobServer_keepAlive_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobServer_keepAlive_Params{st}, err
}

func ReadRootJobServer_keepAlive_Params(msg *capnp.Message) (JobServer_keepAlive_Params, error) {
	root, err := msg.RootPtr()
	return JobServer_keepAlive_Params{root.Struct()}, err
}

func (s JobServer_keepAlive_Params) String() string {
	str, _ := text.Marshal(0xf1bf74c5287dc857, s.Struct)
	return str
}

// JobServer_keepAlive_Params_List is a list of JobServer_keepAlive_Params.
type JobServer_keepAlive_Params_List struct{ capnp.List }

// NewJobServer_keepAlive_Params creates a new list of JobServer_keepAlive_Params.
func NewJobServer_keepAlive_Params_List(s *capnp.Segment, sz int32) (JobServer_keepAlive_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return JobServer_keepAlive_Params_List{l}, err
}

func (s JobServer_keepAlive_Params_List) At(i int) JobServer_keepAlive_Params {
	return JobServer_keepAlive_Params{s.List.Struct(i)}
}

func (s JobServer_keepAlive_Params_List) Set(i int, v JobServer_keepAlive_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s JobServer_keepAlive_Params_List) String() string {
	str, _ := text.MarshalList(0xf1bf74c5287dc857, s.List)
	return str
}

// JobServer_keepAlive_Params_Promise is a wrapper for a JobServer_keepAlive_Params promised by a client call.
type JobServer_keepAlive_Params_Promise struct{ *capnp.Pipeline }

func (p JobServer_keepAlive_Params_Promise) Struct() (JobServer_keepAlive_Params, error) {
	s, err := p.Pipeline.Struct()
	return JobServer_keepAlive_Params{s}, err
}

type JobServer_keepAlive_Results struct{ capnp.Struct }

// JobServer_keepAlive_Results_TypeID is the unique identifier for the type JobServer_keepAlive_Results.
const JobServer_keepAlive_Results_TypeID = 0xe0953482810f9258

func NewJobServer_keepAlive_Results(s *capnp.Segment) (JobServer_keepAlive_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobServer_keepAlive_Results{st}, err
}

func NewRootJobServer_keepAlive_Results(s *capnp.Segment) (JobServer_keepAlive_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobServer_keepAlive_Results{st}, err
}

func ReadRootJobServer_keepAlive_Results(msg *capnp.Message) (JobServer_keepAlive_Results, error) {
	root, err := msg.RootPtr()
	return JobServer_keepAlive_Results{root.Struct()}, err
}

func (s JobServer_keepAlive_Results) String() string {
	str, _ := text.Marshal(0xe0953482810f9258, s.Struct)
	return str
}

// JobServer_keepAlive_Results_List is a list of JobServer_keepAlive_Results.
type JobServer_keepAlive_Results_List struct{ capnp.List }

// NewJobServer_keepAlive_Results creates a new list of JobServer_keepAlive_Results.
func NewJobServer_keepAlive_Results_List(s *capnp.Segment, sz int32) (JobServer_keepAlive_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return JobServer_keepAlive_Results_List{l}, err
}

func (s JobServer_keepAlive_Results_List) At(i int) JobServer_keepAlive_Results {
	return JobServer_keepAlive_Results{s.List.Struct(i)}
}

func (s JobServer_keepAlive_Results_List) Set(i int, v JobServer_keepAlive_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s JobServer_keepAlive_Results_List) String() string {
	str, _ := text.MarshalList(0xe0953482810f9258, s.List)
	return str
}

// JobServer_keepAlive_Results_Promise is a wrapper for a JobServer_keepAlive_Results promised by a client call.
type JobServer_keepAlive_Results_Promise struct{ *capnp.Pipeline }

func (p JobServer_keepAlive_Results_Promise) Struct() (JobServer_keepAlive_Results, error) {
	s, err := p.Pipeline.Struct()
	return JobServer_keepAlive_Results{s}, err
}

type JobServer_register_Params struct{ capnp.Struct }

// JobServer_register_Params_TypeID is the unique identifier for the type JobServer_register_Params.
const JobServer_register_Params_TypeID = 0xdc9aaa39416a5930

func NewJobServer_register_Params(s *capnp.Segment) (JobServer_register_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return JobServer_register_Params{st}, err
}

func NewRootJobServer_register_Params(s *capnp.Segment) (JobServer_register_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return JobServer_register_Params{st}, err
}

func ReadRootJobServer_register_Params(msg *capnp.Message) (JobServer_register_Params, error) {
	root, err := msg.RootPtr()
	return JobServer_register_Params{root.Struct()}, err
}

func (s JobServer_register_Params) String() string {
	str, _ := text.Marshal(0xdc9aaa39416a5930, s.Struct)
	return str
}

func (s JobServer_register_Params) Worker() Worker {
	p, _ := s.Struct.Ptr(0)
	return Worker{Client: p.Interface().Client()}
}

func (s JobServer_register_Params) HasWorker() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s JobServer_register_Params) SetWorker(v Worker) error {
	if v.Client == nil {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// JobServer_register_Params_List is a list of JobServer_register_Params.
type JobServer_register_Params_List struct{ capnp.List }

// NewJobServer_register_Params creates a new list of JobServer_register_Params.
func NewJobServer_register_Params_List(s *capnp.Segment, sz int32) (JobServer_register_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return JobServer_register_Params_List{l}, err
}

func (s JobServer_register_Params_List) At(i int) JobServer_register_Params {
	return JobServer_register_Params{s.List.Struct(i)}
}

func (s JobServer_register_Params_List) Set(i int, v JobServer_register_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s JobServer_register_Params_List) String() string {
	str, _ := text.MarshalList(0xdc9aaa39416a5930, s.List)
	return str
}

// JobServer_register_Params_Promise is a wrapper for a JobServer_register_Params promised by a client call.
type JobServer_register_Params_Promise struct{ *capnp.Pipeline }

func (p JobServer_register_Params_Promise) Struct() (JobServer_register_Params, error) {
	s, err := p.Pipeline.Struct()
	return JobServer_register_Params{s}, err
}

func (p JobServer_register_Params_Promise) Worker() Worker {
	return Worker{Client: p.Pipeline.GetPipeline(0).Client()}
}

type JobServer_register_Results struct{ capnp.Struct }

// JobServer_register_Results_TypeID is the unique identifier for the type JobServer_register_Results.
const JobServer_register_Results_TypeID = 0xf80252c439688169

func NewJobServer_register_Results(s *capnp.Segment) (JobServer_register_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobServer_register_Results{st}, err
}

func NewRootJobServer_register_Results(s *capnp.Segment) (JobServer_register_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobServer_register_Results{st}, err
}

func ReadRootJobServer_register_Results(msg *capnp.Message) (JobServer_register_Results, error) {
	root, err := msg.RootPtr()
	return JobServer_register_Results{root.Struct()}, err
}

func (s JobServer_register_Results) String() string {
	str, _ := text.Marshal(0xf80252c439688169, s.Struct)
	return str
}

// JobServer_register_Results_List is a list of JobServer_register_Results.
type JobServer_register_Results_List struct{ capnp.List }

// NewJobServer_register_Results creates a new list of JobServer_register_Results.
func NewJobServer_register_Results_List(s *capnp.Segment, sz int32) (JobServer_register_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return JobServer_register_Results_List{l}, err
}

func (s JobServer_register_Results_List) At(i int) JobServer_register_Results {
	return JobServer_register_Results{s.List.Struct(i)}
}

func (s JobServer_register_Results_List) Set(i int, v JobServer_register_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s JobServer_register_Results_List) String() string {
	str, _ := text.MarshalList(0xf80252c439688169, s.List)
	return str
}

// JobServer_register_Results_Promise is a wrapper for a JobServer_register_Results promised by a client call.
type JobServer_register_Results_Promise struct{ *capnp.Pipeline }

func (p JobServer_register_Results_Promise) Struct() (JobServer_register_Results, error) {
	s, err := p.Pipeline.Struct()
	return JobServer_register_Results{s}, err
}

type JobServer_writeLog_Params struct{ capnp.Struct }

// JobServer_writeLog_Params_TypeID is the unique identifier for the type JobServer_writeLog_Params.
const JobServer_writeLog_Params_TypeID = 0xe44348b429099d1d

func NewJobServer_writeLog_Params(s *capnp.Segment) (JobServer_writeLog_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return JobServer_writeLog_Params{st}, err
}

func NewRootJobServer_writeLog_Params(s *capnp.Segment) (JobServer_writeLog_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return JobServer_writeLog_Params{st}, err
}

func ReadRootJobServer_writeLog_Params(msg *capnp.Message) (JobServer_writeLog_Params, error) {
	root, err := msg.RootPtr()
	return JobServer_writeLog_Params{root.Struct()}, err
}

func (s JobServer_writeLog_Params) String() string {
	str, _ := text.Marshal(0xe44348b429099d1d, s.Struct)
	return str
}

func (s JobServer_writeLog_Params) Log() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s JobServer_writeLog_Params) HasLog() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s JobServer_writeLog_Params) SetLog(v []byte) error {
	return s.Struct.SetData(0, v)
}

// JobServer_writeLog_Params_List is a list of JobServer_writeLog_Params.
type JobServer_writeLog_Params_List struct{ capnp.List }

// NewJobServer_writeLog_Params creates a new list of JobServer_writeLog_Params.
func NewJobServer_writeLog_Params_List(s *capnp.Segment, sz int32) (JobServer_writeLog_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return JobServer_writeLog_Params_List{l}, err
}

func (s JobServer_writeLog_Params_List) At(i int) JobServer_writeLog_Params {
	return JobServer_writeLog_Params{s.List.Struct(i)}
}

func (s JobServer_writeLog_Params_List) Set(i int, v JobServer_writeLog_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s JobServer_writeLog_Params_List) String() string {
	str, _ := text.MarshalList(0xe44348b429099d1d, s.List)
	return str
}

// JobServer_writeLog_Params_Promise is a wrapper for a JobServer_writeLog_Params promised by a client call.
type JobServer_writeLog_Params_Promise struct{ *capnp.Pipeline }

func (p JobServer_writeLog_Params_Promise) Struct() (JobServer_writeLog_Params, error) {
	s, err := p.Pipeline.Struct()
	return JobServer_writeLog_Params{s}, err
}

type JobServer_writeLog_Results struct{ capnp.Struct }

// JobServer_writeLog_Results_TypeID is the unique identifier for the type JobServer_writeLog_Results.
const JobServer_writeLog_Results_TypeID = 0x89f8c826c56fbd67

func NewJobServer_writeLog_Results(s *capnp.Segment) (JobServer_writeLog_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobServer_writeLog_Results{st}, err
}

func NewRootJobServer_writeLog_Results(s *capnp.Segment) (JobServer_writeLog_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobServer_writeLog_Results{st}, err
}

func ReadRootJobServer_writeLog_Results(msg *capnp.Message) (JobServer_writeLog_Results, error) {
	root, err := msg.RootPtr()
	return JobServer_writeLog_Results{root.Struct()}, err
}

func (s JobServer_writeLog_Results) String() string {
	str, _ := text.Marshal(0x89f8c826c56fbd67, s.Struct)
	return str
}

// JobServer_writeLog_Results_List is a list of JobServer_writeLog_Results.
type JobServer_writeLog_Results_List struct{ capnp.List }

// NewJobServer_writeLog_Results creates a new list of JobServer_writeLog_Results.
func NewJobServer_writeLog_Results_List(s *capnp.Segment, sz int32) (JobServer_writeLog_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return JobServer_writeLog_Results_List{l}, err
}

func (s JobServer_writeLog_Results_List) At(i int) JobServer_writeLog_Results {
	return JobServer_writeLog_Results{s.List.Struct(i)}
}

func (s JobServer_writeLog_Results_List) Set(i int, v JobServer_writeLog_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s JobServer_writeLog_Results_List) String() string {
	str, _ := text.MarshalList(0x89f8c826c56fbd67, s.List)
	return str
}

// JobServer_writeLog_Results_Promise is a wrapper for a JobServer_writeLog_Results promised by a client call.
type JobServer_writeLog_Results_Promise struct{ *capnp.Pipeline }

func (p JobServer_writeLog_Results_Promise) Struct() (JobServer_writeLog_Results, error) {
	s, err := p.Pipeline.Struct()
	return JobServer_writeLog_Results{s}, err
}

type JobServer_startBulkBuild_Params struct{ capnp.Struct }

// JobServer_startBulkBuild_Params_TypeID is the unique identifier for the type JobServer_startBulkBuild_Params.
const JobServer_startBulkBuild_Params_TypeID = 0xda6fe4545fb3e0d4

func NewJobServer_startBulkBuild_Params(s *capnp.Segment) (JobServer_startBulkBuild_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return JobServer_startBulkBuild_Params{st}, err
}

func NewRootJobServer_startBulkBuild_Params(s *capnp.Segment) (JobServer_startBulkBuild_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return JobServer_startBulkBuild_Params{st}, err
}

func ReadRootJobServer_startBulkBuild_Params(msg *capnp.Message) (JobServer_startBulkBuild_Params, error) {
	root, err := msg.RootPtr()
	return JobServer_startBulkBuild_Params{root.Struct()}, err
}

func (s JobServer_startBulkBuild_Params) String() string {
	str, _ := text.Marshal(0xda6fe4545fb3e0d4, s.Struct)
	return str
}

func (s JobServer_startBulkBuild_Params) Pkgs() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s JobServer_startBulkBuild_Params) HasPkgs() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s JobServer_startBulkBuild_Params) PkgsBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s JobServer_startBulkBuild_Params) SetPkgs(v string) error {
	return s.Struct.SetText(0, v)
}

// JobServer_startBulkBuild_Params_List is a list of JobServer_startBulkBuild_Params.
type JobServer_startBulkBuild_Params_List struct{ capnp.List }

// NewJobServer_startBulkBuild_Params creates a new list of JobServer_startBulkBuild_Params.
func NewJobServer_startBulkBuild_Params_List(s *capnp.Segment, sz int32) (JobServer_startBulkBuild_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return JobServer_startBulkBuild_Params_List{l}, err
}

func (s JobServer_startBulkBuild_Params_List) At(i int) JobServer_startBulkBuild_Params {
	return JobServer_startBulkBuild_Params{s.List.Struct(i)}
}

func (s JobServer_startBulkBuild_Params_List) Set(i int, v JobServer_startBulkBuild_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s JobServer_startBulkBuild_Params_List) String() string {
	str, _ := text.MarshalList(0xda6fe4545fb3e0d4, s.List)
	return str
}

// JobServer_startBulkBuild_Params_Promise is a wrapper for a JobServer_startBulkBuild_Params promised by a client call.
type JobServer_startBulkBuild_Params_Promise struct{ *capnp.Pipeline }

func (p JobServer_startBulkBuild_Params_Promise) Struct() (JobServer_startBulkBuild_Params, error) {
	s, err := p.Pipeline.Struct()
	return JobServer_startBulkBuild_Params{s}, err
}

type JobServer_startBulkBuild_Results struct{ capnp.Struct }

// JobServer_startBulkBuild_Results_TypeID is the unique identifier for the type JobServer_startBulkBuild_Results.
const JobServer_startBulkBuild_Results_TypeID = 0xb749ebe0872f31d4

func NewJobServer_startBulkBuild_Results(s *capnp.Segment) (JobServer_startBulkBuild_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobServer_startBulkBuild_Results{st}, err
}

func NewRootJobServer_startBulkBuild_Results(s *capnp.Segment) (JobServer_startBulkBuild_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobServer_startBulkBuild_Results{st}, err
}

func ReadRootJobServer_startBulkBuild_Results(msg *capnp.Message) (JobServer_startBulkBuild_Results, error) {
	root, err := msg.RootPtr()
	return JobServer_startBulkBuild_Results{root.Struct()}, err
}

func (s JobServer_startBulkBuild_Results) String() string {
	str, _ := text.Marshal(0xb749ebe0872f31d4, s.Struct)
	return str
}

// JobServer_startBulkBuild_Results_List is a list of JobServer_startBulkBuild_Results.
type JobServer_startBulkBuild_Results_List struct{ capnp.List }

// NewJobServer_startBulkBuild_Results creates a new list of JobServer_startBulkBuild_Results.
func NewJobServer_startBulkBuild_Results_List(s *capnp.Segment, sz int32) (JobServer_startBulkBuild_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return JobServer_startBulkBuild_Results_List{l}, err
}

func (s JobServer_startBulkBuild_Results_List) At(i int) JobServer_startBulkBuild_Results {
	return JobServer_startBulkBuild_Results{s.List.Struct(i)}
}

func (s JobServer_startBulkBuild_Results_List) Set(i int, v JobServer_startBulkBuild_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s JobServer_startBulkBuild_Results_List) String() string {
	str, _ := text.MarshalList(0xb749ebe0872f31d4, s.List)
	return str
}

// JobServer_startBulkBuild_Results_Promise is a wrapper for a JobServer_startBulkBuild_Results promised by a client call.
type JobServer_startBulkBuild_Results_Promise struct{ *capnp.Pipeline }

func (p JobServer_startBulkBuild_Results_Promise) Struct() (JobServer_startBulkBuild_Results, error) {
	s, err := p.Pipeline.Struct()
	return JobServer_startBulkBuild_Results{s}, err
}

type RepoServer struct{ Client capnp.Client }

// RepoServer_TypeID is the unique identifier for the type RepoServer.
const RepoServer_TypeID = 0xf29c79ac0b2566be

func (c RepoServer) IsPkgPresent(ctx context.Context, params func(RepoServer_isPkgPresent_Params) error, opts ...capnp.CallOption) RepoServer_isPkgPresent_Results_Promise {
	if c.Client == nil {
		return RepoServer_isPkgPresent_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf29c79ac0b2566be,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:RepoServer",
			MethodName:    "isPkgPresent",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(RepoServer_isPkgPresent_Params{Struct: s}) }
	}
	return RepoServer_isPkgPresent_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type RepoServer_Server interface {
	IsPkgPresent(RepoServer_isPkgPresent) error
}

func RepoServer_ServerToClient(s RepoServer_Server) RepoServer {
	c, _ := s.(server.Closer)
	return RepoServer{Client: server.New(RepoServer_Methods(nil, s), c)}
}

func RepoServer_Methods(methods []server.Method, s RepoServer_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf29c79ac0b2566be,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:RepoServer",
			MethodName:    "isPkgPresent",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := RepoServer_isPkgPresent{c, opts, RepoServer_isPkgPresent_Params{Struct: p}, RepoServer_isPkgPresent_Results{Struct: r}}
			return s.IsPkgPresent(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	return methods
}

// RepoServer_isPkgPresent holds the arguments for a server call to RepoServer.isPkgPresent.
type RepoServer_isPkgPresent struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  RepoServer_isPkgPresent_Params
	Results RepoServer_isPkgPresent_Results
}

type RepoServer_isPkgPresent_Params struct{ capnp.Struct }

// RepoServer_isPkgPresent_Params_TypeID is the unique identifier for the type RepoServer_isPkgPresent_Params.
const RepoServer_isPkgPresent_Params_TypeID = 0x97df26785dd758dd

func NewRepoServer_isPkgPresent_Params(s *capnp.Segment) (RepoServer_isPkgPresent_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RepoServer_isPkgPresent_Params{st}, err
}

func NewRootRepoServer_isPkgPresent_Params(s *capnp.Segment) (RepoServer_isPkgPresent_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RepoServer_isPkgPresent_Params{st}, err
}

func ReadRootRepoServer_isPkgPresent_Params(msg *capnp.Message) (RepoServer_isPkgPresent_Params, error) {
	root, err := msg.RootPtr()
	return RepoServer_isPkgPresent_Params{root.Struct()}, err
}

func (s RepoServer_isPkgPresent_Params) String() string {
	str, _ := text.Marshal(0x97df26785dd758dd, s.Struct)
	return str
}

func (s RepoServer_isPkgPresent_Params) Pkg() (Pkg, error) {
	p, err := s.Struct.Ptr(0)
	return Pkg{Struct: p.Struct()}, err
}

func (s RepoServer_isPkgPresent_Params) HasPkg() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s RepoServer_isPkgPresent_Params) SetPkg(v Pkg) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewPkg sets the pkg field to a newly
// allocated Pkg struct, preferring placement in s's segment.
func (s RepoServer_isPkgPresent_Params) NewPkg() (Pkg, error) {
	ss, err := NewPkg(s.Struct.Segment())
	if err != nil {
		return Pkg{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// RepoServer_isPkgPresent_Params_List is a list of RepoServer_isPkgPresent_Params.
type RepoServer_isPkgPresent_Params_List struct{ capnp.List }

// NewRepoServer_isPkgPresent_Params creates a new list of RepoServer_isPkgPresent_Params.
func NewRepoServer_isPkgPresent_Params_List(s *capnp.Segment, sz int32) (RepoServer_isPkgPresent_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return RepoServer_isPkgPresent_Params_List{l}, err
}

func (s RepoServer_isPkgPresent_Params_List) At(i int) RepoServer_isPkgPresent_Params {
	return RepoServer_isPkgPresent_Params{s.List.Struct(i)}
}

func (s RepoServer_isPkgPresent_Params_List) Set(i int, v RepoServer_isPkgPresent_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RepoServer_isPkgPresent_Params_List) String() string {
	str, _ := text.MarshalList(0x97df26785dd758dd, s.List)
	return str
}

// RepoServer_isPkgPresent_Params_Promise is a wrapper for a RepoServer_isPkgPresent_Params promised by a client call.
type RepoServer_isPkgPresent_Params_Promise struct{ *capnp.Pipeline }

func (p RepoServer_isPkgPresent_Params_Promise) Struct() (RepoServer_isPkgPresent_Params, error) {
	s, err := p.Pipeline.Struct()
	return RepoServer_isPkgPresent_Params{s}, err
}

func (p RepoServer_isPkgPresent_Params_Promise) Pkg() Pkg_Promise {
	return Pkg_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type RepoServer_isPkgPresent_Results struct{ capnp.Struct }

// RepoServer_isPkgPresent_Results_TypeID is the unique identifier for the type RepoServer_isPkgPresent_Results.
const RepoServer_isPkgPresent_Results_TypeID = 0xccea0ca373f73a7c

func NewRepoServer_isPkgPresent_Results(s *capnp.Segment) (RepoServer_isPkgPresent_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RepoServer_isPkgPresent_Results{st}, err
}

func NewRootRepoServer_isPkgPresent_Results(s *capnp.Segment) (RepoServer_isPkgPresent_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RepoServer_isPkgPresent_Results{st}, err
}

func ReadRootRepoServer_isPkgPresent_Results(msg *capnp.Message) (RepoServer_isPkgPresent_Results, error) {
	root, err := msg.RootPtr()
	return RepoServer_isPkgPresent_Results{root.Struct()}, err
}

func (s RepoServer_isPkgPresent_Results) String() string {
	str, _ := text.Marshal(0xccea0ca373f73a7c, s.Struct)
	return str
}

func (s RepoServer_isPkgPresent_Results) Present() bool {
	return s.Struct.Bit(0)
}

func (s RepoServer_isPkgPresent_Results) SetPresent(v bool) {
	s.Struct.SetBit(0, v)
}

// RepoServer_isPkgPresent_Results_List is a list of RepoServer_isPkgPresent_Results.
type RepoServer_isPkgPresent_Results_List struct{ capnp.List }

// NewRepoServer_isPkgPresent_Results creates a new list of RepoServer_isPkgPresent_Results.
func NewRepoServer_isPkgPresent_Results_List(s *capnp.Segment, sz int32) (RepoServer_isPkgPresent_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return RepoServer_isPkgPresent_Results_List{l}, err
}

func (s RepoServer_isPkgPresent_Results_List) At(i int) RepoServer_isPkgPresent_Results {
	return RepoServer_isPkgPresent_Results{s.List.Struct(i)}
}

func (s RepoServer_isPkgPresent_Results_List) Set(i int, v RepoServer_isPkgPresent_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RepoServer_isPkgPresent_Results_List) String() string {
	str, _ := text.MarshalList(0xccea0ca373f73a7c, s.List)
	return str
}

// RepoServer_isPkgPresent_Results_Promise is a wrapper for a RepoServer_isPkgPresent_Results promised by a client call.
type RepoServer_isPkgPresent_Results_Promise struct{ *capnp.Pipeline }

func (p RepoServer_isPkgPresent_Results_Promise) Struct() (RepoServer_isPkgPresent_Results, error) {
	s, err := p.Pipeline.Struct()
	return RepoServer_isPkgPresent_Results{s}, err
}

type RepoSigner struct{ Client capnp.Client }

// RepoSigner_TypeID is the unique identifier for the type RepoSigner.
const RepoSigner_TypeID = 0xa3b158fb18c66958

func (c RepoSigner) Sign(ctx context.Context, params func(RepoSigner_sign_Params) error, opts ...capnp.CallOption) RepoSigner_sign_Results_Promise {
	if c.Client == nil {
		return RepoSigner_sign_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa3b158fb18c66958,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:RepoSigner",
			MethodName:    "sign",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(RepoSigner_sign_Params{Struct: s}) }
	}
	return RepoSigner_sign_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type RepoSigner_Server interface {
	Sign(RepoSigner_sign) error
}

func RepoSigner_ServerToClient(s RepoSigner_Server) RepoSigner {
	c, _ := s.(server.Closer)
	return RepoSigner{Client: server.New(RepoSigner_Methods(nil, s), c)}
}

func RepoSigner_Methods(methods []server.Method, s RepoSigner_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa3b158fb18c66958,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:RepoSigner",
			MethodName:    "sign",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := RepoSigner_sign{c, opts, RepoSigner_sign_Params{Struct: p}, RepoSigner_sign_Results{Struct: r}}
			return s.Sign(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	return methods
}

// RepoSigner_sign holds the arguments for a server call to RepoSigner.sign.
type RepoSigner_sign struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  RepoSigner_sign_Params
	Results RepoSigner_sign_Results
}

type RepoSigner_sign_Params struct{ capnp.Struct }

// RepoSigner_sign_Params_TypeID is the unique identifier for the type RepoSigner_sign_Params.
const RepoSigner_sign_Params_TypeID = 0xdfcb03a7e729b2db

func NewRepoSigner_sign_Params(s *capnp.Segment) (RepoSigner_sign_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return RepoSigner_sign_Params{st}, err
}

func NewRootRepoSigner_sign_Params(s *capnp.Segment) (RepoSigner_sign_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return RepoSigner_sign_Params{st}, err
}

func ReadRootRepoSigner_sign_Params(msg *capnp.Message) (RepoSigner_sign_Params, error) {
	root, err := msg.RootPtr()
	return RepoSigner_sign_Params{root.Struct()}, err
}

func (s RepoSigner_sign_Params) String() string {
	str, _ := text.Marshal(0xdfcb03a7e729b2db, s.Struct)
	return str
}

func (s RepoSigner_sign_Params) Repo() (Repo, error) {
	p, err := s.Struct.Ptr(0)
	return Repo{Struct: p.Struct()}, err
}

func (s RepoSigner_sign_Params) HasRepo() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s RepoSigner_sign_Params) SetRepo(v Repo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRepo sets the repo field to a newly
// allocated Repo struct, preferring placement in s's segment.
func (s RepoSigner_sign_Params) NewRepo() (Repo, error) {
	ss, err := NewRepo(s.Struct.Segment())
	if err != nil {
		return Repo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s RepoSigner_sign_Params) Pkg() (Pkg, error) {
	p, err := s.Struct.Ptr(1)
	return Pkg{Struct: p.Struct()}, err
}

func (s RepoSigner_sign_Params) HasPkg() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s RepoSigner_sign_Params) SetPkg(v Pkg) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewPkg sets the pkg field to a newly
// allocated Pkg struct, preferring placement in s's segment.
func (s RepoSigner_sign_Params) NewPkg() (Pkg, error) {
	ss, err := NewPkg(s.Struct.Segment())
	if err != nil {
		return Pkg{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// RepoSigner_sign_Params_List is a list of RepoSigner_sign_Params.
type RepoSigner_sign_Params_List struct{ capnp.List }

// NewRepoSigner_sign_Params creates a new list of RepoSigner_sign_Params.
func NewRepoSigner_sign_Params_List(s *capnp.Segment, sz int32) (RepoSigner_sign_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return RepoSigner_sign_Params_List{l}, err
}

func (s RepoSigner_sign_Params_List) At(i int) RepoSigner_sign_Params {
	return RepoSigner_sign_Params{s.List.Struct(i)}
}

func (s RepoSigner_sign_Params_List) Set(i int, v RepoSigner_sign_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RepoSigner_sign_Params_List) String() string {
	str, _ := text.MarshalList(0xdfcb03a7e729b2db, s.List)
	return str
}

// RepoSigner_sign_Params_Promise is a wrapper for a RepoSigner_sign_Params promised by a client call.
type RepoSigner_sign_Params_Promise struct{ *capnp.Pipeline }

func (p RepoSigner_sign_Params_Promise) Struct() (RepoSigner_sign_Params, error) {
	s, err := p.Pipeline.Struct()
	return RepoSigner_sign_Params{s}, err
}

func (p RepoSigner_sign_Params_Promise) Repo() Repo_Promise {
	return Repo_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

func (p RepoSigner_sign_Params_Promise) Pkg() Pkg_Promise {
	return Pkg_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

type RepoSigner_sign_Results struct{ capnp.Struct }

// RepoSigner_sign_Results_TypeID is the unique identifier for the type RepoSigner_sign_Results.
const RepoSigner_sign_Results_TypeID = 0xd930226c417f868e

func NewRepoSigner_sign_Results(s *capnp.Segment) (RepoSigner_sign_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RepoSigner_sign_Results{st}, err
}

func NewRootRepoSigner_sign_Results(s *capnp.Segment) (RepoSigner_sign_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RepoSigner_sign_Results{st}, err
}

func ReadRootRepoSigner_sign_Results(msg *capnp.Message) (RepoSigner_sign_Results, error) {
	root, err := msg.RootPtr()
	return RepoSigner_sign_Results{root.Struct()}, err
}

func (s RepoSigner_sign_Results) String() string {
	str, _ := text.Marshal(0xd930226c417f868e, s.Struct)
	return str
}

// RepoSigner_sign_Results_List is a list of RepoSigner_sign_Results.
type RepoSigner_sign_Results_List struct{ capnp.List }

// NewRepoSigner_sign_Results creates a new list of RepoSigner_sign_Results.
func NewRepoSigner_sign_Results_List(s *capnp.Segment, sz int32) (RepoSigner_sign_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return RepoSigner_sign_Results_List{l}, err
}

func (s RepoSigner_sign_Results_List) At(i int) RepoSigner_sign_Results {
	return RepoSigner_sign_Results{s.List.Struct(i)}
}

func (s RepoSigner_sign_Results_List) Set(i int, v RepoSigner_sign_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RepoSigner_sign_Results_List) String() string {
	str, _ := text.MarshalList(0xd930226c417f868e, s.List)
	return str
}

// RepoSigner_sign_Results_Promise is a wrapper for a RepoSigner_sign_Results promised by a client call.
type RepoSigner_sign_Results_Promise struct{ *capnp.Pipeline }

func (p RepoSigner_sign_Results_Promise) Struct() (RepoSigner_sign_Results, error) {
	s, err := p.Pipeline.Struct()
	return RepoSigner_sign_Results{s}, err
}

const schema_902d2bfc3bbf0d43 = "x\xda\xa4Xkp\x13\xd7\x15>g\xd7f%[\xd2" +
	"\xfa\xceB\x12\xa0T)\xc5\x19pc\x82y\x98\xd8\x99" +
	"`[\x84\x12{\x80hE(\x8f\x89\x9b\xc8\xf2V\x16" +
	"\x92%\xb1\xbb\xc2\x98\x96P\x93!\xc0\x0f\xf2\x802\x9d" +
	"dH'\x90\x92\x94NS&\x04\xda\xa4\x19\x08\x99\xd4" +
	"\x04h\x9a\x0e\xe4A!\xa5\xa1\x1d\xda@\x99\xe9\x04:" +
	"L\xa0$l\xe7\xde\xd5\x95\xd6\x96d\xdc\xe4\x8fX\xe9" +
	"\x1e\xbe{\x1e\xdf\xf9\xceYO\xf9\xb8\xbcY\xa8+\xdf" +
	"P\x05\xa0\x1e*\x1fa\x8d\xea\xdd\xd1\xb6\xf3\xdbO>" +
	"\x06D\x16\xac\xd9\xde7\xef\xf9\xe2;\xb5O\x01\xa02" +
	"\xc9\xb5S\xa9sI\x00\xd3j]2\x02Z\xab\xaf]" +
	"\xdc\x96\x0ao\xdd\x08\xea-\x88\x00e\xf4\xe8C\xd7x" +
	"\x04T\xce\xb8\x9a\x00\xad\xe8\x81T\xff\x1dG\xaen\x02" +
	"2\x9a\x9f\x7f\xe9\x0a!\x94Y\xb8\xb1\xfb\x91\x7f*\x9f" +
	"=\x01\xe4V~r\xc15\x95\x9e\x9cYr\xb2}\xd5" +
	"\x1d\x9f\xfc\x14\xc8\x18\x04(Gzt\xdc\xa5\xe7A\xfb" +
	"G%\x9b\xe2\x7fz\xf7\x19 \xb28\xc0\xbf/]\xbf" +
	"S\xca\xdd\x12\x80\x82\xeew\x94>\xfadU/1~" +
	"\xf8\xd1\x94\xf4vP\xc7\xe6\\\x8c\xb9WS\xb4\x8c\x9b" +
	"\xa2-\x89\x1d\xbe\xed\xfa\x92W^(@{\xc6}B" +
	"\xd9\xc5\xd0v\xb8\xe7*G\x19\xda\x9aK\xbfy\xf8t" +
	"m\xdf\xae\x02\xe3W\xdc\xc7\x94\x03\xd4d\xda\xebn\x09" +
	"\x95X\x05\xb5VO\x1c\xd8\xf0\xd7\xb7\xff\xbd+\x9b\x1e" +
	";\x14\xb5\xa2\x8d^\xde^\xd1\x03h\xbdt\xe3\xd8\xd3" +
	"\xfb\xbf\xf1\xd1/\x80\xdc\x923x\xdd6\xe8\xaf\xa0\xde" +
	"-x\xd1l\xb0^+\xff\xb5m\xc0\xbc\xffG\xc52" +
	"\x9a\xa6\x8a\xf0\x03}\x87\xadE{\x0a\xaat\xbc\xe2\xb2" +
	"r\x86\xde\xaf\x9c\xaa\x98\x09h\xbd\xba\xbfu\x96\xff\x80" +
	"\xb0\xd7Y\xa43\x15!z\xc7\x05v\xc7\xed\xd7\xb7\xbc" +
	"\xf8\xe8k[\xf7\x15\x04\xe5\xad<\xad\x8c\xae\xa4H\xa3" +
	"*7(\x19\xfad\x8d\xae\xbb\xf8\xf8\xf1{\xae\xees" +
	"z\xdc^9\x86\xa2i\x95\x14\xed\x83\xba\xbb6\x9c\xbd" +
	"\xd8\xfa[G\xc9\xd7W\xae\xa3\x1e7\xf8\x1e\xbb\xf3)" +
	"E{\xa3\xe0\x9e\x15\x95{\x95^vO\xa6r\xae\xb2" +
	"\x83>]\xdf\xff\xc5\xa5\xf7\xdb\xb7\x1c\x1cl\xba\xa9r" +
	"\xaf\xf245\x98\xb6\xb9RBe\x86\x87\xfat\xf5\xad" +
	"\xf3\x0b\x17\xceZw\x08T\x19\x1d\xb9\xa0w+\xe3<" +
	";\x95jj\xa5|\xcb\xf3)\xa0ur3\x8e8|" +
	"\xe5\x81w\x1c\x09\xbd\xe6\xa9\xa1\xee-=\xf5\xcd\x9fM" +
	"\xfc\xf1\x8d#\xce\xc8\xfe\xe6\x99\xca\xf2\xe4\xa1\x91\xfd\xa8" +
	"\xf1s\xe3\x05\xcf\xbf\xde\x05uL.\x91n/\xa3\xd2" +
	"(/5\xb87\x15\xe8ON\xfb\xef{N\x84\x19\xde" +
	"\x0ej\xd0\xc2\x0c\xca\x16\xff\xbc\xf5\xbd}\xcb\xff\xec " +
	"\xfd\x0ao\x1b\xbd\xfc\x89\xc7\xd7\xb6$\xc6O9e\x93" +
	"\x9e\x9d\xb4{\x1b\xe9\xc9\x07g_}\xf8\xc1s\xa9\xd3" +
	"v>m\xd09\xf6\xad*\x03\x9d\xb2tyK\xc3/" +
	"\x9f\xfd\x8b\xd3\x80\xa1\xa2\xb2\x86\x19<\x1f\x98\xb5\xea\xc4" +
	"\xfa=g\xec[m\x83\xe7\xbc\xcb\xa8\xc1nf\xf0\xf1" +
	"\xdeI\x9f\xbe$\xfe\xe1\x93l\xc7\x09\xd4\xe0\xa8\x97E" +
	"~\xdcKi\xbad\x8b\xdc\xb7n\xfa\xb6\xb3\x8e\x9a\xd6" +
	"\xfa\x18\x0b\xe7\x8d\x1c+\x05w\x1f<\x0bdl\x0e{" +
	"\xb4\x8f5k\xb5\x8fb\x8f{\xce=i\xdf\xfd\xb3\xcf" +
	"\x0dp\xdf\xc7\xbcS\x99A\xc3\xaeG>O|\x7f\xeb" +
	"9\x1b\xc1\xce\x89\xef\xef\x14{\xe3\xa3ee\xdbR\xb7" +
	"^\xa0e\xc5|Y\x19\x86\xa2\xf9v*\xdd>\xfa\x14" +
	"\xf3Q\x17\x95\x9d\x97\xc7\x9d?\xd8\xf2\x19\xa8\xb7\xe6\x8a" +
	"\xd3\xefc,?\xce\xee\xb9\xe5\xc9\x9e\xab\xcb\xef\xaa\xb9" +
	"4\x18\x8dF\xab\\\xf2=\xab\\chW|{\x00" +
	"\xad\xc5G\xd6L\xec7\xdf\xbc\xe4\x08x\xb3\xcct\xeb" +
	"\xe0\x0f\xaa+\x7f\xd5\xbb\xfdr\x01\x89{\xe5\x13\xcaz" +
	"\x99B\xf4\xc9s\x95\x97\xe9\xd3\xf5\xdd\xb3N\xbf\xfd\xc7" +
	"\xe7\xff\x93\x8fl\x9b|\x9a\x82\x9c\xfcI\xf4\xfd\xb7\xde" +
	"8p\xc5A\xc2M6|\xac\xaf\xab\xe1\xf7!\xe1\xaa" +
	"\xe3\xe2\x8c}\xd2\xfbr\xed\xcaC\x0b\xce_s\x06\x18" +
	"\x96\x19\xb9\xbae\x1a\xe0\x87\xdbG\xa5\x1f::\xee\x86" +
	"\xb3\xcc\x9b\xe5Fj\xb0Mn\x82Z\xabsU\xba\xc3" +
	"Hk\x11\x9c\x1c\x09\xa7\x93\xe9\xc6\x16I\x8ft\x05\x11" +
	"\xd5;Q\x00 k\x1a\x01\x10I&\x00\x80\x02\xe9\xee" +
	"\x00@\x91\xc4\xa6\x02`\x19\x09\x87\x00\xb0\x9c\xb4\xd3o" +
	"#\xc8\"\xfaM\"j\x0d\x00\xbaHk\x1b\x00\xba\xc9" +
	"\x1czVA\xee\x0d\x014%Sa=\xd2\xb56L" +
	"?\xeb\xa7[\xd9\x7f\xe7\x83\x941\x12\xfe\xb0\xde\xfd\xbd" +
	"z\x8b}\xce\xcf\x18\x80\xf6/3\xd9/3\xed_\xe4" +
	"X\xfd\xdd\xf5\x16\xfd\x98\x9f1\x12\x00\xe0_uw}" +
	"\xfdt\x8b}\xda&\xb9h\xc4l4\x8bSz\\\xd3" +
	"'wdb\x89\xce\x09!\xcd\xc8H\x09\xd3P\xcb\xc4" +
	"2\x802\x04 \xdeF\x00\xd5%\xa2:R\xc0&\xc3" +
	"\x0c\x9b\x19\x03\xe5\xbc\x8a\x02\xa2\x0c\x98C-\xcb\xa2\xb6" +
	"\xa5:\x16j\xfaJM\x9f\xdc\xa3\xc7Lm^*\xca" +
	"\xb0\x13&\x1a\x05\x1e\x04\xc3\x91x8\xaaM\xee\xd4\xcc" +
	"p,aL\x08\xfa\xc3z\xb8\xdb(\xc0\x0ci\xe9T" +
	"\x164f\x04\xe3\xd1\xa0\xae\x19Z\xd2\xe4\xf6N\x9f\xc7" +
	"\xe7}\x96\xd2\xf1(V\xe5i\x0c\x88U\x0e\x87yQ" +
	"\x83M\xb6\x17\xb4\xae\x1e\xb1\x1c 7i\x91\x13\x84\xa8" +
	"\x01\x10\xc8\x1c\x09\xf3\x82\x84\xbc}H\xc32\x10H\x9d" +
	"\x84BN6\x903\x8fT/\x07\x81\x8c\x93\xd6f\x03" +
	"lF+\x12N\x06\xb4@&\x06b\xc2t~\x95\x13" +
	"f\xa0\xb7\x19\x83X\x98\xd1\xb9z8\xdd\x95\x0d?\x12" +
	"N\x06\xe3\xd1\x80]\xb2&\x96\xd7\x01\xe1\xb7\x01\xa8\x1e" +
	"\x11\xd5\xdb\x04\x1b\x9b\x1a\x02\x8d\x1c\x04DG\xf0\x823" +
	"\xb3\xb1hRC\x9d\xc6_\xc6\xe2\xe7\xea\x86\\c\x09" +
	"\xa9\x01\x81\x94K\xb2\x11\x8b&\x07:)\x0c.;\x00" +
	"\x05\xaab@\\\x14\x90\xcb!Y\x11\x02\x81\xc4h\"" +
	"\xb9\x08#o`\xd2\xde\x06\x02YD\x13\xc9%\x10\xf9" +
	"6D[F -\x12\x8a9uG>6\xc9\x8c\xd5" +
	" \x90Z\xc9\x8akZ\xba%\x11[\x09\xa85\xa3\xa5" +
	"k\xd1\x98aR\x7f\xa0\x19-\xceE\xfb\x9ba\x86u" +
	"3\x90I@S\x9ce\xa8x\xde[\xf5H e\xda" +
	"\xfd\xa1\xe9\xf7\xa5\x92\xda\x84 \xe3\x1b\xa3\x18O\xf9$" +
	"\xca\xb8\x09\"\xaaS\x04D\x1cI\x95\x86\xd4\xd2\xce\x99" +
	"(\xa2:\xbd\x14\x0b\x87\xdfO\xd9.\xe5\xc5\x0c\xc6\xa3" +
	"y/\xbe\x12\xef\x07\x01'b\x86I\x91\xcd`<j" +
	"0h\xd1\xd1\x81\xbc\xbc\xec\xee9\xc9\xce\x90\x9fq\x8e" +
	"\x96\xd8\xc54\x90\x8ca\x1a\xe8\x1e\x0f \xa6\xe2\x92\xa6" +
	"\xeb\xc3\x89\x80+\xc2\xd7\xa1n\xae-D\x8dq\xd7E" +
	")\xc7\x07\x88cH\xd6\x1d\xb3\xfb\x13s\xa3\x17\xf9\x8a" +
	"K\xaa;X\x7fZ\x91.-\x12\xffnJ\x17\x16h" +
	"=YQ2Z\x93sc&\xa3\x0bo:\x90\x0a\xb8" +
	"RTK\xb3I\xfcj\xe5\x91\x0at\x94\xb35\x1e\xc8" +
	")u\xc24\x80\xff\x07\xceV?\xa3k\xbe\x8b\xf9." +
	"\x8d|v\x12B\xa3uK\x16g4H\xa9\xa460" +
	"\x1e.\x8a\x8b\xfd,\xa0|+\xf3-\x10\xf9\xd2GV" +
	"PM\xd4h^\xf9\x86\x8b\xfc\xed\x86,\x9d\x0a\x02\x99" +
	"O[\x99\xaf\xe3\xc8W=\xd2\xa2\x83@\x1ah+\xf3" +
	"]\x1e\xf9\xc2Mj\xa9\x87\xd5\x0e\xbd\xf4w\xd8\xfdi" +
	"q\x9a\x82\x9f\x11\xb5\xd9\xc1\x11)\x18\x8f\x96\x88B\xd2" +
	"\xe3\xd9\x18x%\xc25\x00\xeaC\"\xaa]\x02\x12\xde" +
	"\xaf\x1a\xe5^\xa7\x88jZ@\"\xdc>\x921\xbb;" +
	"\x00\xa0v\x89\xa8\x9a\x02\x12Q\x18\x89\"\x00Y1\x15" +
	"@M\x88\xa8\xae\x12P\xa6C\x1a\xe5\xfc\xdb_\xb6\x83" +
	"\xbbR\x86\xd9\xa2G\xba(y\x0bN\xd7\xc6\x8c\xd9z" +
	"\xca08\xad\xfdFZ\xd3:\xd1\x05\x02\xba\xa0$\xaf" +
	"r\x032,\x0f\x18\x90%\xccB\x9a\xbf`2\xd4\xe4" +
	"\x19(\xf7\xe8q\x1d\xab\xf2o\x01%\x14\xa2\xd4\xd8-" +
	"6x\x02y\xf8\xb5i\xdb\xae\xa0s\x87T\x9eb\x0b" +
	"\x08\xef\x9a\x09\xd9\xae\xf1\x01\x06E\x1c\xd4<\xbe\"7" +
	"\xf0\xc5\x82\x8f\xd7\x84\x99\x13\xcd\x82\xdc\xe5F\xa0>\x99" +
	"\x8e\xb7\\tCl6\x83:\xb2)X\xb0\x868\xb3" +
	"\x9d\x8eG\x0d\xf4\x80\x80\x9e!\xd7%>\xb0\x8a\xca\xbb" +
	"s\x15\xeba\xe9C\xc2\xdf\xf8\xa8\xfe\x0e+\x07\x81\xde" +
	"b\xd2T\x04\xba45J%\x8dob\x8e\xb9X\x93" +
	"\x9f\x8b\xb9F\xab\x1d\x9f\x1f\x8c\xb2\xae\xa5SX\x95\x7f" +
	"i\xb1\xaf\x1a\xe6\xf4\xca\xe7\x8d\x8f}\xcdVF\xb1H" +
	"\xe5JmP_k\x7f\x1cb\xe1\xbd\xd9\x80N\xa4\xa2" +
	"\xe8\x05\x01\xbd\x0e\xb8\x11\xc5|\xcd\x8e\xa5\xc1S)\xd7" +
	",\x05\x8a\x17\x92\xb4t\xca\x9e\x86\xc5\x0a\x91\xabC\x8d" +
	"\xa3\x0e\xc9p\xb7\xc6\xf9YJ\xd3\x86\xd1`\xc5f\xba" +
	"\x93[\xb1$%M\x81(\xe4\xd6p1\x1e\xb5Wp" +
	"\xfe\xbf\xe7P'\x9bET\xe7\xe5\x1do\xa5\xbf\xdd'" +
	"\xa2\x1a\xa4J\x8d\xb6R\xcf\xa7\xb9\xbd_D\xf5\xc1\xe1" +
	"E#\xad\xd4\xf4a4d\x9eX\xac\x9eh\x14\xdf\x9e" +
	"\xa9\xb1s{\xe6\x7f\x8dC\xfe\xd7\x0fB\x96\xdbs\x97" +
	"\x8b(\xc8T\x1e\x07\x8e\xac\xff\xab\xfc\x83\xb7\xb4!6" +
	"\xd6\x82w\xaf!\x84\xa7\xa4mQ)\xb9\xd9\x1bc\x89" +
	"z\x97z\xf7+6Tn\xda\x8c\xff\x0b\x00\x00\xff\xff" +
	"\xf3\xe1&\xf1"

func init() {
	schemas.Register(schema_902d2bfc3bbf0d43,
		0x838f23a24aa17915,
		0x8893616f95ebf97a,
		0x89f8c826c56fbd67,
		0x8ef013e6606d8801,
		0x97df26785dd758dd,
		0x99cccf6b3f6e15c5,
		0x9c7030d67b735825,
		0xa3b158fb18c66958,
		0xa5812dda5fb6f17d,
		0xa5eec3de87bdd251,
		0xa8d61cb591cafea7,
		0xae05b8ff3974a64e,
		0xaf55ffc6814f610a,
		0xb202bd1f3e49b5b3,
		0xb493b87ea692fb20,
		0xb4f83bd186eb3119,
		0xb749ebe0872f31d4,
		0xbb6513902c830e39,
		0xbe925dd3f100fcb5,
		0xc0823e5353e8c1f8,
		0xc74ff5c606018dd7,
		0xc8fe80289e1ed959,
		0xccea0ca373f73a7c,
		0xcefa336ec5426f3d,
		0xd86ab4ce49a45704,
		0xd930226c417f868e,
		0xda6fe4545fb3e0d4,
		0xdc9aaa39416a5930,
		0xddaf85d2783e42a0,
		0xdfcb03a7e729b2db,
		0xe0953482810f9258,
		0xe0bea950071b144c,
		0xe44348b429099d1d,
		0xe4935e6cf760a539,
		0xe9176f9504047e88,
		0xf041bee81df2a213,
		0xf12a2f6af8778f16,
		0xf1bf74c5287dc857,
		0xf29c79ac0b2566be,
		0xf3a0cdc3da003ea9,
		0xf5bdbbc1d36794d7,
		0xf80252c439688169,
		0xf9e84ec0762dad79,
		0xfe1dc95c70159cd5)
}
