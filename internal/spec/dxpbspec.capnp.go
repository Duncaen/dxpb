// Code generated by capnpc-go. DO NOT EDIT.

package spec

import (
	context "golang.org/x/net/context"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
	server "zombiezen.com/go/capnproto2/server"
)

type BuildEndResult uint16

// BuildEndResult_TypeID is the unique identifier for the type BuildEndResult.
const BuildEndResult_TypeID = 0xaf55ffc6814f610a

// Values of BuildEndResult.
const (
	BuildEndResult_ok  BuildEndResult = 0
	BuildEndResult_err BuildEndResult = 1
)

// String returns the enum's constant name.
func (c BuildEndResult) String() string {
	switch c {
	case BuildEndResult_ok:
		return "ok"
	case BuildEndResult_err:
		return "err"

	default:
		return ""
	}
}

// BuildEndResultFromString returns the enum value with a name,
// or the zero value if there's no such value.
func BuildEndResultFromString(c string) BuildEndResult {
	switch c {
	case "ok":
		return BuildEndResult_ok
	case "err":
		return BuildEndResult_err

	default:
		return 0
	}
}

type BuildEndResult_List struct{ capnp.List }

func NewBuildEndResult_List(s *capnp.Segment, sz int32) (BuildEndResult_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return BuildEndResult_List{l.List}, err
}

func (l BuildEndResult_List) At(i int) BuildEndResult {
	ul := capnp.UInt16List{List: l.List}
	return BuildEndResult(ul.At(i))
}

func (l BuildEndResult_List) Set(i int, v BuildEndResult) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Arch uint16

// Arch_TypeID is the unique identifier for the type Arch.
const Arch_TypeID = 0x838f23a24aa17915

// Values of Arch.
const (
	Arch_noarch      Arch = 0
	Arch_aarch64     Arch = 1
	Arch_aarch64Musl Arch = 2
	Arch_armV6       Arch = 3
	Arch_armV6Musl   Arch = 4
	Arch_armV7       Arch = 5
	Arch_armV7Musl   Arch = 6
	Arch_i686        Arch = 7
	Arch_i686Musl    Arch = 8
	Arch_x8664       Arch = 9
	Arch_x8664Musl   Arch = 10
)

// String returns the enum's constant name.
func (c Arch) String() string {
	switch c {
	case Arch_noarch:
		return "noarch"
	case Arch_aarch64:
		return "aarch64"
	case Arch_aarch64Musl:
		return "aarch64Musl"
	case Arch_armV6:
		return "armV6"
	case Arch_armV6Musl:
		return "armV6Musl"
	case Arch_armV7:
		return "armV7"
	case Arch_armV7Musl:
		return "armV7Musl"
	case Arch_i686:
		return "i686"
	case Arch_i686Musl:
		return "i686Musl"
	case Arch_x8664:
		return "x8664"
	case Arch_x8664Musl:
		return "x8664Musl"

	default:
		return ""
	}
}

// ArchFromString returns the enum value with a name,
// or the zero value if there's no such value.
func ArchFromString(c string) Arch {
	switch c {
	case "noarch":
		return Arch_noarch
	case "aarch64":
		return Arch_aarch64
	case "aarch64Musl":
		return Arch_aarch64Musl
	case "armV6":
		return Arch_armV6
	case "armV6Musl":
		return Arch_armV6Musl
	case "armV7":
		return Arch_armV7
	case "armV7Musl":
		return Arch_armV7Musl
	case "i686":
		return Arch_i686
	case "i686Musl":
		return Arch_i686Musl
	case "x8664":
		return Arch_x8664
	case "x8664Musl":
		return Arch_x8664Musl

	default:
		return 0
	}
}

type Arch_List struct{ capnp.List }

func NewArch_List(s *capnp.Segment, sz int32) (Arch_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return Arch_List{l.List}, err
}

func (l Arch_List) At(i int) Arch {
	ul := capnp.UInt16List{List: l.List}
	return Arch(ul.At(i))
}

func (l Arch_List) Set(i int, v Arch) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

type Repo struct{ capnp.Struct }

// Repo_TypeID is the unique identifier for the type Repo.
const Repo_TypeID = 0xe9176f9504047e88

func NewRepo(s *capnp.Segment) (Repo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Repo{st}, err
}

func NewRootRepo(s *capnp.Segment) (Repo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Repo{st}, err
}

func ReadRootRepo(msg *capnp.Message) (Repo, error) {
	root, err := msg.RootPtr()
	return Repo{root.Struct()}, err
}

func (s Repo) String() string {
	str, _ := text.Marshal(0xe9176f9504047e88, s.Struct)
	return str
}

func (s Repo) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Repo) Arch() Arch {
	return Arch(s.Struct.Uint16(0))
}

func (s Repo) SetArch(v Arch) {
	s.Struct.SetUint16(0, uint16(v))
}

// Repo_List is a list of Repo.
type Repo_List struct{ capnp.List }

// NewRepo creates a new list of Repo.
func NewRepo_List(s *capnp.Segment, sz int32) (Repo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Repo_List{l}, err
}

func (s Repo_List) At(i int) Repo { return Repo{s.List.Struct(i)} }

func (s Repo_List) Set(i int, v Repo) error { return s.List.SetStruct(i, v.Struct) }

func (s Repo_List) String() string {
	str, _ := text.MarshalList(0xe9176f9504047e88, s.List)
	return str
}

// Repo_Promise is a wrapper for a Repo promised by a client call.
type Repo_Promise struct{ *capnp.Pipeline }

func (p Repo_Promise) Struct() (Repo, error) {
	s, err := p.Pipeline.Struct()
	return Repo{s}, err
}

type Wrkr struct{ capnp.Struct }

// Wrkr_TypeID is the unique identifier for the type Wrkr.
const Wrkr_TypeID = 0xc0823e5353e8c1f8

func NewWrkr(s *capnp.Segment) (Wrkr, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Wrkr{st}, err
}

func NewRootWrkr(s *capnp.Segment) (Wrkr, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0})
	return Wrkr{st}, err
}

func ReadRootWrkr(msg *capnp.Message) (Wrkr, error) {
	root, err := msg.RootPtr()
	return Wrkr{root.Struct()}, err
}

func (s Wrkr) String() string {
	str, _ := text.Marshal(0xc0823e5353e8c1f8, s.Struct)
	return str
}

func (s Wrkr) Arch() Arch {
	return Arch(s.Struct.Uint16(0))
}

func (s Wrkr) SetArch(v Arch) {
	s.Struct.SetUint16(0, uint16(v))
}

func (s Wrkr) HostArch() Arch {
	return Arch(s.Struct.Uint16(2))
}

func (s Wrkr) SetHostArch(v Arch) {
	s.Struct.SetUint16(2, uint16(v))
}

func (s Wrkr) IsCross() bool {
	return s.Struct.Bit(32)
}

func (s Wrkr) SetIsCross(v bool) {
	s.Struct.SetBit(32, v)
}

func (s Wrkr) Speed() uint32 {
	return s.Struct.Uint32(8)
}

func (s Wrkr) SetSpeed(v uint32) {
	s.Struct.SetUint32(8, v)
}

// Wrkr_List is a list of Wrkr.
type Wrkr_List struct{ capnp.List }

// NewWrkr creates a new list of Wrkr.
func NewWrkr_List(s *capnp.Segment, sz int32) (Wrkr_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 0}, sz)
	return Wrkr_List{l}, err
}

func (s Wrkr_List) At(i int) Wrkr { return Wrkr{s.List.Struct(i)} }

func (s Wrkr_List) Set(i int, v Wrkr) error { return s.List.SetStruct(i, v.Struct) }

func (s Wrkr_List) String() string {
	str, _ := text.MarshalList(0xc0823e5353e8c1f8, s.List)
	return str
}

// Wrkr_Promise is a wrapper for a Wrkr promised by a client call.
type Wrkr_Promise struct{ *capnp.Pipeline }

func (p Wrkr_Promise) Struct() (Wrkr, error) {
	s, err := p.Pipeline.Struct()
	return Wrkr{s}, err
}

type Pkg struct{ capnp.Struct }

// Pkg_TypeID is the unique identifier for the type Pkg.
const Pkg_TypeID = 0xf12a2f6af8778f16

func NewPkg(s *capnp.Segment) (Pkg, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Pkg{st}, err
}

func NewRootPkg(s *capnp.Segment) (Pkg, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Pkg{st}, err
}

func ReadRootPkg(msg *capnp.Message) (Pkg, error) {
	root, err := msg.RootPtr()
	return Pkg{root.Struct()}, err
}

func (s Pkg) String() string {
	str, _ := text.Marshal(0xf12a2f6af8778f16, s.Struct)
	return str
}

func (s Pkg) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Pkg) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Pkg) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Pkg) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Pkg) Arch() Arch {
	return Arch(s.Struct.Uint16(0))
}

func (s Pkg) SetArch(v Arch) {
	s.Struct.SetUint16(0, uint16(v))
}

func (s Pkg) Ver() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Pkg) HasVer() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Pkg) VerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Pkg) SetVer(v string) error {
	return s.Struct.SetText(1, v)
}

// Pkg_List is a list of Pkg.
type Pkg_List struct{ capnp.List }

// NewPkg creates a new list of Pkg.
func NewPkg_List(s *capnp.Segment, sz int32) (Pkg_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return Pkg_List{l}, err
}

func (s Pkg_List) At(i int) Pkg { return Pkg{s.List.Struct(i)} }

func (s Pkg_List) Set(i int, v Pkg) error { return s.List.SetStruct(i, v.Struct) }

func (s Pkg_List) String() string {
	str, _ := text.MarshalList(0xf12a2f6af8778f16, s.List)
	return str
}

// Pkg_Promise is a wrapper for a Pkg promised by a client call.
type Pkg_Promise struct{ *capnp.Pipeline }

func (p Pkg_Promise) Struct() (Pkg, error) {
	s, err := p.Pipeline.Struct()
	return Pkg{s}, err
}

type Package struct{ Client capnp.Client }

// Package_TypeID is the unique identifier for the type Package.
const Package_TypeID = 0x99cccf6b3f6e15c5

func (c Package) Details(ctx context.Context, params func(Package_details_Params) error, opts ...capnp.CallOption) Package_details_Results_Promise {
	if c.Client == nil {
		return Package_details_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x99cccf6b3f6e15c5,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:Package",
			MethodName:    "details",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Package_details_Params{Struct: s}) }
	}
	return Package_details_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Package) CanBeBuilt(ctx context.Context, params func(Package_canBeBuilt_Params) error, opts ...capnp.CallOption) Package_canBeBuilt_Results_Promise {
	if c.Client == nil {
		return Package_canBeBuilt_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x99cccf6b3f6e15c5,
			MethodID:      1,
			InterfaceName: "dxpbspec.capnp:Package",
			MethodName:    "canBeBuilt",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Package_canBeBuilt_Params{Struct: s}) }
	}
	return Package_canBeBuilt_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Package) CanBeBuiltBy(ctx context.Context, params func(Package_canBeBuiltBy_Params) error, opts ...capnp.CallOption) Package_canBeBuiltBy_Results_Promise {
	if c.Client == nil {
		return Package_canBeBuiltBy_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0x99cccf6b3f6e15c5,
			MethodID:      2,
			InterfaceName: "dxpbspec.capnp:Package",
			MethodName:    "canBeBuiltBy",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Package_canBeBuiltBy_Params{Struct: s}) }
	}
	return Package_canBeBuiltBy_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Package_Server interface {
	Details(Package_details) error

	CanBeBuilt(Package_canBeBuilt) error

	CanBeBuiltBy(Package_canBeBuiltBy) error
}

func Package_ServerToClient(s Package_Server) Package {
	c, _ := s.(server.Closer)
	return Package{Client: server.New(Package_Methods(nil, s), c)}
}

func Package_Methods(methods []server.Method, s Package_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 3)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x99cccf6b3f6e15c5,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:Package",
			MethodName:    "details",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Package_details{c, opts, Package_details_Params{Struct: p}, Package_details_Results{Struct: r}}
			return s.Details(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x99cccf6b3f6e15c5,
			MethodID:      1,
			InterfaceName: "dxpbspec.capnp:Package",
			MethodName:    "canBeBuilt",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Package_canBeBuilt{c, opts, Package_canBeBuilt_Params{Struct: p}, Package_canBeBuilt_Results{Struct: r}}
			return s.CanBeBuilt(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0x99cccf6b3f6e15c5,
			MethodID:      2,
			InterfaceName: "dxpbspec.capnp:Package",
			MethodName:    "canBeBuiltBy",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Package_canBeBuiltBy{c, opts, Package_canBeBuiltBy_Params{Struct: p}, Package_canBeBuiltBy_Results{Struct: r}}
			return s.CanBeBuiltBy(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	return methods
}

// Package_details holds the arguments for a server call to Package.details.
type Package_details struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Package_details_Params
	Results Package_details_Results
}

// Package_canBeBuilt holds the arguments for a server call to Package.canBeBuilt.
type Package_canBeBuilt struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Package_canBeBuilt_Params
	Results Package_canBeBuilt_Results
}

// Package_canBeBuiltBy holds the arguments for a server call to Package.canBeBuiltBy.
type Package_canBeBuiltBy struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Package_canBeBuiltBy_Params
	Results Package_canBeBuiltBy_Results
}

type Package_details_Params struct{ capnp.Struct }

// Package_details_Params_TypeID is the unique identifier for the type Package_details_Params.
const Package_details_Params_TypeID = 0x8ef013e6606d8801

func NewPackage_details_Params(s *capnp.Segment) (Package_details_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Package_details_Params{st}, err
}

func NewRootPackage_details_Params(s *capnp.Segment) (Package_details_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Package_details_Params{st}, err
}

func ReadRootPackage_details_Params(msg *capnp.Message) (Package_details_Params, error) {
	root, err := msg.RootPtr()
	return Package_details_Params{root.Struct()}, err
}

func (s Package_details_Params) String() string {
	str, _ := text.Marshal(0x8ef013e6606d8801, s.Struct)
	return str
}

// Package_details_Params_List is a list of Package_details_Params.
type Package_details_Params_List struct{ capnp.List }

// NewPackage_details_Params creates a new list of Package_details_Params.
func NewPackage_details_Params_List(s *capnp.Segment, sz int32) (Package_details_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Package_details_Params_List{l}, err
}

func (s Package_details_Params_List) At(i int) Package_details_Params {
	return Package_details_Params{s.List.Struct(i)}
}

func (s Package_details_Params_List) Set(i int, v Package_details_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Package_details_Params_List) String() string {
	str, _ := text.MarshalList(0x8ef013e6606d8801, s.List)
	return str
}

// Package_details_Params_Promise is a wrapper for a Package_details_Params promised by a client call.
type Package_details_Params_Promise struct{ *capnp.Pipeline }

func (p Package_details_Params_Promise) Struct() (Package_details_Params, error) {
	s, err := p.Pipeline.Struct()
	return Package_details_Params{s}, err
}

type Package_details_Results struct{ capnp.Struct }

// Package_details_Results_TypeID is the unique identifier for the type Package_details_Results.
const Package_details_Results_TypeID = 0xfe1dc95c70159cd5

func NewPackage_details_Results(s *capnp.Segment) (Package_details_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Package_details_Results{st}, err
}

func NewRootPackage_details_Results(s *capnp.Segment) (Package_details_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Package_details_Results{st}, err
}

func ReadRootPackage_details_Results(msg *capnp.Message) (Package_details_Results, error) {
	root, err := msg.RootPtr()
	return Package_details_Results{root.Struct()}, err
}

func (s Package_details_Results) String() string {
	str, _ := text.Marshal(0xfe1dc95c70159cd5, s.Struct)
	return str
}

func (s Package_details_Results) Pkg() (Pkg, error) {
	p, err := s.Struct.Ptr(0)
	return Pkg{Struct: p.Struct()}, err
}

func (s Package_details_Results) HasPkg() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Package_details_Results) SetPkg(v Pkg) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewPkg sets the pkg field to a newly
// allocated Pkg struct, preferring placement in s's segment.
func (s Package_details_Results) NewPkg() (Pkg, error) {
	ss, err := NewPkg(s.Struct.Segment())
	if err != nil {
		return Pkg{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Package_details_Results_List is a list of Package_details_Results.
type Package_details_Results_List struct{ capnp.List }

// NewPackage_details_Results creates a new list of Package_details_Results.
func NewPackage_details_Results_List(s *capnp.Segment, sz int32) (Package_details_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Package_details_Results_List{l}, err
}

func (s Package_details_Results_List) At(i int) Package_details_Results {
	return Package_details_Results{s.List.Struct(i)}
}

func (s Package_details_Results_List) Set(i int, v Package_details_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Package_details_Results_List) String() string {
	str, _ := text.MarshalList(0xfe1dc95c70159cd5, s.List)
	return str
}

// Package_details_Results_Promise is a wrapper for a Package_details_Results promised by a client call.
type Package_details_Results_Promise struct{ *capnp.Pipeline }

func (p Package_details_Results_Promise) Struct() (Package_details_Results, error) {
	s, err := p.Pipeline.Struct()
	return Package_details_Results{s}, err
}

func (p Package_details_Results_Promise) Pkg() Pkg_Promise {
	return Pkg_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Package_canBeBuilt_Params struct{ capnp.Struct }

// Package_canBeBuilt_Params_TypeID is the unique identifier for the type Package_canBeBuilt_Params.
const Package_canBeBuilt_Params_TypeID = 0xd86ab4ce49a45704

func NewPackage_canBeBuilt_Params(s *capnp.Segment) (Package_canBeBuilt_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Package_canBeBuilt_Params{st}, err
}

func NewRootPackage_canBeBuilt_Params(s *capnp.Segment) (Package_canBeBuilt_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Package_canBeBuilt_Params{st}, err
}

func ReadRootPackage_canBeBuilt_Params(msg *capnp.Message) (Package_canBeBuilt_Params, error) {
	root, err := msg.RootPtr()
	return Package_canBeBuilt_Params{root.Struct()}, err
}

func (s Package_canBeBuilt_Params) String() string {
	str, _ := text.Marshal(0xd86ab4ce49a45704, s.Struct)
	return str
}

// Package_canBeBuilt_Params_List is a list of Package_canBeBuilt_Params.
type Package_canBeBuilt_Params_List struct{ capnp.List }

// NewPackage_canBeBuilt_Params creates a new list of Package_canBeBuilt_Params.
func NewPackage_canBeBuilt_Params_List(s *capnp.Segment, sz int32) (Package_canBeBuilt_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Package_canBeBuilt_Params_List{l}, err
}

func (s Package_canBeBuilt_Params_List) At(i int) Package_canBeBuilt_Params {
	return Package_canBeBuilt_Params{s.List.Struct(i)}
}

func (s Package_canBeBuilt_Params_List) Set(i int, v Package_canBeBuilt_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Package_canBeBuilt_Params_List) String() string {
	str, _ := text.MarshalList(0xd86ab4ce49a45704, s.List)
	return str
}

// Package_canBeBuilt_Params_Promise is a wrapper for a Package_canBeBuilt_Params promised by a client call.
type Package_canBeBuilt_Params_Promise struct{ *capnp.Pipeline }

func (p Package_canBeBuilt_Params_Promise) Struct() (Package_canBeBuilt_Params, error) {
	s, err := p.Pipeline.Struct()
	return Package_canBeBuilt_Params{s}, err
}

type Package_canBeBuilt_Results struct{ capnp.Struct }

// Package_canBeBuilt_Results_TypeID is the unique identifier for the type Package_canBeBuilt_Results.
const Package_canBeBuilt_Results_TypeID = 0xf041bee81df2a213

func NewPackage_canBeBuilt_Results(s *capnp.Segment) (Package_canBeBuilt_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Package_canBeBuilt_Results{st}, err
}

func NewRootPackage_canBeBuilt_Results(s *capnp.Segment) (Package_canBeBuilt_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Package_canBeBuilt_Results{st}, err
}

func ReadRootPackage_canBeBuilt_Results(msg *capnp.Message) (Package_canBeBuilt_Results, error) {
	root, err := msg.RootPtr()
	return Package_canBeBuilt_Results{root.Struct()}, err
}

func (s Package_canBeBuilt_Results) String() string {
	str, _ := text.Marshal(0xf041bee81df2a213, s.Struct)
	return str
}

func (s Package_canBeBuilt_Results) InRepo() bool {
	return s.Struct.Bit(0)
}

func (s Package_canBeBuilt_Results) SetInRepo(v bool) {
	s.Struct.SetBit(0, v)
}

// Package_canBeBuilt_Results_List is a list of Package_canBeBuilt_Results.
type Package_canBeBuilt_Results_List struct{ capnp.List }

// NewPackage_canBeBuilt_Results creates a new list of Package_canBeBuilt_Results.
func NewPackage_canBeBuilt_Results_List(s *capnp.Segment, sz int32) (Package_canBeBuilt_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Package_canBeBuilt_Results_List{l}, err
}

func (s Package_canBeBuilt_Results_List) At(i int) Package_canBeBuilt_Results {
	return Package_canBeBuilt_Results{s.List.Struct(i)}
}

func (s Package_canBeBuilt_Results_List) Set(i int, v Package_canBeBuilt_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Package_canBeBuilt_Results_List) String() string {
	str, _ := text.MarshalList(0xf041bee81df2a213, s.List)
	return str
}

// Package_canBeBuilt_Results_Promise is a wrapper for a Package_canBeBuilt_Results promised by a client call.
type Package_canBeBuilt_Results_Promise struct{ *capnp.Pipeline }

func (p Package_canBeBuilt_Results_Promise) Struct() (Package_canBeBuilt_Results, error) {
	s, err := p.Pipeline.Struct()
	return Package_canBeBuilt_Results{s}, err
}

type Package_canBeBuiltBy_Params struct{ capnp.Struct }

// Package_canBeBuiltBy_Params_TypeID is the unique identifier for the type Package_canBeBuiltBy_Params.
const Package_canBeBuiltBy_Params_TypeID = 0xddaf85d2783e42a0

func NewPackage_canBeBuiltBy_Params(s *capnp.Segment) (Package_canBeBuiltBy_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Package_canBeBuiltBy_Params{st}, err
}

func NewRootPackage_canBeBuiltBy_Params(s *capnp.Segment) (Package_canBeBuiltBy_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Package_canBeBuiltBy_Params{st}, err
}

func ReadRootPackage_canBeBuiltBy_Params(msg *capnp.Message) (Package_canBeBuiltBy_Params, error) {
	root, err := msg.RootPtr()
	return Package_canBeBuiltBy_Params{root.Struct()}, err
}

func (s Package_canBeBuiltBy_Params) String() string {
	str, _ := text.Marshal(0xddaf85d2783e42a0, s.Struct)
	return str
}

func (s Package_canBeBuiltBy_Params) Worker() (Wrkr, error) {
	p, err := s.Struct.Ptr(0)
	return Wrkr{Struct: p.Struct()}, err
}

func (s Package_canBeBuiltBy_Params) HasWorker() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Package_canBeBuiltBy_Params) SetWorker(v Wrkr) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewWorker sets the worker field to a newly
// allocated Wrkr struct, preferring placement in s's segment.
func (s Package_canBeBuiltBy_Params) NewWorker() (Wrkr, error) {
	ss, err := NewWrkr(s.Struct.Segment())
	if err != nil {
		return Wrkr{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Package_canBeBuiltBy_Params_List is a list of Package_canBeBuiltBy_Params.
type Package_canBeBuiltBy_Params_List struct{ capnp.List }

// NewPackage_canBeBuiltBy_Params creates a new list of Package_canBeBuiltBy_Params.
func NewPackage_canBeBuiltBy_Params_List(s *capnp.Segment, sz int32) (Package_canBeBuiltBy_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Package_canBeBuiltBy_Params_List{l}, err
}

func (s Package_canBeBuiltBy_Params_List) At(i int) Package_canBeBuiltBy_Params {
	return Package_canBeBuiltBy_Params{s.List.Struct(i)}
}

func (s Package_canBeBuiltBy_Params_List) Set(i int, v Package_canBeBuiltBy_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Package_canBeBuiltBy_Params_List) String() string {
	str, _ := text.MarshalList(0xddaf85d2783e42a0, s.List)
	return str
}

// Package_canBeBuiltBy_Params_Promise is a wrapper for a Package_canBeBuiltBy_Params promised by a client call.
type Package_canBeBuiltBy_Params_Promise struct{ *capnp.Pipeline }

func (p Package_canBeBuiltBy_Params_Promise) Struct() (Package_canBeBuiltBy_Params, error) {
	s, err := p.Pipeline.Struct()
	return Package_canBeBuiltBy_Params{s}, err
}

func (p Package_canBeBuiltBy_Params_Promise) Worker() Wrkr_Promise {
	return Wrkr_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Package_canBeBuiltBy_Results struct{ capnp.Struct }

// Package_canBeBuiltBy_Results_TypeID is the unique identifier for the type Package_canBeBuiltBy_Results.
const Package_canBeBuiltBy_Results_TypeID = 0xf9e84ec0762dad79

func NewPackage_canBeBuiltBy_Results(s *capnp.Segment) (Package_canBeBuiltBy_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Package_canBeBuiltBy_Results{st}, err
}

func NewRootPackage_canBeBuiltBy_Results(s *capnp.Segment) (Package_canBeBuiltBy_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Package_canBeBuiltBy_Results{st}, err
}

func ReadRootPackage_canBeBuiltBy_Results(msg *capnp.Message) (Package_canBeBuiltBy_Results, error) {
	root, err := msg.RootPtr()
	return Package_canBeBuiltBy_Results{root.Struct()}, err
}

func (s Package_canBeBuiltBy_Results) String() string {
	str, _ := text.Marshal(0xf9e84ec0762dad79, s.Struct)
	return str
}

func (s Package_canBeBuiltBy_Results) InRepo() bool {
	return s.Struct.Bit(0)
}

func (s Package_canBeBuiltBy_Results) SetInRepo(v bool) {
	s.Struct.SetBit(0, v)
}

// Package_canBeBuiltBy_Results_List is a list of Package_canBeBuiltBy_Results.
type Package_canBeBuiltBy_Results_List struct{ capnp.List }

// NewPackage_canBeBuiltBy_Results creates a new list of Package_canBeBuiltBy_Results.
func NewPackage_canBeBuiltBy_Results_List(s *capnp.Segment, sz int32) (Package_canBeBuiltBy_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Package_canBeBuiltBy_Results_List{l}, err
}

func (s Package_canBeBuiltBy_Results_List) At(i int) Package_canBeBuiltBy_Results {
	return Package_canBeBuiltBy_Results{s.List.Struct(i)}
}

func (s Package_canBeBuiltBy_Results_List) Set(i int, v Package_canBeBuiltBy_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Package_canBeBuiltBy_Results_List) String() string {
	str, _ := text.MarshalList(0xf9e84ec0762dad79, s.List)
	return str
}

// Package_canBeBuiltBy_Results_Promise is a wrapper for a Package_canBeBuiltBy_Results promised by a client call.
type Package_canBeBuiltBy_Results_Promise struct{ *capnp.Pipeline }

func (p Package_canBeBuiltBy_Results_Promise) Struct() (Package_canBeBuiltBy_Results, error) {
	s, err := p.Pipeline.Struct()
	return Package_canBeBuiltBy_Results{s}, err
}

type IrcBot struct{ Client capnp.Client }

// IrcBot_TypeID is the unique identifier for the type IrcBot.
const IrcBot_TypeID = 0xbb6513902c830e39

func (c IrcBot) BuilderDone(ctx context.Context, params func(IrcBot_builderDone_Params) error, opts ...capnp.CallOption) IrcBot_builderDone_Results_Promise {
	if c.Client == nil {
		return IrcBot_builderDone_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xbb6513902c830e39,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:IrcBot",
			MethodName:    "builderDone",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(IrcBot_builderDone_Params{Struct: s}) }
	}
	return IrcBot_builderDone_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type IrcBot_Server interface {
	BuilderDone(IrcBot_builderDone) error
}

func IrcBot_ServerToClient(s IrcBot_Server) IrcBot {
	c, _ := s.(server.Closer)
	return IrcBot{Client: server.New(IrcBot_Methods(nil, s), c)}
}

func IrcBot_Methods(methods []server.Method, s IrcBot_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbb6513902c830e39,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:IrcBot",
			MethodName:    "builderDone",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := IrcBot_builderDone{c, opts, IrcBot_builderDone_Params{Struct: p}, IrcBot_builderDone_Results{Struct: r}}
			return s.BuilderDone(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	return methods
}

// IrcBot_builderDone holds the arguments for a server call to IrcBot.builderDone.
type IrcBot_builderDone struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  IrcBot_builderDone_Params
	Results IrcBot_builderDone_Results
}

type IrcBot_builderDone_Params struct{ capnp.Struct }

// IrcBot_builderDone_Params_TypeID is the unique identifier for the type IrcBot_builderDone_Params.
const IrcBot_builderDone_Params_TypeID = 0xa5eec3de87bdd251

func NewIrcBot_builderDone_Params(s *capnp.Segment) (IrcBot_builderDone_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return IrcBot_builderDone_Params{st}, err
}

func NewRootIrcBot_builderDone_Params(s *capnp.Segment) (IrcBot_builderDone_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return IrcBot_builderDone_Params{st}, err
}

func ReadRootIrcBot_builderDone_Params(msg *capnp.Message) (IrcBot_builderDone_Params, error) {
	root, err := msg.RootPtr()
	return IrcBot_builderDone_Params{root.Struct()}, err
}

func (s IrcBot_builderDone_Params) String() string {
	str, _ := text.Marshal(0xa5eec3de87bdd251, s.Struct)
	return str
}

func (s IrcBot_builderDone_Params) Pkg() (Pkg, error) {
	p, err := s.Struct.Ptr(0)
	return Pkg{Struct: p.Struct()}, err
}

func (s IrcBot_builderDone_Params) HasPkg() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s IrcBot_builderDone_Params) SetPkg(v Pkg) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewPkg sets the pkg field to a newly
// allocated Pkg struct, preferring placement in s's segment.
func (s IrcBot_builderDone_Params) NewPkg() (Pkg, error) {
	ss, err := NewPkg(s.Struct.Segment())
	if err != nil {
		return Pkg{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s IrcBot_builderDone_Params) Status() BuildEndResult {
	return BuildEndResult(s.Struct.Uint16(0))
}

func (s IrcBot_builderDone_Params) SetStatus(v BuildEndResult) {
	s.Struct.SetUint16(0, uint16(v))
}

// IrcBot_builderDone_Params_List is a list of IrcBot_builderDone_Params.
type IrcBot_builderDone_Params_List struct{ capnp.List }

// NewIrcBot_builderDone_Params creates a new list of IrcBot_builderDone_Params.
func NewIrcBot_builderDone_Params_List(s *capnp.Segment, sz int32) (IrcBot_builderDone_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return IrcBot_builderDone_Params_List{l}, err
}

func (s IrcBot_builderDone_Params_List) At(i int) IrcBot_builderDone_Params {
	return IrcBot_builderDone_Params{s.List.Struct(i)}
}

func (s IrcBot_builderDone_Params_List) Set(i int, v IrcBot_builderDone_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s IrcBot_builderDone_Params_List) String() string {
	str, _ := text.MarshalList(0xa5eec3de87bdd251, s.List)
	return str
}

// IrcBot_builderDone_Params_Promise is a wrapper for a IrcBot_builderDone_Params promised by a client call.
type IrcBot_builderDone_Params_Promise struct{ *capnp.Pipeline }

func (p IrcBot_builderDone_Params_Promise) Struct() (IrcBot_builderDone_Params, error) {
	s, err := p.Pipeline.Struct()
	return IrcBot_builderDone_Params{s}, err
}

func (p IrcBot_builderDone_Params_Promise) Pkg() Pkg_Promise {
	return Pkg_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type IrcBot_builderDone_Results struct{ capnp.Struct }

// IrcBot_builderDone_Results_TypeID is the unique identifier for the type IrcBot_builderDone_Results.
const IrcBot_builderDone_Results_TypeID = 0xf5bdbbc1d36794d7

func NewIrcBot_builderDone_Results(s *capnp.Segment) (IrcBot_builderDone_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return IrcBot_builderDone_Results{st}, err
}

func NewRootIrcBot_builderDone_Results(s *capnp.Segment) (IrcBot_builderDone_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return IrcBot_builderDone_Results{st}, err
}

func ReadRootIrcBot_builderDone_Results(msg *capnp.Message) (IrcBot_builderDone_Results, error) {
	root, err := msg.RootPtr()
	return IrcBot_builderDone_Results{root.Struct()}, err
}

func (s IrcBot_builderDone_Results) String() string {
	str, _ := text.Marshal(0xf5bdbbc1d36794d7, s.Struct)
	return str
}

// IrcBot_builderDone_Results_List is a list of IrcBot_builderDone_Results.
type IrcBot_builderDone_Results_List struct{ capnp.List }

// NewIrcBot_builderDone_Results creates a new list of IrcBot_builderDone_Results.
func NewIrcBot_builderDone_Results_List(s *capnp.Segment, sz int32) (IrcBot_builderDone_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return IrcBot_builderDone_Results_List{l}, err
}

func (s IrcBot_builderDone_Results_List) At(i int) IrcBot_builderDone_Results {
	return IrcBot_builderDone_Results{s.List.Struct(i)}
}

func (s IrcBot_builderDone_Results_List) Set(i int, v IrcBot_builderDone_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s IrcBot_builderDone_Results_List) String() string {
	str, _ := text.MarshalList(0xf5bdbbc1d36794d7, s.List)
	return str
}

// IrcBot_builderDone_Results_Promise is a wrapper for a IrcBot_builderDone_Results promised by a client call.
type IrcBot_builderDone_Results_Promise struct{ *capnp.Pipeline }

func (p IrcBot_builderDone_Results_Promise) Struct() (IrcBot_builderDone_Results, error) {
	s, err := p.Pipeline.Struct()
	return IrcBot_builderDone_Results{s}, err
}

type GraphServer struct{ Client capnp.Client }

// GraphServer_TypeID is the unique identifier for the type GraphServer.
const GraphServer_TypeID = 0xb493b87ea692fb20

func (c GraphServer) CheckForNewPackagesInGit(ctx context.Context, params func(GraphServer_checkForNewPackagesInGit_Params) error, opts ...capnp.CallOption) GraphServer_checkForNewPackagesInGit_Results_Promise {
	if c.Client == nil {
		return GraphServer_checkForNewPackagesInGit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xb493b87ea692fb20,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:GraphServer",
			MethodName:    "checkForNewPackagesInGit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(GraphServer_checkForNewPackagesInGit_Params{Struct: s}) }
	}
	return GraphServer_checkForNewPackagesInGit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c GraphServer) CanPkgBuild(ctx context.Context, params func(GraphServer_canPkgBuild_Params) error, opts ...capnp.CallOption) GraphServer_canPkgBuild_Results_Promise {
	if c.Client == nil {
		return GraphServer_canPkgBuild_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xb493b87ea692fb20,
			MethodID:      1,
			InterfaceName: "dxpbspec.capnp:GraphServer",
			MethodName:    "canPkgBuild",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(GraphServer_canPkgBuild_Params{Struct: s}) }
	}
	return GraphServer_canPkgBuild_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type GraphServer_Server interface {
	CheckForNewPackagesInGit(GraphServer_checkForNewPackagesInGit) error

	CanPkgBuild(GraphServer_canPkgBuild) error
}

func GraphServer_ServerToClient(s GraphServer_Server) GraphServer {
	c, _ := s.(server.Closer)
	return GraphServer{Client: server.New(GraphServer_Methods(nil, s), c)}
}

func GraphServer_Methods(methods []server.Method, s GraphServer_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb493b87ea692fb20,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:GraphServer",
			MethodName:    "checkForNewPackagesInGit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := GraphServer_checkForNewPackagesInGit{c, opts, GraphServer_checkForNewPackagesInGit_Params{Struct: p}, GraphServer_checkForNewPackagesInGit_Results{Struct: r}}
			return s.CheckForNewPackagesInGit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb493b87ea692fb20,
			MethodID:      1,
			InterfaceName: "dxpbspec.capnp:GraphServer",
			MethodName:    "canPkgBuild",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := GraphServer_canPkgBuild{c, opts, GraphServer_canPkgBuild_Params{Struct: p}, GraphServer_canPkgBuild_Results{Struct: r}}
			return s.CanPkgBuild(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	return methods
}

// GraphServer_checkForNewPackagesInGit holds the arguments for a server call to GraphServer.checkForNewPackagesInGit.
type GraphServer_checkForNewPackagesInGit struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  GraphServer_checkForNewPackagesInGit_Params
	Results GraphServer_checkForNewPackagesInGit_Results
}

// GraphServer_canPkgBuild holds the arguments for a server call to GraphServer.canPkgBuild.
type GraphServer_canPkgBuild struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  GraphServer_canPkgBuild_Params
	Results GraphServer_canPkgBuild_Results
}

type GraphServer_checkForNewPackagesInGit_Params struct{ capnp.Struct }

// GraphServer_checkForNewPackagesInGit_Params_TypeID is the unique identifier for the type GraphServer_checkForNewPackagesInGit_Params.
const GraphServer_checkForNewPackagesInGit_Params_TypeID = 0xf3a0cdc3da003ea9

func NewGraphServer_checkForNewPackagesInGit_Params(s *capnp.Segment) (GraphServer_checkForNewPackagesInGit_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GraphServer_checkForNewPackagesInGit_Params{st}, err
}

func NewRootGraphServer_checkForNewPackagesInGit_Params(s *capnp.Segment) (GraphServer_checkForNewPackagesInGit_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GraphServer_checkForNewPackagesInGit_Params{st}, err
}

func ReadRootGraphServer_checkForNewPackagesInGit_Params(msg *capnp.Message) (GraphServer_checkForNewPackagesInGit_Params, error) {
	root, err := msg.RootPtr()
	return GraphServer_checkForNewPackagesInGit_Params{root.Struct()}, err
}

func (s GraphServer_checkForNewPackagesInGit_Params) String() string {
	str, _ := text.Marshal(0xf3a0cdc3da003ea9, s.Struct)
	return str
}

// GraphServer_checkForNewPackagesInGit_Params_List is a list of GraphServer_checkForNewPackagesInGit_Params.
type GraphServer_checkForNewPackagesInGit_Params_List struct{ capnp.List }

// NewGraphServer_checkForNewPackagesInGit_Params creates a new list of GraphServer_checkForNewPackagesInGit_Params.
func NewGraphServer_checkForNewPackagesInGit_Params_List(s *capnp.Segment, sz int32) (GraphServer_checkForNewPackagesInGit_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return GraphServer_checkForNewPackagesInGit_Params_List{l}, err
}

func (s GraphServer_checkForNewPackagesInGit_Params_List) At(i int) GraphServer_checkForNewPackagesInGit_Params {
	return GraphServer_checkForNewPackagesInGit_Params{s.List.Struct(i)}
}

func (s GraphServer_checkForNewPackagesInGit_Params_List) Set(i int, v GraphServer_checkForNewPackagesInGit_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GraphServer_checkForNewPackagesInGit_Params_List) String() string {
	str, _ := text.MarshalList(0xf3a0cdc3da003ea9, s.List)
	return str
}

// GraphServer_checkForNewPackagesInGit_Params_Promise is a wrapper for a GraphServer_checkForNewPackagesInGit_Params promised by a client call.
type GraphServer_checkForNewPackagesInGit_Params_Promise struct{ *capnp.Pipeline }

func (p GraphServer_checkForNewPackagesInGit_Params_Promise) Struct() (GraphServer_checkForNewPackagesInGit_Params, error) {
	s, err := p.Pipeline.Struct()
	return GraphServer_checkForNewPackagesInGit_Params{s}, err
}

type GraphServer_checkForNewPackagesInGit_Results struct{ capnp.Struct }

// GraphServer_checkForNewPackagesInGit_Results_TypeID is the unique identifier for the type GraphServer_checkForNewPackagesInGit_Results.
const GraphServer_checkForNewPackagesInGit_Results_TypeID = 0xe4935e6cf760a539

func NewGraphServer_checkForNewPackagesInGit_Results(s *capnp.Segment) (GraphServer_checkForNewPackagesInGit_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GraphServer_checkForNewPackagesInGit_Results{st}, err
}

func NewRootGraphServer_checkForNewPackagesInGit_Results(s *capnp.Segment) (GraphServer_checkForNewPackagesInGit_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return GraphServer_checkForNewPackagesInGit_Results{st}, err
}

func ReadRootGraphServer_checkForNewPackagesInGit_Results(msg *capnp.Message) (GraphServer_checkForNewPackagesInGit_Results, error) {
	root, err := msg.RootPtr()
	return GraphServer_checkForNewPackagesInGit_Results{root.Struct()}, err
}

func (s GraphServer_checkForNewPackagesInGit_Results) String() string {
	str, _ := text.Marshal(0xe4935e6cf760a539, s.Struct)
	return str
}

// GraphServer_checkForNewPackagesInGit_Results_List is a list of GraphServer_checkForNewPackagesInGit_Results.
type GraphServer_checkForNewPackagesInGit_Results_List struct{ capnp.List }

// NewGraphServer_checkForNewPackagesInGit_Results creates a new list of GraphServer_checkForNewPackagesInGit_Results.
func NewGraphServer_checkForNewPackagesInGit_Results_List(s *capnp.Segment, sz int32) (GraphServer_checkForNewPackagesInGit_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return GraphServer_checkForNewPackagesInGit_Results_List{l}, err
}

func (s GraphServer_checkForNewPackagesInGit_Results_List) At(i int) GraphServer_checkForNewPackagesInGit_Results {
	return GraphServer_checkForNewPackagesInGit_Results{s.List.Struct(i)}
}

func (s GraphServer_checkForNewPackagesInGit_Results_List) Set(i int, v GraphServer_checkForNewPackagesInGit_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GraphServer_checkForNewPackagesInGit_Results_List) String() string {
	str, _ := text.MarshalList(0xe4935e6cf760a539, s.List)
	return str
}

// GraphServer_checkForNewPackagesInGit_Results_Promise is a wrapper for a GraphServer_checkForNewPackagesInGit_Results promised by a client call.
type GraphServer_checkForNewPackagesInGit_Results_Promise struct{ *capnp.Pipeline }

func (p GraphServer_checkForNewPackagesInGit_Results_Promise) Struct() (GraphServer_checkForNewPackagesInGit_Results, error) {
	s, err := p.Pipeline.Struct()
	return GraphServer_checkForNewPackagesInGit_Results{s}, err
}

type GraphServer_canPkgBuild_Params struct{ capnp.Struct }

// GraphServer_canPkgBuild_Params_TypeID is the unique identifier for the type GraphServer_canPkgBuild_Params.
const GraphServer_canPkgBuild_Params_TypeID = 0xe0bea950071b144c

func NewGraphServer_canPkgBuild_Params(s *capnp.Segment) (GraphServer_canPkgBuild_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GraphServer_canPkgBuild_Params{st}, err
}

func NewRootGraphServer_canPkgBuild_Params(s *capnp.Segment) (GraphServer_canPkgBuild_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return GraphServer_canPkgBuild_Params{st}, err
}

func ReadRootGraphServer_canPkgBuild_Params(msg *capnp.Message) (GraphServer_canPkgBuild_Params, error) {
	root, err := msg.RootPtr()
	return GraphServer_canPkgBuild_Params{root.Struct()}, err
}

func (s GraphServer_canPkgBuild_Params) String() string {
	str, _ := text.Marshal(0xe0bea950071b144c, s.Struct)
	return str
}

func (s GraphServer_canPkgBuild_Params) Pkg() (Pkg, error) {
	p, err := s.Struct.Ptr(0)
	return Pkg{Struct: p.Struct()}, err
}

func (s GraphServer_canPkgBuild_Params) HasPkg() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GraphServer_canPkgBuild_Params) SetPkg(v Pkg) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewPkg sets the pkg field to a newly
// allocated Pkg struct, preferring placement in s's segment.
func (s GraphServer_canPkgBuild_Params) NewPkg() (Pkg, error) {
	ss, err := NewPkg(s.Struct.Segment())
	if err != nil {
		return Pkg{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// GraphServer_canPkgBuild_Params_List is a list of GraphServer_canPkgBuild_Params.
type GraphServer_canPkgBuild_Params_List struct{ capnp.List }

// NewGraphServer_canPkgBuild_Params creates a new list of GraphServer_canPkgBuild_Params.
func NewGraphServer_canPkgBuild_Params_List(s *capnp.Segment, sz int32) (GraphServer_canPkgBuild_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return GraphServer_canPkgBuild_Params_List{l}, err
}

func (s GraphServer_canPkgBuild_Params_List) At(i int) GraphServer_canPkgBuild_Params {
	return GraphServer_canPkgBuild_Params{s.List.Struct(i)}
}

func (s GraphServer_canPkgBuild_Params_List) Set(i int, v GraphServer_canPkgBuild_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GraphServer_canPkgBuild_Params_List) String() string {
	str, _ := text.MarshalList(0xe0bea950071b144c, s.List)
	return str
}

// GraphServer_canPkgBuild_Params_Promise is a wrapper for a GraphServer_canPkgBuild_Params promised by a client call.
type GraphServer_canPkgBuild_Params_Promise struct{ *capnp.Pipeline }

func (p GraphServer_canPkgBuild_Params_Promise) Struct() (GraphServer_canPkgBuild_Params, error) {
	s, err := p.Pipeline.Struct()
	return GraphServer_canPkgBuild_Params{s}, err
}

func (p GraphServer_canPkgBuild_Params_Promise) Pkg() Pkg_Promise {
	return Pkg_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type GraphServer_canPkgBuild_Results struct{ capnp.Struct }

// GraphServer_canPkgBuild_Results_TypeID is the unique identifier for the type GraphServer_canPkgBuild_Results.
const GraphServer_canPkgBuild_Results_TypeID = 0x9c7030d67b735825

func NewGraphServer_canPkgBuild_Results(s *capnp.Segment) (GraphServer_canPkgBuild_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return GraphServer_canPkgBuild_Results{st}, err
}

func NewRootGraphServer_canPkgBuild_Results(s *capnp.Segment) (GraphServer_canPkgBuild_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return GraphServer_canPkgBuild_Results{st}, err
}

func ReadRootGraphServer_canPkgBuild_Results(msg *capnp.Message) (GraphServer_canPkgBuild_Results, error) {
	root, err := msg.RootPtr()
	return GraphServer_canPkgBuild_Results{root.Struct()}, err
}

func (s GraphServer_canPkgBuild_Results) String() string {
	str, _ := text.Marshal(0x9c7030d67b735825, s.Struct)
	return str
}

func (s GraphServer_canPkgBuild_Results) CanBuild() bool {
	return s.Struct.Bit(0)
}

func (s GraphServer_canPkgBuild_Results) SetCanBuild(v bool) {
	s.Struct.SetBit(0, v)
}

// GraphServer_canPkgBuild_Results_List is a list of GraphServer_canPkgBuild_Results.
type GraphServer_canPkgBuild_Results_List struct{ capnp.List }

// NewGraphServer_canPkgBuild_Results creates a new list of GraphServer_canPkgBuild_Results.
func NewGraphServer_canPkgBuild_Results_List(s *capnp.Segment, sz int32) (GraphServer_canPkgBuild_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return GraphServer_canPkgBuild_Results_List{l}, err
}

func (s GraphServer_canPkgBuild_Results_List) At(i int) GraphServer_canPkgBuild_Results {
	return GraphServer_canPkgBuild_Results{s.List.Struct(i)}
}

func (s GraphServer_canPkgBuild_Results_List) Set(i int, v GraphServer_canPkgBuild_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s GraphServer_canPkgBuild_Results_List) String() string {
	str, _ := text.MarshalList(0x9c7030d67b735825, s.List)
	return str
}

// GraphServer_canPkgBuild_Results_Promise is a wrapper for a GraphServer_canPkgBuild_Results promised by a client call.
type GraphServer_canPkgBuild_Results_Promise struct{ *capnp.Pipeline }

func (p GraphServer_canPkgBuild_Results_Promise) Struct() (GraphServer_canPkgBuild_Results, error) {
	s, err := p.Pipeline.Struct()
	return GraphServer_canPkgBuild_Results{s}, err
}

type JobServer struct{ Client capnp.Client }

// JobServer_TypeID is the unique identifier for the type JobServer.
const JobServer_TypeID = 0xa5812dda5fb6f17d

func (c JobServer) KeepAlive(ctx context.Context, params func(JobServer_keepAlive_Params) error, opts ...capnp.CallOption) JobServer_keepAlive_Results_Promise {
	if c.Client == nil {
		return JobServer_keepAlive_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa5812dda5fb6f17d,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:JobServer",
			MethodName:    "keepAlive",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(JobServer_keepAlive_Params{Struct: s}) }
	}
	return JobServer_keepAlive_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c JobServer) Register(ctx context.Context, params func(JobServer_register_Params) error, opts ...capnp.CallOption) JobServer_register_Results_Promise {
	if c.Client == nil {
		return JobServer_register_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa5812dda5fb6f17d,
			MethodID:      1,
			InterfaceName: "dxpbspec.capnp:JobServer",
			MethodName:    "register",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(JobServer_register_Params{Struct: s}) }
	}
	return JobServer_register_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c JobServer) WriteLog(ctx context.Context, params func(JobServer_writeLog_Params) error, opts ...capnp.CallOption) JobServer_writeLog_Results_Promise {
	if c.Client == nil {
		return JobServer_writeLog_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa5812dda5fb6f17d,
			MethodID:      2,
			InterfaceName: "dxpbspec.capnp:JobServer",
			MethodName:    "writeLog",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(JobServer_writeLog_Params{Struct: s}) }
	}
	return JobServer_writeLog_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c JobServer) StartBulkBuild(ctx context.Context, params func(JobServer_startBulkBuild_Params) error, opts ...capnp.CallOption) JobServer_startBulkBuild_Results_Promise {
	if c.Client == nil {
		return JobServer_startBulkBuild_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa5812dda5fb6f17d,
			MethodID:      3,
			InterfaceName: "dxpbspec.capnp:JobServer",
			MethodName:    "startBulkBuild",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(JobServer_startBulkBuild_Params{Struct: s}) }
	}
	return JobServer_startBulkBuild_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type JobServer_Server interface {
	KeepAlive(JobServer_keepAlive) error

	Register(JobServer_register) error

	WriteLog(JobServer_writeLog) error

	StartBulkBuild(JobServer_startBulkBuild) error
}

func JobServer_ServerToClient(s JobServer_Server) JobServer {
	c, _ := s.(server.Closer)
	return JobServer{Client: server.New(JobServer_Methods(nil, s), c)}
}

func JobServer_Methods(methods []server.Method, s JobServer_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 4)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa5812dda5fb6f17d,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:JobServer",
			MethodName:    "keepAlive",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := JobServer_keepAlive{c, opts, JobServer_keepAlive_Params{Struct: p}, JobServer_keepAlive_Results{Struct: r}}
			return s.KeepAlive(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa5812dda5fb6f17d,
			MethodID:      1,
			InterfaceName: "dxpbspec.capnp:JobServer",
			MethodName:    "register",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := JobServer_register{c, opts, JobServer_register_Params{Struct: p}, JobServer_register_Results{Struct: r}}
			return s.Register(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa5812dda5fb6f17d,
			MethodID:      2,
			InterfaceName: "dxpbspec.capnp:JobServer",
			MethodName:    "writeLog",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := JobServer_writeLog{c, opts, JobServer_writeLog_Params{Struct: p}, JobServer_writeLog_Results{Struct: r}}
			return s.WriteLog(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa5812dda5fb6f17d,
			MethodID:      3,
			InterfaceName: "dxpbspec.capnp:JobServer",
			MethodName:    "startBulkBuild",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := JobServer_startBulkBuild{c, opts, JobServer_startBulkBuild_Params{Struct: p}, JobServer_startBulkBuild_Results{Struct: r}}
			return s.StartBulkBuild(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	return methods
}

// JobServer_keepAlive holds the arguments for a server call to JobServer.keepAlive.
type JobServer_keepAlive struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  JobServer_keepAlive_Params
	Results JobServer_keepAlive_Results
}

// JobServer_register holds the arguments for a server call to JobServer.register.
type JobServer_register struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  JobServer_register_Params
	Results JobServer_register_Results
}

// JobServer_writeLog holds the arguments for a server call to JobServer.writeLog.
type JobServer_writeLog struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  JobServer_writeLog_Params
	Results JobServer_writeLog_Results
}

// JobServer_startBulkBuild holds the arguments for a server call to JobServer.startBulkBuild.
type JobServer_startBulkBuild struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  JobServer_startBulkBuild_Params
	Results JobServer_startBulkBuild_Results
}

type JobServer_keepAlive_Params struct{ capnp.Struct }

// JobServer_keepAlive_Params_TypeID is the unique identifier for the type JobServer_keepAlive_Params.
const JobServer_keepAlive_Params_TypeID = 0xf1bf74c5287dc857

func NewJobServer_keepAlive_Params(s *capnp.Segment) (JobServer_keepAlive_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobServer_keepAlive_Params{st}, err
}

func NewRootJobServer_keepAlive_Params(s *capnp.Segment) (JobServer_keepAlive_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobServer_keepAlive_Params{st}, err
}

func ReadRootJobServer_keepAlive_Params(msg *capnp.Message) (JobServer_keepAlive_Params, error) {
	root, err := msg.RootPtr()
	return JobServer_keepAlive_Params{root.Struct()}, err
}

func (s JobServer_keepAlive_Params) String() string {
	str, _ := text.Marshal(0xf1bf74c5287dc857, s.Struct)
	return str
}

// JobServer_keepAlive_Params_List is a list of JobServer_keepAlive_Params.
type JobServer_keepAlive_Params_List struct{ capnp.List }

// NewJobServer_keepAlive_Params creates a new list of JobServer_keepAlive_Params.
func NewJobServer_keepAlive_Params_List(s *capnp.Segment, sz int32) (JobServer_keepAlive_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return JobServer_keepAlive_Params_List{l}, err
}

func (s JobServer_keepAlive_Params_List) At(i int) JobServer_keepAlive_Params {
	return JobServer_keepAlive_Params{s.List.Struct(i)}
}

func (s JobServer_keepAlive_Params_List) Set(i int, v JobServer_keepAlive_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s JobServer_keepAlive_Params_List) String() string {
	str, _ := text.MarshalList(0xf1bf74c5287dc857, s.List)
	return str
}

// JobServer_keepAlive_Params_Promise is a wrapper for a JobServer_keepAlive_Params promised by a client call.
type JobServer_keepAlive_Params_Promise struct{ *capnp.Pipeline }

func (p JobServer_keepAlive_Params_Promise) Struct() (JobServer_keepAlive_Params, error) {
	s, err := p.Pipeline.Struct()
	return JobServer_keepAlive_Params{s}, err
}

type JobServer_keepAlive_Results struct{ capnp.Struct }

// JobServer_keepAlive_Results_TypeID is the unique identifier for the type JobServer_keepAlive_Results.
const JobServer_keepAlive_Results_TypeID = 0xe0953482810f9258

func NewJobServer_keepAlive_Results(s *capnp.Segment) (JobServer_keepAlive_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobServer_keepAlive_Results{st}, err
}

func NewRootJobServer_keepAlive_Results(s *capnp.Segment) (JobServer_keepAlive_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobServer_keepAlive_Results{st}, err
}

func ReadRootJobServer_keepAlive_Results(msg *capnp.Message) (JobServer_keepAlive_Results, error) {
	root, err := msg.RootPtr()
	return JobServer_keepAlive_Results{root.Struct()}, err
}

func (s JobServer_keepAlive_Results) String() string {
	str, _ := text.Marshal(0xe0953482810f9258, s.Struct)
	return str
}

// JobServer_keepAlive_Results_List is a list of JobServer_keepAlive_Results.
type JobServer_keepAlive_Results_List struct{ capnp.List }

// NewJobServer_keepAlive_Results creates a new list of JobServer_keepAlive_Results.
func NewJobServer_keepAlive_Results_List(s *capnp.Segment, sz int32) (JobServer_keepAlive_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return JobServer_keepAlive_Results_List{l}, err
}

func (s JobServer_keepAlive_Results_List) At(i int) JobServer_keepAlive_Results {
	return JobServer_keepAlive_Results{s.List.Struct(i)}
}

func (s JobServer_keepAlive_Results_List) Set(i int, v JobServer_keepAlive_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s JobServer_keepAlive_Results_List) String() string {
	str, _ := text.MarshalList(0xe0953482810f9258, s.List)
	return str
}

// JobServer_keepAlive_Results_Promise is a wrapper for a JobServer_keepAlive_Results promised by a client call.
type JobServer_keepAlive_Results_Promise struct{ *capnp.Pipeline }

func (p JobServer_keepAlive_Results_Promise) Struct() (JobServer_keepAlive_Results, error) {
	s, err := p.Pipeline.Struct()
	return JobServer_keepAlive_Results{s}, err
}

type JobServer_register_Params struct{ capnp.Struct }

// JobServer_register_Params_TypeID is the unique identifier for the type JobServer_register_Params.
const JobServer_register_Params_TypeID = 0xdc9aaa39416a5930

func NewJobServer_register_Params(s *capnp.Segment) (JobServer_register_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return JobServer_register_Params{st}, err
}

func NewRootJobServer_register_Params(s *capnp.Segment) (JobServer_register_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return JobServer_register_Params{st}, err
}

func ReadRootJobServer_register_Params(msg *capnp.Message) (JobServer_register_Params, error) {
	root, err := msg.RootPtr()
	return JobServer_register_Params{root.Struct()}, err
}

func (s JobServer_register_Params) String() string {
	str, _ := text.Marshal(0xdc9aaa39416a5930, s.Struct)
	return str
}

func (s JobServer_register_Params) Worker() Worker {
	p, _ := s.Struct.Ptr(0)
	return Worker{Client: p.Interface().Client()}
}

func (s JobServer_register_Params) HasWorker() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s JobServer_register_Params) SetWorker(v Worker) error {
	if v.Client == nil {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// JobServer_register_Params_List is a list of JobServer_register_Params.
type JobServer_register_Params_List struct{ capnp.List }

// NewJobServer_register_Params creates a new list of JobServer_register_Params.
func NewJobServer_register_Params_List(s *capnp.Segment, sz int32) (JobServer_register_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return JobServer_register_Params_List{l}, err
}

func (s JobServer_register_Params_List) At(i int) JobServer_register_Params {
	return JobServer_register_Params{s.List.Struct(i)}
}

func (s JobServer_register_Params_List) Set(i int, v JobServer_register_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s JobServer_register_Params_List) String() string {
	str, _ := text.MarshalList(0xdc9aaa39416a5930, s.List)
	return str
}

// JobServer_register_Params_Promise is a wrapper for a JobServer_register_Params promised by a client call.
type JobServer_register_Params_Promise struct{ *capnp.Pipeline }

func (p JobServer_register_Params_Promise) Struct() (JobServer_register_Params, error) {
	s, err := p.Pipeline.Struct()
	return JobServer_register_Params{s}, err
}

func (p JobServer_register_Params_Promise) Worker() Worker {
	return Worker{Client: p.Pipeline.GetPipeline(0).Client()}
}

type JobServer_register_Results struct{ capnp.Struct }

// JobServer_register_Results_TypeID is the unique identifier for the type JobServer_register_Results.
const JobServer_register_Results_TypeID = 0xf80252c439688169

func NewJobServer_register_Results(s *capnp.Segment) (JobServer_register_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobServer_register_Results{st}, err
}

func NewRootJobServer_register_Results(s *capnp.Segment) (JobServer_register_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobServer_register_Results{st}, err
}

func ReadRootJobServer_register_Results(msg *capnp.Message) (JobServer_register_Results, error) {
	root, err := msg.RootPtr()
	return JobServer_register_Results{root.Struct()}, err
}

func (s JobServer_register_Results) String() string {
	str, _ := text.Marshal(0xf80252c439688169, s.Struct)
	return str
}

// JobServer_register_Results_List is a list of JobServer_register_Results.
type JobServer_register_Results_List struct{ capnp.List }

// NewJobServer_register_Results creates a new list of JobServer_register_Results.
func NewJobServer_register_Results_List(s *capnp.Segment, sz int32) (JobServer_register_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return JobServer_register_Results_List{l}, err
}

func (s JobServer_register_Results_List) At(i int) JobServer_register_Results {
	return JobServer_register_Results{s.List.Struct(i)}
}

func (s JobServer_register_Results_List) Set(i int, v JobServer_register_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s JobServer_register_Results_List) String() string {
	str, _ := text.MarshalList(0xf80252c439688169, s.List)
	return str
}

// JobServer_register_Results_Promise is a wrapper for a JobServer_register_Results promised by a client call.
type JobServer_register_Results_Promise struct{ *capnp.Pipeline }

func (p JobServer_register_Results_Promise) Struct() (JobServer_register_Results, error) {
	s, err := p.Pipeline.Struct()
	return JobServer_register_Results{s}, err
}

type JobServer_writeLog_Params struct{ capnp.Struct }

// JobServer_writeLog_Params_TypeID is the unique identifier for the type JobServer_writeLog_Params.
const JobServer_writeLog_Params_TypeID = 0xe44348b429099d1d

func NewJobServer_writeLog_Params(s *capnp.Segment) (JobServer_writeLog_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return JobServer_writeLog_Params{st}, err
}

func NewRootJobServer_writeLog_Params(s *capnp.Segment) (JobServer_writeLog_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return JobServer_writeLog_Params{st}, err
}

func ReadRootJobServer_writeLog_Params(msg *capnp.Message) (JobServer_writeLog_Params, error) {
	root, err := msg.RootPtr()
	return JobServer_writeLog_Params{root.Struct()}, err
}

func (s JobServer_writeLog_Params) String() string {
	str, _ := text.Marshal(0xe44348b429099d1d, s.Struct)
	return str
}

func (s JobServer_writeLog_Params) Log() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s JobServer_writeLog_Params) HasLog() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s JobServer_writeLog_Params) SetLog(v []byte) error {
	return s.Struct.SetData(0, v)
}

// JobServer_writeLog_Params_List is a list of JobServer_writeLog_Params.
type JobServer_writeLog_Params_List struct{ capnp.List }

// NewJobServer_writeLog_Params creates a new list of JobServer_writeLog_Params.
func NewJobServer_writeLog_Params_List(s *capnp.Segment, sz int32) (JobServer_writeLog_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return JobServer_writeLog_Params_List{l}, err
}

func (s JobServer_writeLog_Params_List) At(i int) JobServer_writeLog_Params {
	return JobServer_writeLog_Params{s.List.Struct(i)}
}

func (s JobServer_writeLog_Params_List) Set(i int, v JobServer_writeLog_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s JobServer_writeLog_Params_List) String() string {
	str, _ := text.MarshalList(0xe44348b429099d1d, s.List)
	return str
}

// JobServer_writeLog_Params_Promise is a wrapper for a JobServer_writeLog_Params promised by a client call.
type JobServer_writeLog_Params_Promise struct{ *capnp.Pipeline }

func (p JobServer_writeLog_Params_Promise) Struct() (JobServer_writeLog_Params, error) {
	s, err := p.Pipeline.Struct()
	return JobServer_writeLog_Params{s}, err
}

type JobServer_writeLog_Results struct{ capnp.Struct }

// JobServer_writeLog_Results_TypeID is the unique identifier for the type JobServer_writeLog_Results.
const JobServer_writeLog_Results_TypeID = 0x89f8c826c56fbd67

func NewJobServer_writeLog_Results(s *capnp.Segment) (JobServer_writeLog_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobServer_writeLog_Results{st}, err
}

func NewRootJobServer_writeLog_Results(s *capnp.Segment) (JobServer_writeLog_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobServer_writeLog_Results{st}, err
}

func ReadRootJobServer_writeLog_Results(msg *capnp.Message) (JobServer_writeLog_Results, error) {
	root, err := msg.RootPtr()
	return JobServer_writeLog_Results{root.Struct()}, err
}

func (s JobServer_writeLog_Results) String() string {
	str, _ := text.Marshal(0x89f8c826c56fbd67, s.Struct)
	return str
}

// JobServer_writeLog_Results_List is a list of JobServer_writeLog_Results.
type JobServer_writeLog_Results_List struct{ capnp.List }

// NewJobServer_writeLog_Results creates a new list of JobServer_writeLog_Results.
func NewJobServer_writeLog_Results_List(s *capnp.Segment, sz int32) (JobServer_writeLog_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return JobServer_writeLog_Results_List{l}, err
}

func (s JobServer_writeLog_Results_List) At(i int) JobServer_writeLog_Results {
	return JobServer_writeLog_Results{s.List.Struct(i)}
}

func (s JobServer_writeLog_Results_List) Set(i int, v JobServer_writeLog_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s JobServer_writeLog_Results_List) String() string {
	str, _ := text.MarshalList(0x89f8c826c56fbd67, s.List)
	return str
}

// JobServer_writeLog_Results_Promise is a wrapper for a JobServer_writeLog_Results promised by a client call.
type JobServer_writeLog_Results_Promise struct{ *capnp.Pipeline }

func (p JobServer_writeLog_Results_Promise) Struct() (JobServer_writeLog_Results, error) {
	s, err := p.Pipeline.Struct()
	return JobServer_writeLog_Results{s}, err
}

type JobServer_startBulkBuild_Params struct{ capnp.Struct }

// JobServer_startBulkBuild_Params_TypeID is the unique identifier for the type JobServer_startBulkBuild_Params.
const JobServer_startBulkBuild_Params_TypeID = 0xda6fe4545fb3e0d4

func NewJobServer_startBulkBuild_Params(s *capnp.Segment) (JobServer_startBulkBuild_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return JobServer_startBulkBuild_Params{st}, err
}

func NewRootJobServer_startBulkBuild_Params(s *capnp.Segment) (JobServer_startBulkBuild_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return JobServer_startBulkBuild_Params{st}, err
}

func ReadRootJobServer_startBulkBuild_Params(msg *capnp.Message) (JobServer_startBulkBuild_Params, error) {
	root, err := msg.RootPtr()
	return JobServer_startBulkBuild_Params{root.Struct()}, err
}

func (s JobServer_startBulkBuild_Params) String() string {
	str, _ := text.Marshal(0xda6fe4545fb3e0d4, s.Struct)
	return str
}

func (s JobServer_startBulkBuild_Params) Pkgs() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s JobServer_startBulkBuild_Params) HasPkgs() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s JobServer_startBulkBuild_Params) PkgsBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s JobServer_startBulkBuild_Params) SetPkgs(v string) error {
	return s.Struct.SetText(0, v)
}

// JobServer_startBulkBuild_Params_List is a list of JobServer_startBulkBuild_Params.
type JobServer_startBulkBuild_Params_List struct{ capnp.List }

// NewJobServer_startBulkBuild_Params creates a new list of JobServer_startBulkBuild_Params.
func NewJobServer_startBulkBuild_Params_List(s *capnp.Segment, sz int32) (JobServer_startBulkBuild_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return JobServer_startBulkBuild_Params_List{l}, err
}

func (s JobServer_startBulkBuild_Params_List) At(i int) JobServer_startBulkBuild_Params {
	return JobServer_startBulkBuild_Params{s.List.Struct(i)}
}

func (s JobServer_startBulkBuild_Params_List) Set(i int, v JobServer_startBulkBuild_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s JobServer_startBulkBuild_Params_List) String() string {
	str, _ := text.MarshalList(0xda6fe4545fb3e0d4, s.List)
	return str
}

// JobServer_startBulkBuild_Params_Promise is a wrapper for a JobServer_startBulkBuild_Params promised by a client call.
type JobServer_startBulkBuild_Params_Promise struct{ *capnp.Pipeline }

func (p JobServer_startBulkBuild_Params_Promise) Struct() (JobServer_startBulkBuild_Params, error) {
	s, err := p.Pipeline.Struct()
	return JobServer_startBulkBuild_Params{s}, err
}

type JobServer_startBulkBuild_Results struct{ capnp.Struct }

// JobServer_startBulkBuild_Results_TypeID is the unique identifier for the type JobServer_startBulkBuild_Results.
const JobServer_startBulkBuild_Results_TypeID = 0xb749ebe0872f31d4

func NewJobServer_startBulkBuild_Results(s *capnp.Segment) (JobServer_startBulkBuild_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobServer_startBulkBuild_Results{st}, err
}

func NewRootJobServer_startBulkBuild_Results(s *capnp.Segment) (JobServer_startBulkBuild_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return JobServer_startBulkBuild_Results{st}, err
}

func ReadRootJobServer_startBulkBuild_Results(msg *capnp.Message) (JobServer_startBulkBuild_Results, error) {
	root, err := msg.RootPtr()
	return JobServer_startBulkBuild_Results{root.Struct()}, err
}

func (s JobServer_startBulkBuild_Results) String() string {
	str, _ := text.Marshal(0xb749ebe0872f31d4, s.Struct)
	return str
}

// JobServer_startBulkBuild_Results_List is a list of JobServer_startBulkBuild_Results.
type JobServer_startBulkBuild_Results_List struct{ capnp.List }

// NewJobServer_startBulkBuild_Results creates a new list of JobServer_startBulkBuild_Results.
func NewJobServer_startBulkBuild_Results_List(s *capnp.Segment, sz int32) (JobServer_startBulkBuild_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return JobServer_startBulkBuild_Results_List{l}, err
}

func (s JobServer_startBulkBuild_Results_List) At(i int) JobServer_startBulkBuild_Results {
	return JobServer_startBulkBuild_Results{s.List.Struct(i)}
}

func (s JobServer_startBulkBuild_Results_List) Set(i int, v JobServer_startBulkBuild_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s JobServer_startBulkBuild_Results_List) String() string {
	str, _ := text.MarshalList(0xb749ebe0872f31d4, s.List)
	return str
}

// JobServer_startBulkBuild_Results_Promise is a wrapper for a JobServer_startBulkBuild_Results promised by a client call.
type JobServer_startBulkBuild_Results_Promise struct{ *capnp.Pipeline }

func (p JobServer_startBulkBuild_Results_Promise) Struct() (JobServer_startBulkBuild_Results, error) {
	s, err := p.Pipeline.Struct()
	return JobServer_startBulkBuild_Results{s}, err
}

type Worker struct{ Client capnp.Client }

// Worker_TypeID is the unique identifier for the type Worker.
const Worker_TypeID = 0xbe925dd3f100fcb5

func (c Worker) Details(ctx context.Context, params func(Worker_details_Params) error, opts ...capnp.CallOption) Worker_details_Results_Promise {
	if c.Client == nil {
		return Worker_details_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xbe925dd3f100fcb5,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:Worker",
			MethodName:    "details",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Worker_details_Params{Struct: s}) }
	}
	return Worker_details_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Worker) Build(ctx context.Context, params func(Worker_build_Params) error, opts ...capnp.CallOption) Worker_build_Results_Promise {
	if c.Client == nil {
		return Worker_build_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xbe925dd3f100fcb5,
			MethodID:      1,
			InterfaceName: "dxpbspec.capnp:Worker",
			MethodName:    "build",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Worker_build_Params{Struct: s}) }
	}
	return Worker_build_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Worker_Server interface {
	Details(Worker_details) error

	Build(Worker_build) error
}

func Worker_ServerToClient(s Worker_Server) Worker {
	c, _ := s.(server.Closer)
	return Worker{Client: server.New(Worker_Methods(nil, s), c)}
}

func Worker_Methods(methods []server.Method, s Worker_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbe925dd3f100fcb5,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:Worker",
			MethodName:    "details",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Worker_details{c, opts, Worker_details_Params{Struct: p}, Worker_details_Results{Struct: r}}
			return s.Details(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xbe925dd3f100fcb5,
			MethodID:      1,
			InterfaceName: "dxpbspec.capnp:Worker",
			MethodName:    "build",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Worker_build{c, opts, Worker_build_Params{Struct: p}, Worker_build_Results{Struct: r}}
			return s.Build(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	return methods
}

// Worker_details holds the arguments for a server call to Worker.details.
type Worker_details struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Worker_details_Params
	Results Worker_details_Results
}

// Worker_build holds the arguments for a server call to Worker.build.
type Worker_build struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Worker_build_Params
	Results Worker_build_Results
}

type Worker_details_Params struct{ capnp.Struct }

// Worker_details_Params_TypeID is the unique identifier for the type Worker_details_Params.
const Worker_details_Params_TypeID = 0xc74ff5c606018dd7

func NewWorker_details_Params(s *capnp.Segment) (Worker_details_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Worker_details_Params{st}, err
}

func NewRootWorker_details_Params(s *capnp.Segment) (Worker_details_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Worker_details_Params{st}, err
}

func ReadRootWorker_details_Params(msg *capnp.Message) (Worker_details_Params, error) {
	root, err := msg.RootPtr()
	return Worker_details_Params{root.Struct()}, err
}

func (s Worker_details_Params) String() string {
	str, _ := text.Marshal(0xc74ff5c606018dd7, s.Struct)
	return str
}

// Worker_details_Params_List is a list of Worker_details_Params.
type Worker_details_Params_List struct{ capnp.List }

// NewWorker_details_Params creates a new list of Worker_details_Params.
func NewWorker_details_Params_List(s *capnp.Segment, sz int32) (Worker_details_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Worker_details_Params_List{l}, err
}

func (s Worker_details_Params_List) At(i int) Worker_details_Params {
	return Worker_details_Params{s.List.Struct(i)}
}

func (s Worker_details_Params_List) Set(i int, v Worker_details_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Worker_details_Params_List) String() string {
	str, _ := text.MarshalList(0xc74ff5c606018dd7, s.List)
	return str
}

// Worker_details_Params_Promise is a wrapper for a Worker_details_Params promised by a client call.
type Worker_details_Params_Promise struct{ *capnp.Pipeline }

func (p Worker_details_Params_Promise) Struct() (Worker_details_Params, error) {
	s, err := p.Pipeline.Struct()
	return Worker_details_Params{s}, err
}

type Worker_details_Results struct{ capnp.Struct }

// Worker_details_Results_TypeID is the unique identifier for the type Worker_details_Results.
const Worker_details_Results_TypeID = 0xc8fe80289e1ed959

func NewWorker_details_Results(s *capnp.Segment) (Worker_details_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Worker_details_Results{st}, err
}

func NewRootWorker_details_Results(s *capnp.Segment) (Worker_details_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Worker_details_Results{st}, err
}

func ReadRootWorker_details_Results(msg *capnp.Message) (Worker_details_Results, error) {
	root, err := msg.RootPtr()
	return Worker_details_Results{root.Struct()}, err
}

func (s Worker_details_Results) String() string {
	str, _ := text.Marshal(0xc8fe80289e1ed959, s.Struct)
	return str
}

func (s Worker_details_Results) Wrkr() (Wrkr, error) {
	p, err := s.Struct.Ptr(0)
	return Wrkr{Struct: p.Struct()}, err
}

func (s Worker_details_Results) HasWrkr() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Worker_details_Results) SetWrkr(v Wrkr) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewWrkr sets the wrkr field to a newly
// allocated Wrkr struct, preferring placement in s's segment.
func (s Worker_details_Results) NewWrkr() (Wrkr, error) {
	ss, err := NewWrkr(s.Struct.Segment())
	if err != nil {
		return Wrkr{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Worker_details_Results_List is a list of Worker_details_Results.
type Worker_details_Results_List struct{ capnp.List }

// NewWorker_details_Results creates a new list of Worker_details_Results.
func NewWorker_details_Results_List(s *capnp.Segment, sz int32) (Worker_details_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Worker_details_Results_List{l}, err
}

func (s Worker_details_Results_List) At(i int) Worker_details_Results {
	return Worker_details_Results{s.List.Struct(i)}
}

func (s Worker_details_Results_List) Set(i int, v Worker_details_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Worker_details_Results_List) String() string {
	str, _ := text.MarshalList(0xc8fe80289e1ed959, s.List)
	return str
}

// Worker_details_Results_Promise is a wrapper for a Worker_details_Results promised by a client call.
type Worker_details_Results_Promise struct{ *capnp.Pipeline }

func (p Worker_details_Results_Promise) Struct() (Worker_details_Results, error) {
	s, err := p.Pipeline.Struct()
	return Worker_details_Results{s}, err
}

func (p Worker_details_Results_Promise) Wrkr() Wrkr_Promise {
	return Wrkr_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Worker_build_Params struct{ capnp.Struct }

// Worker_build_Params_TypeID is the unique identifier for the type Worker_build_Params.
const Worker_build_Params_TypeID = 0xb4f83bd186eb3119

func NewWorker_build_Params(s *capnp.Segment) (Worker_build_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Worker_build_Params{st}, err
}

func NewRootWorker_build_Params(s *capnp.Segment) (Worker_build_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Worker_build_Params{st}, err
}

func ReadRootWorker_build_Params(msg *capnp.Message) (Worker_build_Params, error) {
	root, err := msg.RootPtr()
	return Worker_build_Params{root.Struct()}, err
}

func (s Worker_build_Params) String() string {
	str, _ := text.Marshal(0xb4f83bd186eb3119, s.Struct)
	return str
}

func (s Worker_build_Params) Pkg() (Pkg, error) {
	p, err := s.Struct.Ptr(0)
	return Pkg{Struct: p.Struct()}, err
}

func (s Worker_build_Params) HasPkg() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Worker_build_Params) SetPkg(v Pkg) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewPkg sets the pkg field to a newly
// allocated Pkg struct, preferring placement in s's segment.
func (s Worker_build_Params) NewPkg() (Pkg, error) {
	ss, err := NewPkg(s.Struct.Segment())
	if err != nil {
		return Pkg{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Worker_build_Params_List is a list of Worker_build_Params.
type Worker_build_Params_List struct{ capnp.List }

// NewWorker_build_Params creates a new list of Worker_build_Params.
func NewWorker_build_Params_List(s *capnp.Segment, sz int32) (Worker_build_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Worker_build_Params_List{l}, err
}

func (s Worker_build_Params_List) At(i int) Worker_build_Params {
	return Worker_build_Params{s.List.Struct(i)}
}

func (s Worker_build_Params_List) Set(i int, v Worker_build_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Worker_build_Params_List) String() string {
	str, _ := text.MarshalList(0xb4f83bd186eb3119, s.List)
	return str
}

// Worker_build_Params_Promise is a wrapper for a Worker_build_Params promised by a client call.
type Worker_build_Params_Promise struct{ *capnp.Pipeline }

func (p Worker_build_Params_Promise) Struct() (Worker_build_Params, error) {
	s, err := p.Pipeline.Struct()
	return Worker_build_Params{s}, err
}

func (p Worker_build_Params_Promise) Pkg() Pkg_Promise {
	return Pkg_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Worker_build_Results struct{ capnp.Struct }

// Worker_build_Results_TypeID is the unique identifier for the type Worker_build_Results.
const Worker_build_Results_TypeID = 0x8893616f95ebf97a

func NewWorker_build_Results(s *capnp.Segment) (Worker_build_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Worker_build_Results{st}, err
}

func NewRootWorker_build_Results(s *capnp.Segment) (Worker_build_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Worker_build_Results{st}, err
}

func ReadRootWorker_build_Results(msg *capnp.Message) (Worker_build_Results, error) {
	root, err := msg.RootPtr()
	return Worker_build_Results{root.Struct()}, err
}

func (s Worker_build_Results) String() string {
	str, _ := text.Marshal(0x8893616f95ebf97a, s.Struct)
	return str
}

func (s Worker_build_Results) Status() BuildEndResult {
	return BuildEndResult(s.Struct.Uint16(0))
}

func (s Worker_build_Results) SetStatus(v BuildEndResult) {
	s.Struct.SetUint16(0, uint16(v))
}

// Worker_build_Results_List is a list of Worker_build_Results.
type Worker_build_Results_List struct{ capnp.List }

// NewWorker_build_Results creates a new list of Worker_build_Results.
func NewWorker_build_Results_List(s *capnp.Segment, sz int32) (Worker_build_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Worker_build_Results_List{l}, err
}

func (s Worker_build_Results_List) At(i int) Worker_build_Results {
	return Worker_build_Results{s.List.Struct(i)}
}

func (s Worker_build_Results_List) Set(i int, v Worker_build_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Worker_build_Results_List) String() string {
	str, _ := text.MarshalList(0x8893616f95ebf97a, s.List)
	return str
}

// Worker_build_Results_Promise is a wrapper for a Worker_build_Results promised by a client call.
type Worker_build_Results_Promise struct{ *capnp.Pipeline }

func (p Worker_build_Results_Promise) Struct() (Worker_build_Results, error) {
	s, err := p.Pipeline.Struct()
	return Worker_build_Results{s}, err
}

type RepoServer struct{ Client capnp.Client }

// RepoServer_TypeID is the unique identifier for the type RepoServer.
const RepoServer_TypeID = 0xf29c79ac0b2566be

func (c RepoServer) IsPkgPresent(ctx context.Context, params func(RepoServer_isPkgPresent_Params) error, opts ...capnp.CallOption) RepoServer_isPkgPresent_Results_Promise {
	if c.Client == nil {
		return RepoServer_isPkgPresent_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xf29c79ac0b2566be,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:RepoServer",
			MethodName:    "isPkgPresent",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(RepoServer_isPkgPresent_Params{Struct: s}) }
	}
	return RepoServer_isPkgPresent_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type RepoServer_Server interface {
	IsPkgPresent(RepoServer_isPkgPresent) error
}

func RepoServer_ServerToClient(s RepoServer_Server) RepoServer {
	c, _ := s.(server.Closer)
	return RepoServer{Client: server.New(RepoServer_Methods(nil, s), c)}
}

func RepoServer_Methods(methods []server.Method, s RepoServer_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xf29c79ac0b2566be,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:RepoServer",
			MethodName:    "isPkgPresent",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := RepoServer_isPkgPresent{c, opts, RepoServer_isPkgPresent_Params{Struct: p}, RepoServer_isPkgPresent_Results{Struct: r}}
			return s.IsPkgPresent(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	return methods
}

// RepoServer_isPkgPresent holds the arguments for a server call to RepoServer.isPkgPresent.
type RepoServer_isPkgPresent struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  RepoServer_isPkgPresent_Params
	Results RepoServer_isPkgPresent_Results
}

type RepoServer_isPkgPresent_Params struct{ capnp.Struct }

// RepoServer_isPkgPresent_Params_TypeID is the unique identifier for the type RepoServer_isPkgPresent_Params.
const RepoServer_isPkgPresent_Params_TypeID = 0x97df26785dd758dd

func NewRepoServer_isPkgPresent_Params(s *capnp.Segment) (RepoServer_isPkgPresent_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RepoServer_isPkgPresent_Params{st}, err
}

func NewRootRepoServer_isPkgPresent_Params(s *capnp.Segment) (RepoServer_isPkgPresent_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return RepoServer_isPkgPresent_Params{st}, err
}

func ReadRootRepoServer_isPkgPresent_Params(msg *capnp.Message) (RepoServer_isPkgPresent_Params, error) {
	root, err := msg.RootPtr()
	return RepoServer_isPkgPresent_Params{root.Struct()}, err
}

func (s RepoServer_isPkgPresent_Params) String() string {
	str, _ := text.Marshal(0x97df26785dd758dd, s.Struct)
	return str
}

func (s RepoServer_isPkgPresent_Params) Pkg() (Pkg, error) {
	p, err := s.Struct.Ptr(0)
	return Pkg{Struct: p.Struct()}, err
}

func (s RepoServer_isPkgPresent_Params) HasPkg() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s RepoServer_isPkgPresent_Params) SetPkg(v Pkg) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewPkg sets the pkg field to a newly
// allocated Pkg struct, preferring placement in s's segment.
func (s RepoServer_isPkgPresent_Params) NewPkg() (Pkg, error) {
	ss, err := NewPkg(s.Struct.Segment())
	if err != nil {
		return Pkg{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// RepoServer_isPkgPresent_Params_List is a list of RepoServer_isPkgPresent_Params.
type RepoServer_isPkgPresent_Params_List struct{ capnp.List }

// NewRepoServer_isPkgPresent_Params creates a new list of RepoServer_isPkgPresent_Params.
func NewRepoServer_isPkgPresent_Params_List(s *capnp.Segment, sz int32) (RepoServer_isPkgPresent_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return RepoServer_isPkgPresent_Params_List{l}, err
}

func (s RepoServer_isPkgPresent_Params_List) At(i int) RepoServer_isPkgPresent_Params {
	return RepoServer_isPkgPresent_Params{s.List.Struct(i)}
}

func (s RepoServer_isPkgPresent_Params_List) Set(i int, v RepoServer_isPkgPresent_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RepoServer_isPkgPresent_Params_List) String() string {
	str, _ := text.MarshalList(0x97df26785dd758dd, s.List)
	return str
}

// RepoServer_isPkgPresent_Params_Promise is a wrapper for a RepoServer_isPkgPresent_Params promised by a client call.
type RepoServer_isPkgPresent_Params_Promise struct{ *capnp.Pipeline }

func (p RepoServer_isPkgPresent_Params_Promise) Struct() (RepoServer_isPkgPresent_Params, error) {
	s, err := p.Pipeline.Struct()
	return RepoServer_isPkgPresent_Params{s}, err
}

func (p RepoServer_isPkgPresent_Params_Promise) Pkg() Pkg_Promise {
	return Pkg_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type RepoServer_isPkgPresent_Results struct{ capnp.Struct }

// RepoServer_isPkgPresent_Results_TypeID is the unique identifier for the type RepoServer_isPkgPresent_Results.
const RepoServer_isPkgPresent_Results_TypeID = 0xccea0ca373f73a7c

func NewRepoServer_isPkgPresent_Results(s *capnp.Segment) (RepoServer_isPkgPresent_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RepoServer_isPkgPresent_Results{st}, err
}

func NewRootRepoServer_isPkgPresent_Results(s *capnp.Segment) (RepoServer_isPkgPresent_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return RepoServer_isPkgPresent_Results{st}, err
}

func ReadRootRepoServer_isPkgPresent_Results(msg *capnp.Message) (RepoServer_isPkgPresent_Results, error) {
	root, err := msg.RootPtr()
	return RepoServer_isPkgPresent_Results{root.Struct()}, err
}

func (s RepoServer_isPkgPresent_Results) String() string {
	str, _ := text.Marshal(0xccea0ca373f73a7c, s.Struct)
	return str
}

func (s RepoServer_isPkgPresent_Results) Present() bool {
	return s.Struct.Bit(0)
}

func (s RepoServer_isPkgPresent_Results) SetPresent(v bool) {
	s.Struct.SetBit(0, v)
}

// RepoServer_isPkgPresent_Results_List is a list of RepoServer_isPkgPresent_Results.
type RepoServer_isPkgPresent_Results_List struct{ capnp.List }

// NewRepoServer_isPkgPresent_Results creates a new list of RepoServer_isPkgPresent_Results.
func NewRepoServer_isPkgPresent_Results_List(s *capnp.Segment, sz int32) (RepoServer_isPkgPresent_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return RepoServer_isPkgPresent_Results_List{l}, err
}

func (s RepoServer_isPkgPresent_Results_List) At(i int) RepoServer_isPkgPresent_Results {
	return RepoServer_isPkgPresent_Results{s.List.Struct(i)}
}

func (s RepoServer_isPkgPresent_Results_List) Set(i int, v RepoServer_isPkgPresent_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RepoServer_isPkgPresent_Results_List) String() string {
	str, _ := text.MarshalList(0xccea0ca373f73a7c, s.List)
	return str
}

// RepoServer_isPkgPresent_Results_Promise is a wrapper for a RepoServer_isPkgPresent_Results promised by a client call.
type RepoServer_isPkgPresent_Results_Promise struct{ *capnp.Pipeline }

func (p RepoServer_isPkgPresent_Results_Promise) Struct() (RepoServer_isPkgPresent_Results, error) {
	s, err := p.Pipeline.Struct()
	return RepoServer_isPkgPresent_Results{s}, err
}

type RepoSigner struct{ Client capnp.Client }

// RepoSigner_TypeID is the unique identifier for the type RepoSigner.
const RepoSigner_TypeID = 0xa3b158fb18c66958

func (c RepoSigner) Sign(ctx context.Context, params func(RepoSigner_sign_Params) error, opts ...capnp.CallOption) RepoSigner_sign_Results_Promise {
	if c.Client == nil {
		return RepoSigner_sign_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa3b158fb18c66958,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:RepoSigner",
			MethodName:    "sign",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(RepoSigner_sign_Params{Struct: s}) }
	}
	return RepoSigner_sign_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type RepoSigner_Server interface {
	Sign(RepoSigner_sign) error
}

func RepoSigner_ServerToClient(s RepoSigner_Server) RepoSigner {
	c, _ := s.(server.Closer)
	return RepoSigner{Client: server.New(RepoSigner_Methods(nil, s), c)}
}

func RepoSigner_Methods(methods []server.Method, s RepoSigner_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 1)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa3b158fb18c66958,
			MethodID:      0,
			InterfaceName: "dxpbspec.capnp:RepoSigner",
			MethodName:    "sign",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := RepoSigner_sign{c, opts, RepoSigner_sign_Params{Struct: p}, RepoSigner_sign_Results{Struct: r}}
			return s.Sign(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	return methods
}

// RepoSigner_sign holds the arguments for a server call to RepoSigner.sign.
type RepoSigner_sign struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  RepoSigner_sign_Params
	Results RepoSigner_sign_Results
}

type RepoSigner_sign_Params struct{ capnp.Struct }

// RepoSigner_sign_Params_TypeID is the unique identifier for the type RepoSigner_sign_Params.
const RepoSigner_sign_Params_TypeID = 0xdfcb03a7e729b2db

func NewRepoSigner_sign_Params(s *capnp.Segment) (RepoSigner_sign_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return RepoSigner_sign_Params{st}, err
}

func NewRootRepoSigner_sign_Params(s *capnp.Segment) (RepoSigner_sign_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return RepoSigner_sign_Params{st}, err
}

func ReadRootRepoSigner_sign_Params(msg *capnp.Message) (RepoSigner_sign_Params, error) {
	root, err := msg.RootPtr()
	return RepoSigner_sign_Params{root.Struct()}, err
}

func (s RepoSigner_sign_Params) String() string {
	str, _ := text.Marshal(0xdfcb03a7e729b2db, s.Struct)
	return str
}

func (s RepoSigner_sign_Params) Repo() (Repo, error) {
	p, err := s.Struct.Ptr(0)
	return Repo{Struct: p.Struct()}, err
}

func (s RepoSigner_sign_Params) HasRepo() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s RepoSigner_sign_Params) SetRepo(v Repo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRepo sets the repo field to a newly
// allocated Repo struct, preferring placement in s's segment.
func (s RepoSigner_sign_Params) NewRepo() (Repo, error) {
	ss, err := NewRepo(s.Struct.Segment())
	if err != nil {
		return Repo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s RepoSigner_sign_Params) Pkg() (Pkg, error) {
	p, err := s.Struct.Ptr(1)
	return Pkg{Struct: p.Struct()}, err
}

func (s RepoSigner_sign_Params) HasPkg() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s RepoSigner_sign_Params) SetPkg(v Pkg) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewPkg sets the pkg field to a newly
// allocated Pkg struct, preferring placement in s's segment.
func (s RepoSigner_sign_Params) NewPkg() (Pkg, error) {
	ss, err := NewPkg(s.Struct.Segment())
	if err != nil {
		return Pkg{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// RepoSigner_sign_Params_List is a list of RepoSigner_sign_Params.
type RepoSigner_sign_Params_List struct{ capnp.List }

// NewRepoSigner_sign_Params creates a new list of RepoSigner_sign_Params.
func NewRepoSigner_sign_Params_List(s *capnp.Segment, sz int32) (RepoSigner_sign_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return RepoSigner_sign_Params_List{l}, err
}

func (s RepoSigner_sign_Params_List) At(i int) RepoSigner_sign_Params {
	return RepoSigner_sign_Params{s.List.Struct(i)}
}

func (s RepoSigner_sign_Params_List) Set(i int, v RepoSigner_sign_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RepoSigner_sign_Params_List) String() string {
	str, _ := text.MarshalList(0xdfcb03a7e729b2db, s.List)
	return str
}

// RepoSigner_sign_Params_Promise is a wrapper for a RepoSigner_sign_Params promised by a client call.
type RepoSigner_sign_Params_Promise struct{ *capnp.Pipeline }

func (p RepoSigner_sign_Params_Promise) Struct() (RepoSigner_sign_Params, error) {
	s, err := p.Pipeline.Struct()
	return RepoSigner_sign_Params{s}, err
}

func (p RepoSigner_sign_Params_Promise) Repo() Repo_Promise {
	return Repo_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

func (p RepoSigner_sign_Params_Promise) Pkg() Pkg_Promise {
	return Pkg_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

type RepoSigner_sign_Results struct{ capnp.Struct }

// RepoSigner_sign_Results_TypeID is the unique identifier for the type RepoSigner_sign_Results.
const RepoSigner_sign_Results_TypeID = 0xd930226c417f868e

func NewRepoSigner_sign_Results(s *capnp.Segment) (RepoSigner_sign_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RepoSigner_sign_Results{st}, err
}

func NewRootRepoSigner_sign_Results(s *capnp.Segment) (RepoSigner_sign_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return RepoSigner_sign_Results{st}, err
}

func ReadRootRepoSigner_sign_Results(msg *capnp.Message) (RepoSigner_sign_Results, error) {
	root, err := msg.RootPtr()
	return RepoSigner_sign_Results{root.Struct()}, err
}

func (s RepoSigner_sign_Results) String() string {
	str, _ := text.Marshal(0xd930226c417f868e, s.Struct)
	return str
}

// RepoSigner_sign_Results_List is a list of RepoSigner_sign_Results.
type RepoSigner_sign_Results_List struct{ capnp.List }

// NewRepoSigner_sign_Results creates a new list of RepoSigner_sign_Results.
func NewRepoSigner_sign_Results_List(s *capnp.Segment, sz int32) (RepoSigner_sign_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return RepoSigner_sign_Results_List{l}, err
}

func (s RepoSigner_sign_Results_List) At(i int) RepoSigner_sign_Results {
	return RepoSigner_sign_Results{s.List.Struct(i)}
}

func (s RepoSigner_sign_Results_List) Set(i int, v RepoSigner_sign_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s RepoSigner_sign_Results_List) String() string {
	str, _ := text.MarshalList(0xd930226c417f868e, s.List)
	return str
}

// RepoSigner_sign_Results_Promise is a wrapper for a RepoSigner_sign_Results promised by a client call.
type RepoSigner_sign_Results_Promise struct{ *capnp.Pipeline }

func (p RepoSigner_sign_Results_Promise) Struct() (RepoSigner_sign_Results, error) {
	s, err := p.Pipeline.Struct()
	return RepoSigner_sign_Results{s}, err
}

const schema_902d2bfc3bbf0d43 = "x\xda\xa4X}p\x14g\x19\x7f\x9e\xdd\x0b{w\xb9" +
	"\xcb\xf1\xceB)01\x05I\x85\xd8PB14\xe9" +
	"\x94$G\x91&C\xda\xdb\xa3\x08\xed\x14\xdb\xcde\xbd" +
	"\x1cw\xb9\xbb\xee^\x08A\xd3\x18:\x16\xfc\x83~\x80" +
	"\x8cC\x07\x9d\x92\x8a\x0e\x8e\x1d\x14\xf1\xa3v\xa0\xed\xd4" +
	"P\xac\xad\x0e\xb4\x88D\xb1\xd4\xa1\x16dt\x1a\x1c\xa6" +
	"a\xa8]\xe7}\xf7\xde\xbdM\xf6\x8eD\xfdg\xb3\xbb" +
	"\xefs\xcf\xe7\xef\xf9=\xcff\xc9\x9a\xb2f\xa1\xae\xec" +
	"s!\x00\xe5\xc7e\xd3\xcc\x99}\xfb\xdb\x86>\xfb\xf4" +
	"\x13@B\x82\xb92\xf8\xca]\x9f|\xbe\xf6\x19\x00\x94" +
	"\xfb\xa4!yP\x92\x00\xee\xe8\x97B\x08hn\xbdv" +
	"yOF\xdd\xbd\x03\x94\x9b\x10\x01<\xf4\xa8\xda;\x1f" +
	"\x01\xe5Zo\x13\xa0\x19?\x9a\x19\xbe\xf5\xc4\xd87\x81" +
	"\xcc\xe6\xe7\xed\xde(\x82\xc7\xc4\x1d\xdd\x8f\xfeM\xfe\xe8" +
	") \xb3\xf8I\x83w)=9\xb7\xe1\xcc\xc6-\xb7" +
	"\xbe\xf7m s\x10\xa0\x0c\xe9\xd1<\xaf^P:<" +
	"3\xdd\x94\xfc\xfd[{\x81\x84\xc4q\xfe\xb5{\x7f%" +
	"\xaf\xf3J\x00\xb2\xe2}C>I\xef\xcc\xea\x0d\xc6W" +
	"\xff\xb0$\xbb\x0f\x94\xb9\xb6\x8b/y\xb7Rm\xc3L" +
	"\xdb\x86\xc4\xf1\x9b\xafo\xf8\xc9\x0b.m\x97\xbc\xa7\xe4" +
	"\xabL\xdb\xa8w\xb5<\xdbG\xb5\xf5\x8f\xfe\xfc\x91\x91" +
	"\xda\xc1\x03.a\xf4\xbd)\x07\xa9\xc8\x1d>\x9f\x84\xf2" +
	"KLZ9ut\xfb_^\xff\xe7\x81|z\xacP" +
	"\xf6\xfb\xda\xa8\xf1\x17}\xbd\x80\xa6_\xbd\x7f\xf0\xb8\xb9" +
	"\xee\x90+\xd5>\xff\x15y\xa6\x9f\x1a'\xfe\xe5\x80\xe6" +
	"-\xd7w}\xff\xf1_\xee>\xe22<\xd3?\"\xcf" +
	"c\x82\x95\xfe\xedr?\xbd3g\xd7]~\xf2\xe4]" +
	"cG\x80\xdcd\x9b\xd5\xfcs\xa8\xd9n?\x8d\xf9\xdd" +
	"\xba\xdb\xb7\x9f\xbf\xdc\xfa\x0bGYv\xfa\xb7\xd1\xe47" +
	"T<q\xdb3\xb2\xf6\xb2\xcbN\x9f\xff\xb0<\xc8\xec" +
	"\xf4\xfbW\xcb\x07\xe9\xdd\xf5\x9f}2\xfa\xce\xc6]\xc7" +
	"&\x8a>\xeb?,\xefe\xa2{\xfc\xdb\xe5\x0f\x98K" +
	"c\xaf]\\\xbbv\xc5\xb6WA\x09\xa1#RjZ" +
	"~\xdb?$\x9ff\xf2'\xfd\x1f\x02\x9agv\xe2\xb4" +
	"\xe3W\xef\x7f\xc3r\x9fyw\xb0\xbc\x86z\xf7\xe0\xd9" +
	"\xcf|w\xe1\xd7?=\xe1\x0c\xec\xd9\xf2\xa54\xb0\xbd" +
	"\xe54\xb0\xaf5~l\xbc\x10\xf8\xfb[\xa0\xcc)T" +
	"\xbb\xdc\xaa6\x13\xf0\xac\xff^\xeb\xef\x8el\xfa\xa3\x03" +
	"v\x1f\x94\xb7Q\xddO=9\xd0\x92\x9a\xbf\xe4\xac\x05" +
	";vr\xb2\xbc\x91\x9e\xbc{\xfe\xa7\x8f<p!3" +
	"be\xcb\xb2:N\xe9\x92\x077\xb54\xfc\xf0\xb9?" +
	";\x05\x98V\x94G\x99\xc0\xf3\xe1\x15[N}\xe3\xd0" +
	"9\xcb\xaa%@\x02\x0fQ\x81\xca\x00\x15\xf8\xd3\xe1E" +
	"\x1f\xfe@\xfc\xed{y\xcc\x0bT\xe0\xee\x00\x0blU" +
	"\x80\x02e\xc3\xae\xd0\xe0\xb6e{\xce;*\xb6\x9f*" +
	"\xf0\x98kf\xcc\x95\"\x07\x8f\x9d\x072\xd7\xd6\xbd3" +
	"\xc0\xdae/\xd3]\xf9\x1d\xdf\xa2#\xf7\xae\xbc0\xce" +
	"\xfd\x00\xf3n\x98\x094\x1cx\xf4\xe3\xd4\x97w_\xb0" +
	"4X9\x09\xfc\x95\xea\xde\xf1\xb8\xc7\xb3'3\xeb\x12" +
	"\xad\x1a\x16\xaa\xc6t\xc8g\x03C\xf2\xfb\x01zw\x8e" +
	"\xb9(\x0f]\xa9\xbcx\xac\xe5#Pf\xd9\xb9o\x08" +
	"FY\x0cAj\xe7\xa6\xa7{\xc76\xdd^3:Q" +
	"\x1b\x8dV\xd6\x82\xcf\xc9\xddAz\x97\x08\x1e\x024\xd7" +
	"\x9f\xe8_8\x9c{e\xd4\x110V0\xe68\xf6\x95" +
	"\xea\xf2\x1f\xf5\xed\xbb\xe2\x82\xe8?\x82\xa7\xe4kL\xc5" +
	"\xd5\xe0jy^\x05\x85\xe8\xc1\x15#\xaf\xbf\xfd\xfc\xbf" +
	"\x0a\x91\xf9*F\xa8\x923\xdf\x8a\xbf\xf3\xda\xcbG\xaf" +
	":0\xf6\xef S\x9f\x18\xecj\xf8uT\x18s\x18" +
	"\xbed\x9d\xf4\xbdX\xbb\xf9\xd5\xfb.^s\x06x:" +
	"\xd8A\x03|\x9f\x05xz\xdf\xcc\xec\xc3\xbf\xa9\xfc\xd4" +
	"Yf\xach\xa4\x02\xbe\x8a&\xa85;\xb7d;\x8c" +
	"\xac\x16\xc3\xc515\x9b\xce6\xb6Hz\xac+\x82\xa8" +
	"\xdc\x86\x02\x00\xe9o\x04@$=a\x00\x14Hw\x07" +
	"\x00\x8a$\xb1\x14\x00=D\x8d\x02`\x19\xd9H\x9f\xa6" +
	"\x91u\xf4I\"J\x0d\x00zIk\x1b\x00\xfa\xc8*" +
	"z\xe6'wG\x01\x9a\xd2\x19U\x8fu\x0d\xa8\xf4Z" +
	"\xbf\xcc\xcc\xffm\x07\xa9\xc7HU\xa9z\xf7\x97\xeaM" +
	"vm\xef1\x00\xad7\xcb\xd9\x9b\xe5\xd6\x9bP\xa2\xfe" +
	"\xcez\x93^\xda{\x8c\x14\x00Tm\xb9\xb3\xbe~\x99" +
	"\xc9\xae\x96\x88\x1d\x8d\x98\x8ff}FOj\xfa\xe2\x8e" +
	"\x9eD\xaasAT3z\xa4T\xceP<\xa2\x07\xc0" +
	"\x83\x00$\xd8\x08\xa0xETf\x08\xd8d\xe4\xd4\\" +
	"\x8f\x81\xa1\x02\x05\x02b\x08\xd0\xd6\xea\xc9km\xcbt" +
	"\xac\xd5\xf4\xcd\x9a\xbe\xb8WO\xe4\xb45\x998\xd3\x9d" +
	"\xca\xa1\xe1\xf2 \xa2\xc6\x92j\\[\xdc\xa9\xe5\xd4D" +
	"\xcaX\x10\xa9Ru\xb5\xdbp\xe9\x8cj\xd9L^i" +
	"\xc2\x88$\xe3\x11]3\xb4t\x8e\xcb;}\x9e_\xf0" +
	"Y\xca&\xe38\xbd\x00c@\x9c\xeep\x98\x175\xd2" +
	"dyA\xeb\x1a\x10\xcb\x00\xecY\x87\x1c D\x09\x83" +
	"@VIX $\xe4\xedC\x1a\x1e\x02\x81\xd4I(" +
	"\xd8\xb4\x81\x1cy\xa4z\x13\x08\xa4R\x1a\xc8\x07\xd8\x8c" +
	"fLM\x87\xb5pO\x02\xc4T\xce\xf9\x18J\xe5\xc2" +
	"}\xcd\x18AwFW\xebj\xb6+\x1f~LMG" +
	"\x92\xf1\xb0U\xb2&\x96\xd7q\xe1\xb7\x01(\x01\x11\x95" +
	"\x9b\x05K7\x15\x04\x1a9\x08\x88\x8e\xe0\x05gf\x13" +
	"\xf1\xb4\x86:\x8d\xdf\xc3\xe2\xe7\xec\x86\x9cc\x09\xa9\x01" +
	"\x81\x94I!#\x11O\x8fwR\x98Xv\x00\xaah" +
	":S\xc4I\x019\x1d\x92\xc7\xa2 \x90\x04M$'" +
	"a\xe4\x0dL6\xb6\x81@\xd6\xd1Dr\x0aD\xbe\x8f" +
	"\xd0\x96\x11H\x8b\x84\xa2\xcd\xee\xc8\x87\"\xf9\xc2V\x10" +
	"H\xadd&5-\xdb\x92Jl\x06\xd4\x9a\xd1\xd4\xb5" +
	"x\xc2\xc8Q\x7f\xa0\x19M\x8eE\xeb\xc9\xc8\xa9z." +
	"\xdc\x93\x82\xa6$\xcbP\xf1\xbc\xb7\xea\xb1p&g\xf5" +
	"\x87\xa6\xdf\x93Ik\x0b\"\x0co\x0cb<\xe5\x8b(" +
	"\xe2\x16\x88\xa8,\x11\x10q\x06e\x1aRK;g\xa1" +
	"\x88\xca\xb2R(\x9c\xbc\x9fxb\x99\x83\xab\xd2\x9d\xd1" +
	"*Vm\x9a\\/c\x1f2\x87\xb1\x8fo>\x80\x98" +
	"IJ\x9a\xae\xbb~k#G\xd4Xy\xbd\xb4*\x9c" +
	"c\x1ds\xa4\xeeM\x0b\xc2hO'\xe4{\x18\xa9\xee" +
	"`\x106c]Z,\xf9\xc5\x8c.\xdc\xa7\xf5\xe6\xfb" +
	"\xd6hM\xafN\xe4XF9.Ar\xa5\xb3(\xdd" +
	"\xd0D\x8a\xffk\xe7J.\xaa\xe1\x05M\x86m2K" +
	"\xe5\x0c\xe0?\xe0\x05\xadb\x15-\x00\x9d/|\xc8\xc7" +
	"\x0b!4Z\x9fd\xf2\xa2\x83\x94Ik\xe3\xe3\xe1\xbc" +
	"\xb1\xbe\x8a\x05d\xe7\xd5\xde\x83\x90\xaf=\xa4\x8e\xd2F" +
	"5\xcd+_\xf1\x90\xaf\xe0d\xf6R\x10H\xd0A\x0d" +
	"U\x1dn(\xda\xb6$=\xa9[}\xc5\xf3\xa5\xd6\x00" +
	"(\x0f\x8b\xa8t\x09H8\xf04\xda\xff\x9d\"*Y" +
	"\x01\x89p\xcb\x0c\x06\x94\xee0\x80\xd2%\xa2\x92\x13\x90" +
	"\x88\xc2\x0c\x14\x01\xc8cK\x01\x94\x94\x88\xca\x16\x01C" +
	"t\xda`\xa8\xf0!\x91\x87bW\xc6\xc8\xb5\xe8\xb1." +
	"J \xae\xd3\x81\x84\xb1R\xcf\x18\x06\xa7\x96*#\xab" +
	"i\x9d\xe8\x05\x01\xbdP\xb2\xfa6\xd3\xab\xa1qL_" +
	"B,\xaaU\xb9(\xae\xa6\x80\x93P\xaf\x9e\xd4qz" +
	"a[\x9d\x00\x94\xc9\xe6G1\x06\x0d\x17\xd4\x0fd-" +
	"9\x17{z&\xcc/\xce\xe2\xa9\x9c\xcd\x10\xae\xc8l" +
	"\xa6\xd5\x17S\x16\xb5m\xdf`\x80N@uS\xc45" +
	"\xed\x9c\xb9\xc8&\xe3\x06\x06@\xc0\xc0\x0d\xa72\xe7\xc5" +
	"\x02\x97\x95\x98\xf8\xbd\xac\x14H\xf8g\x03%\x9b)\xe5" +
	" \xdcW\xac\xbd\x8b\xa8.]\xb8RI\xe3\x03\xdfA" +
	"\xbf5\x05\xfa\xb5\xdb\xa0v~\x81\x7fC\xba\x96\xcd\xe0" +
	"\xf4\xc2nl\x99\x9a\x84b\xdcy\xe3\xd3E\xb3\xd8E" +
	",R\xb9R\x83\xfa\xffZSn\xb0W\x15\xab\xa0S" +
	"q*\x13\xc7 \x08\x18t\xa8\x9bV\xcc\xd7<\xb5O" +
	"dv{)t\xf1QT\xd2\xb2\x19\x8b\xf9\x8a\x15\xc2" +
	"\xaeC\x8d\xa3\x0ei\xb5[\xe3\xf8,\xc58Sh0" +
	"\xbeL\x96\xc2V\"MA\xe3jY{\xdb\x13\x93q" +
	"k\xd3\xe3\xbf^E\x9dl\x16QYSp\xbc\x95\xbe" +
	"\xbbGD%By\x14-\x1em\xa7\xb9\xbdWD\xe5" +
	"\x81\xa9E#m\xd6\xf4)4d\x01X\xac\x9e\x8e5" +
	"Y\x98H_\xce%\x8d\xff\xdb\x05\xf974!\x9b\xac" +
	"\xd9\xc5)\x0eB\x94\xbc\xc6\x0f\x94\xff\xaa\xfc\xf9.\x9e" +
	"\xcab\xe4Z\xf1o@<%e\x8bR\xc9d\x1f&" +
	"%\xea]\xea\x13\xa3\x18\xe5O\xda\x8c\xff\x09\x00\x00\xff" +
	"\xff\xc1\xb0\x8c-"

func init() {
	schemas.Register(schema_902d2bfc3bbf0d43,
		0x838f23a24aa17915,
		0x8893616f95ebf97a,
		0x89f8c826c56fbd67,
		0x8ef013e6606d8801,
		0x97df26785dd758dd,
		0x99cccf6b3f6e15c5,
		0x9c7030d67b735825,
		0xa3b158fb18c66958,
		0xa5812dda5fb6f17d,
		0xa5eec3de87bdd251,
		0xaf55ffc6814f610a,
		0xb493b87ea692fb20,
		0xb4f83bd186eb3119,
		0xb749ebe0872f31d4,
		0xbb6513902c830e39,
		0xbe925dd3f100fcb5,
		0xc0823e5353e8c1f8,
		0xc74ff5c606018dd7,
		0xc8fe80289e1ed959,
		0xccea0ca373f73a7c,
		0xd86ab4ce49a45704,
		0xd930226c417f868e,
		0xda6fe4545fb3e0d4,
		0xdc9aaa39416a5930,
		0xddaf85d2783e42a0,
		0xdfcb03a7e729b2db,
		0xe0953482810f9258,
		0xe0bea950071b144c,
		0xe44348b429099d1d,
		0xe4935e6cf760a539,
		0xe9176f9504047e88,
		0xf041bee81df2a213,
		0xf12a2f6af8778f16,
		0xf1bf74c5287dc857,
		0xf29c79ac0b2566be,
		0xf3a0cdc3da003ea9,
		0xf5bdbbc1d36794d7,
		0xf80252c439688169,
		0xf9e84ec0762dad79,
		0xfe1dc95c70159cd5)
}
